{
  "Lucene.Net.Search.Highlight.DefaultEncoder.html": {
    "href": "Lucene.Net.Search.Highlight.DefaultEncoder.html",
    "title": "Class DefaultEncoder | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class DefaultEncoder Simple IEncoder implementation that does not modify the output Inheritance System.Object DefaultEncoder Implements IEncoder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class DefaultEncoder : IEncoder Constructors | Improve this Doc View Source DefaultEncoder() Declaration public DefaultEncoder() Methods | Improve this Doc View Source EncodeText(String) Declaration public virtual string EncodeText(string originalText) Parameters Type Name Description System.String originalText Returns Type Description System.String Implements IEncoder"
  },
  "Lucene.Net.Search.Highlight.GradientFormatter.html": {
    "href": "Lucene.Net.Search.Highlight.GradientFormatter.html",
    "title": "Class GradientFormatter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class GradientFormatter Formats text with different color intensity depending on the score of the term. Inheritance System.Object GradientFormatter SpanGradientFormatter Implements IFormatter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class GradientFormatter : IFormatter Constructors | Improve this Doc View Source GradientFormatter(Single, String, String, String, String) Sets the color range for the IDF scores Declaration public GradientFormatter(float maxScore, string minForegroundColor, string maxForegroundColor, string minBackgroundColor, string maxBackgroundColor) Parameters Type Name Description System.Single maxScore The score (and above) displayed as maxColor (See MaxTermWeight which can be used to callibrate scoring scale) System.String minForegroundColor The hex color used for representing IDF scores of zero eg FFFFFF (white) or null if no foreground color required System.String maxForegroundColor The largest hex color used for representing IDF scores eg 000000 (black) or null if no foreground color required System.String minBackgroundColor The hex color used for representing IDF scores of zero eg FFFFFF (white) or null if no background color required System.String maxBackgroundColor The largest hex color used for representing IDF scores eg 000000 (black) or null if no background color required Fields | Improve this Doc View Source m_bgBMax Declaration protected int m_bgBMax Field Value Type Description System.Int32 | Improve this Doc View Source m_bgBMin Declaration protected int m_bgBMin Field Value Type Description System.Int32 | Improve this Doc View Source m_bgGMax Declaration protected int m_bgGMax Field Value Type Description System.Int32 | Improve this Doc View Source m_bgGMin Declaration protected int m_bgGMin Field Value Type Description System.Int32 | Improve this Doc View Source m_bgRMax Declaration protected int m_bgRMax Field Value Type Description System.Int32 | Improve this Doc View Source m_bgRMin Declaration protected int m_bgRMin Field Value Type Description System.Int32 | Improve this Doc View Source m_fgBMax Declaration protected int m_fgBMax Field Value Type Description System.Int32 | Improve this Doc View Source m_fgBMin Declaration protected int m_fgBMin Field Value Type Description System.Int32 | Improve this Doc View Source m_fgGMax Declaration protected int m_fgGMax Field Value Type Description System.Int32 | Improve this Doc View Source m_fgGMin Declaration protected int m_fgGMin Field Value Type Description System.Int32 | Improve this Doc View Source m_fgRMax Declaration protected int m_fgRMax Field Value Type Description System.Int32 | Improve this Doc View Source m_fgRMin Declaration protected int m_fgRMin Field Value Type Description System.Int32 | Improve this Doc View Source m_highlightBackground Declaration protected bool m_highlightBackground Field Value Type Description System.Boolean | Improve this Doc View Source m_highlightForeground Declaration protected bool m_highlightForeground Field Value Type Description System.Boolean Methods | Improve this Doc View Source GetBackgroundColorString(Single) Declaration protected virtual string GetBackgroundColorString(float score) Parameters Type Name Description System.Single score Returns Type Description System.String | Improve this Doc View Source GetForegroundColorString(Single) Declaration protected virtual string GetForegroundColorString(float score) Parameters Type Name Description System.Single score Returns Type Description System.String | Improve this Doc View Source HexToInt32(String) Converts a hex string into an System.Int32 . NOTE: This was hexToInt() in Lucene Declaration public static int HexToInt32(string hex) Parameters Type Name Description System.String hex A string in capital or lower case hex, of no more then 16 characters. Returns Type Description System.Int32 Exceptions Type Condition System.FormatException if the string is more than 16 characters long, or if any character is not in the set [0-9a-fA-f] | Improve this Doc View Source HighlightTerm(String, TokenGroup) Declaration public virtual string HighlightTerm(string originalText, TokenGroup tokenGroup) Parameters Type Name Description System.String originalText TokenGroup tokenGroup Returns Type Description System.String Implements IFormatter"
  },
  "Lucene.Net.Search.Highlight.Highlighter.html": {
    "href": "Lucene.Net.Search.Highlight.Highlighter.html",
    "title": "Class Highlighter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class Highlighter Class used to markup highlighted terms found in the best sections of a text, using configurable IFragmenter , Scorer , IFormatter , IEncoder and tokenizers. Inheritance System.Object Highlighter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class Highlighter Constructors | Improve this Doc View Source Highlighter(IFormatter, IEncoder, IScorer) Declaration public Highlighter(IFormatter formatter, IEncoder encoder, IScorer fragmentScorer) Parameters Type Name Description IFormatter formatter IEncoder encoder IScorer fragmentScorer | Improve this Doc View Source Highlighter(IFormatter, IScorer) Declaration public Highlighter(IFormatter formatter, IScorer fragmentScorer) Parameters Type Name Description IFormatter formatter IScorer fragmentScorer | Improve this Doc View Source Highlighter(IScorer) Declaration public Highlighter(IScorer fragmentScorer) Parameters Type Name Description IScorer fragmentScorer Fields | Improve this Doc View Source DEFAULT_MAX_CHARS_TO_ANALYZE Declaration public static readonly int DEFAULT_MAX_CHARS_TO_ANALYZE Field Value Type Description System.Int32 Properties | Improve this Doc View Source Encoder Declaration public virtual IEncoder Encoder { get; set; } Property Value Type Description IEncoder | Improve this Doc View Source FragmentScorer Declaration public virtual IScorer FragmentScorer { get; set; } Property Value Type Description IScorer | Improve this Doc View Source MaxDocCharsToAnalyze Declaration public virtual int MaxDocCharsToAnalyze { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TextFragmenter Declaration public virtual IFragmenter TextFragmenter { get; set; } Property Value Type Description IFragmenter Methods | Improve this Doc View Source GetBestFragment(Analyzer, String, String) Highlights chosen terms in a text, extracting the most relevant section. This is a convenience method that calls GetBestFragment(TokenStream, String) Declaration public string GetBestFragment(Analyzer analyzer, string fieldName, string text) Parameters Type Name Description Lucene.Net.Analysis.Analyzer analyzer the analyzer that will be used to split text into chunks System.String fieldName Name of field used to influence analyzer's tokenization policy System.String text text to highlight terms in Returns Type Description System.String highlighted text fragment or null if no terms found Exceptions Type Condition InvalidTokenOffsetsException thrown if any token's EndOffset exceeds the provided text's length | Improve this Doc View Source GetBestFragment(TokenStream, String) Highlights chosen terms in a text, extracting the most relevant section. The document text is analysed in chunks to record hit statistics across the document. After accumulating stats, the fragment with the highest score is returned Declaration public string GetBestFragment(TokenStream tokenStream, string text) Parameters Type Name Description Lucene.Net.Analysis.TokenStream tokenStream A stream of tokens identified in the text parameter, including offset information. This is typically produced by an analyzer re-parsing a document's text. Some work may be done on retrieving TokenStreams more efficiently by adding support for storing original text position data in the Lucene index but this support is not currently available (as of Lucene 1.4 rc2). System.String text text to highlight terms in Returns Type Description System.String highlighted text fragment or null if no terms found Exceptions Type Condition InvalidTokenOffsetsException thrown if any token's EndOffset exceeds the provided text's length | Improve this Doc View Source GetBestFragments(Analyzer, String, String, Int32) Highlights chosen terms in a text, extracting the most relevant sections. This is a convenience method that calls GetBestFragments(TokenStream, String, Int32) Declaration public string[] GetBestFragments(Analyzer analyzer, string fieldName, string text, int maxNumFragments) Parameters Type Name Description Lucene.Net.Analysis.Analyzer analyzer the analyzer that will be used to split text into chunks System.String fieldName the name of the field being highlighted (used by analyzer) System.String text text to highlight terms in System.Int32 maxNumFragments the maximum number of fragments. Returns Type Description System.String [] highlighted text fragments (between 0 and maxNumFragments number of fragments) Exceptions Type Condition InvalidTokenOffsetsException thrown if any token's EndOffset exceeds the provided text's length | Improve this Doc View Source GetBestFragments(TokenStream, String, Int32) Highlights chosen terms in a text, extracting the most relevant sections. The document text is analysed in chunks to record hit statistics across the document. After accumulating stats, the fragments with the highest scores are returned as an array of strings in order of score (contiguous fragments are merged into one in their original order to improve readability) Declaration public string[] GetBestFragments(TokenStream tokenStream, string text, int maxNumFragments) Parameters Type Name Description Lucene.Net.Analysis.TokenStream tokenStream System.String text text to highlight terms in System.Int32 maxNumFragments the maximum number of fragments. Returns Type Description System.String [] highlighted text fragments (between 0 and maxNumFragments number of fragments) Exceptions Type Condition InvalidTokenOffsetsException thrown if any token's EndOffset exceeds the provided text's length | Improve this Doc View Source GetBestFragments(TokenStream, String, Int32, String) Highlights terms in the text , extracting the most relevant sections and concatenating the chosen fragments with a separator (typically \"...\"). The document text is analysed in chunks to record hit statistics across the document. After accumulating stats, the fragments with the highest scores are returned in order as \"separator\" delimited strings. Declaration public virtual string GetBestFragments(TokenStream tokenStream, string text, int maxNumFragments, string separator) Parameters Type Name Description Lucene.Net.Analysis.TokenStream tokenStream System.String text text to highlight terms in System.Int32 maxNumFragments the maximum number of fragments. System.String separator the separator used to intersperse the document fragments (typically \"...\") Returns Type Description System.String highlighted text Exceptions Type Condition InvalidTokenOffsetsException thrown if any token's EndOffset exceeds the provided text's length | Improve this Doc View Source GetBestTextFragments(TokenStream, String, Boolean, Int32) Low level api to get the most relevant (formatted) sections of the document. This method has been made public to allow visibility of score information held in TextFragment objects. Thanks to Jason Calabrese for help in redefining the interface. Declaration public TextFragment[] GetBestTextFragments(TokenStream tokenStream, string text, bool mergeContiguousFragments, int maxNumFragments) Parameters Type Name Description Lucene.Net.Analysis.TokenStream tokenStream System.String text System.Boolean mergeContiguousFragments System.Int32 maxNumFragments Returns Type Description TextFragment [] Exceptions Type Condition System.IO.IOException If there is a low-level I/O error InvalidTokenOffsetsException thrown if any token's EndOffset exceeds the provided text's length"
  },
  "Lucene.Net.Search.Highlight.html": {
    "href": "Lucene.Net.Search.Highlight.html",
    "title": "Namespace Lucene.Net.Search.Highlight | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Namespace Lucene.Net.Search.Highlight <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> The highlight package contains classes to provide \"keyword in context\" features typically used to highlight search terms in the text of results pages. The Highlighter class is the central component and can be used to extract the most interesting sections of a piece of text and highlight them, with the help of Fragmenter, fragment Scorer, and Formatter classes. Example Usage //... Above, create documents with two fields, one with term vectors (tv) and one without (notv) IndexSearcher searcher = new IndexSearcher(directory); QueryParser parser = new QueryParser(\"notv\", analyzer); Query query = parser.parse(\"million\"); TopDocs hits = searcher.search(query, 10); SimpleHTMLFormatter htmlFormatter = new SimpleHTMLFormatter(); Highlighter highlighter = new Highlighter(htmlFormatter, new QueryScorer(query)); for (int i = 0; i < 10;=\"\" i++)=\"\" {=\"\" int=\"\" id=\"hits.scoreDocs[i].doc;\" document=\"\" doc=\"searcher.doc(id);\" string=\"\" text=\"doc.get(\" notv\");\"=\"\" tokenstream=\"\" tokenstream=\"TokenSources.getAnyTokenStream(searcher.getIndexReader(),\" id,=\"\" \"notv\",=\"\" analyzer);=\"\" textfragment[]=\"\" frag=\"highlighter.getBestTextFragments(tokenStream,\" text,=\"\" false,=\"\" 10);//highlighter.getbestfragments(tokenstream,=\"\" text,=\"\" 3,=\"\" \"...\");=\"\" for=\"\" (int=\"\" j=\"0;\" j=\"\">< frag.length;=\"\" j++)=\"\" {=\"\" if=\"\" ((frag[j]=\"\" !=\"null)\" &&=\"\" (frag[j].getscore()=\"\"> 0)) { System.out.println((frag[j].toString())); } } //Term vector text = doc.get(\"tv\"); tokenStream = TokenSources.getAnyTokenStream(searcher.getIndexReader(), hits.scoreDocs[i].doc, \"tv\", analyzer); frag = highlighter.getBestTextFragments(tokenStream, text, false, 10); for (int j = 0; j < frag.length;=\"\" j++)=\"\" {=\"\" if=\"\" ((frag[j]=\"\" !=\"null)\" &&=\"\" (frag[j].getscore()=\"\"> 0)) { System.out.println((frag[j].toString())); } } System.out.println(\"-------------\"); } New features 06/02/2005 This release adds options for encoding (thanks to Nicko Cadell). An \"Encoder\" implementation such as the new SimpleHTMLEncoder class can be passed to the highlighter to encode all those non-xhtml standard characters such as & into legal values. This simple class may not suffice for some languages - Commons Lang has an implementation that could be used: escapeHtml(String) in http://svn.apache.org/viewcvs.cgi/jakarta/commons/proper/lang/trunk/src/java/org/apache/commons/lang/StringEscapeUtils.java?rev=137958&view=markup New features 22/12/2004 This release adds some new capabilities: Faster highlighting using Term vector support New formatting options to use color intensity to show informational value Options for better summarization by using term IDF scores to influence fragment selection The highlighter takes a TokenStream as input. Until now these streams have typically been produced using an Analyzer but the new class TokenSources provides helper methods for obtaining TokenStreams from the new TermVector position support (see latest CVS version). The new class GradientFormatter can use a scale of colors to highlight terms according to their score. A subtle use of color can help emphasise the reasons for matching (useful when doing \"MoreLikeThis\" queries and you want to see what the basis of the similarities are). The QueryScorer class has a new constructor which can use an IndexReader to derive the IDF (inverse document frequency) for each term in order to influence the score. This is useful for helping to extracting the most significant sections of a document and in supplying scores used by the new GradientFormatter to color significant words more strongly. The QueryScorer.getMaxWeight method is useful when passed to the GradientFormatter constructor to define the top score which is associated with the top color. Classes DefaultEncoder Simple IEncoder implementation that does not modify the output GradientFormatter Formats text with different color intensity depending on the score of the term. Highlighter Class used to markup highlighted terms found in the best sections of a text, using configurable IFragmenter , Scorer , IFormatter , IEncoder and tokenizers. InvalidTokenOffsetsException Exception thrown if TokenStream Tokens are incompatible with provided text NullFragmenter IFragmenter implementation which does not fragment the text. This is useful for highlighting the entire content of a document or field. OffsetLimitTokenFilter This Lucene.Net.Analysis.TokenFilter limits the number of tokens while indexing by adding up the current offset. PositionSpan Utility class to record Positions Spans This is a Lucene.NET INTERNAL API, use at your own risk QueryScorer IScorer implementation which scores text fragments by the number of unique query terms found. This class converts appropriate Lucene.Net.Search.Query s to Lucene.Net.Search.Spans.SpanQuery s and attempts to score only those terms that participated in generating the 'hit' on the document. QueryTermExtractor Utility class used to extract the terms used in a query, plus any weights. This class will not find terms for MultiTermQuery , RangeQuery and PrefixQuery classes so the caller must pass a rewritten query (see Rewrite(IndexReader) ) to obtain a list of expanded terms. QueryTermScorer IScorer implementation which scores text fragments by the number of unique query terms found. This class uses the QueryTermExtractor class to process determine the query terms and their boosts to be used. SimpleFragmenter IFragmenter implementation which breaks text up into same-size fragments with no concerns over spotting sentence boundaries. SimpleHTMLEncoder Simple IEncoder implementation to escape text for HTML output SimpleHTMLFormatter Simple IFormatter implementation to highlight terms with a pre and post tag SimpleSpanFragmenter IFragmenter implementation which breaks text up into same-size fragments but does not split up Spans . This is a simple sample class. SpanGradientFormatter Formats text with different color intensity depending on the score of the term using the span tag. GradientFormatter uses a bgcolor argument to the font tag which doesn't work in Mozilla, thus this class. TextFragment Low-level class used to record information about a section of a document with a score. TokenGroup One, or several overlapping tokens, along with the score(s) and the scope of the original text TokenSources Hides implementation issues associated with obtaining a Lucene.Net.Analysis.TokenStream for use with the Highlighter - can obtain from term vectors with offsets and positions or from an Analyzer re-parsing the stored content. see TokenStreamFromTermVector TokenStreamFromTermPositionVector Lucene.Net.Analysis.TokenStream created from a term vector field. WeightedSpanTerm Lightweight class to hold term, weight, and positions used for scoring this term. WeightedSpanTermExtractor Class used to extract WeightedSpanTerm s from a Lucene.Net.Search.Query based on whether Term s from the Lucene.Net.Search.Query are contained in a supplied Lucene.Net.Analysis.TokenStream . WeightedSpanTermExtractor.PositionCheckingMap<K> This class makes sure that if both position sensitive and insensitive versions of the same term are added, the position insensitive one wins. WeightedTerm Lightweight class to hold term and a Weight value used for scoring this term Interfaces IEncoder Encodes original text. The IEncoder works with the IFormatter to generate the output. IFormatter Processes terms found in the original text, typically by applying some form of mark-up to highlight terms in HTML search results pages. IFragmenter Implements the policy for breaking text into multiple fragments for consideration by the Highlighter class. A sophisticated implementation may do this on the basis of detecting end of sentences in the text. IScorer A IScorer is responsible for scoring a stream of tokens. These token scores can then be used to compute TextFragment scores."
  },
  "Lucene.Net.Search.Highlight.IEncoder.html": {
    "href": "Lucene.Net.Search.Highlight.IEncoder.html",
    "title": "Interface IEncoder | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Interface IEncoder Encodes original text. The IEncoder works with the IFormatter to generate the output. Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public interface IEncoder Methods | Improve this Doc View Source EncodeText(String) Declaration string EncodeText(string originalText) Parameters Type Name Description System.String originalText The section of text being output Returns Type Description System.String"
  },
  "Lucene.Net.Search.Highlight.IFormatter.html": {
    "href": "Lucene.Net.Search.Highlight.IFormatter.html",
    "title": "Interface IFormatter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Interface IFormatter Processes terms found in the original text, typically by applying some form of mark-up to highlight terms in HTML search results pages. Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public interface IFormatter Methods | Improve this Doc View Source HighlightTerm(String, TokenGroup) Declaration string HighlightTerm(string originalText, TokenGroup tokenGroup) Parameters Type Name Description System.String originalText The section of text being considered for markup TokenGroup tokenGroup contains one or several overlapping Tokens along with their scores and positions. Returns Type Description System.String"
  },
  "Lucene.Net.Search.Highlight.IFragmenter.html": {
    "href": "Lucene.Net.Search.Highlight.IFragmenter.html",
    "title": "Interface IFragmenter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Interface IFragmenter Implements the policy for breaking text into multiple fragments for consideration by the Highlighter class. A sophisticated implementation may do this on the basis of detecting end of sentences in the text. Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public interface IFragmenter Methods | Improve this Doc View Source IsNewFragment() Test to see if this token from the stream should be held in a new TextFragment . Every time this is called, the TokenStream passed to Start(String, TokenStream) will have been incremented. Declaration bool IsNewFragment() Returns Type Description System.Boolean | Improve this Doc View Source Start(String, TokenStream) Initializes the Fragmenter. You can grab references to the Attributes you are interested in from tokenStream and then access the values in IsNewFragment() . Declaration void Start(string originalText, TokenStream tokenStream) Parameters Type Name Description System.String originalText the original source text Lucene.Net.Analysis.TokenStream tokenStream tokenStream the Lucene.Net.Analysis.TokenStream to be fragmented"
  },
  "Lucene.Net.Search.Highlight.InvalidTokenOffsetsException.html": {
    "href": "Lucene.Net.Search.Highlight.InvalidTokenOffsetsException.html",
    "title": "Class InvalidTokenOffsetsException | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class InvalidTokenOffsetsException Exception thrown if TokenStream Tokens are incompatible with provided text Inheritance System.Object System.Exception InvalidTokenOffsetsException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class InvalidTokenOffsetsException : Exception, ISerializable Constructors | Improve this Doc View Source InvalidTokenOffsetsException() Declaration public InvalidTokenOffsetsException() | Improve this Doc View Source InvalidTokenOffsetsException(String) Declaration public InvalidTokenOffsetsException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source InvalidTokenOffsetsException(String, Exception) Declaration public InvalidTokenOffsetsException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner Implements System.Runtime.Serialization.ISerializable"
  },
  "Lucene.Net.Search.Highlight.IScorer.html": {
    "href": "Lucene.Net.Search.Highlight.IScorer.html",
    "title": "Interface IScorer | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Interface IScorer A IScorer is responsible for scoring a stream of tokens. These token scores can then be used to compute TextFragment scores. Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public interface IScorer Properties | Improve this Doc View Source FragmentScore Called when the Highlighter has no more tokens for the current fragment - the IScorer returns the weighting it has derived for the most recent fragment, typically based on the results of GetTokenScore() . Declaration float FragmentScore { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source GetTokenScore() Called for each token in the current fragment. The Highlighter will increment the Lucene.Net.Analysis.TokenStream passed to init on every call. Declaration float GetTokenScore() Returns Type Description System.Single a score which is passed to the Highlighter class to influence the mark-up of the text (this return value is NOT used to score the fragment) | Improve this Doc View Source Init(TokenStream) Called to init the Scorer with a Lucene.Net.Analysis.TokenStream . You can grab references to the attributes you are interested in here and access them from GetTokenScore() . Declaration TokenStream Init(TokenStream tokenStream) Parameters Type Name Description Lucene.Net.Analysis.TokenStream tokenStream the Lucene.Net.Analysis.TokenStream that will be scored. Returns Type Description Lucene.Net.Analysis.TokenStream either a Lucene.Net.Analysis.TokenStream that the Highlighter should continue using (eg if you read the tokenSream in this method) or null to continue using the same Lucene.Net.Analysis.TokenStream that was passed in. Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source StartFragment(TextFragment) Called when a new fragment is started for consideration. Declaration void StartFragment(TextFragment newFragment) Parameters Type Name Description TextFragment newFragment the fragment that will be scored next"
  },
  "Lucene.Net.Search.Highlight.NullFragmenter.html": {
    "href": "Lucene.Net.Search.Highlight.NullFragmenter.html",
    "title": "Class NullFragmenter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class NullFragmenter IFragmenter implementation which does not fragment the text. This is useful for highlighting the entire content of a document or field. Inheritance System.Object NullFragmenter Implements IFragmenter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class NullFragmenter : IFragmenter Methods | Improve this Doc View Source IsNewFragment() Declaration public virtual bool IsNewFragment() Returns Type Description System.Boolean | Improve this Doc View Source Start(String, TokenStream) Declaration public virtual void Start(string originalText, TokenStream tokenStream) Parameters Type Name Description System.String originalText Lucene.Net.Analysis.TokenStream tokenStream Implements IFragmenter"
  },
  "Lucene.Net.Search.Highlight.OffsetLimitTokenFilter.html": {
    "href": "Lucene.Net.Search.Highlight.OffsetLimitTokenFilter.html",
    "title": "Class OffsetLimitTokenFilter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class OffsetLimitTokenFilter This Lucene.Net.Analysis.TokenFilter limits the number of tokens while indexing by adding up the current offset. Inheritance System.Object Lucene.Net.Util.AttributeSource Lucene.Net.Analysis.TokenStream Lucene.Net.Analysis.TokenFilter OffsetLimitTokenFilter Implements System.IDisposable Inherited Members Lucene.Net.Analysis.TokenFilter.m_input Lucene.Net.Analysis.TokenFilter.End() TokenFilter.Dispose(Boolean) Lucene.Net.Analysis.TokenStream.Dispose() Lucene.Net.Util.AttributeSource.GetAttributeFactory() Lucene.Net.Util.AttributeSource.GetAttributeClassesEnumerator() Lucene.Net.Util.AttributeSource.GetAttributeImplsEnumerator() Lucene.Net.Util.AttributeSource.AddAttributeImpl(Lucene.Net.Util.Attribute) Lucene.Net.Util.AttributeSource.AddAttribute<T>() Lucene.Net.Util.AttributeSource.HasAttributes Lucene.Net.Util.AttributeSource.HasAttribute<T>() Lucene.Net.Util.AttributeSource.GetAttribute<T>() Lucene.Net.Util.AttributeSource.ClearAttributes() Lucene.Net.Util.AttributeSource.CaptureState() Lucene.Net.Util.AttributeSource.RestoreState(Lucene.Net.Util.AttributeSource.State) Lucene.Net.Util.AttributeSource.GetHashCode() AttributeSource.Equals(Object) AttributeSource.ReflectAsString(Boolean) Lucene.Net.Util.AttributeSource.ReflectWith(Lucene.Net.Util.IAttributeReflector) Lucene.Net.Util.AttributeSource.CloneAttributes() Lucene.Net.Util.AttributeSource.CopyTo(Lucene.Net.Util.AttributeSource) Lucene.Net.Util.AttributeSource.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public sealed class OffsetLimitTokenFilter : TokenFilter, IDisposable Constructors | Improve this Doc View Source OffsetLimitTokenFilter(TokenStream, Int32) Declaration public OffsetLimitTokenFilter(TokenStream input, int offsetLimit) Parameters Type Name Description Lucene.Net.Analysis.TokenStream input System.Int32 offsetLimit Methods | Improve this Doc View Source IncrementToken() Declaration public override bool IncrementToken() Returns Type Description System.Boolean Overrides Lucene.Net.Analysis.TokenStream.IncrementToken() | Improve this Doc View Source Reset() Declaration public override void Reset() Overrides Lucene.Net.Analysis.TokenFilter.Reset() Implements System.IDisposable"
  },
  "Lucene.Net.Search.Highlight.PositionSpan.html": {
    "href": "Lucene.Net.Search.Highlight.PositionSpan.html",
    "title": "Class PositionSpan | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class PositionSpan Utility class to record Positions Spans This is a Lucene.NET INTERNAL API, use at your own risk Inheritance System.Object PositionSpan Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class PositionSpan Constructors | Improve this Doc View Source PositionSpan(Int32, Int32) Declaration public PositionSpan(int start, int end) Parameters Type Name Description System.Int32 start System.Int32 end Properties | Improve this Doc View Source End Declaration public int End { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Start Declaration public int Start { get; set; } Property Value Type Description System.Int32"
  },
  "Lucene.Net.Search.Highlight.QueryScorer.html": {
    "href": "Lucene.Net.Search.Highlight.QueryScorer.html",
    "title": "Class QueryScorer | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class QueryScorer IScorer implementation which scores text fragments by the number of unique query terms found. This class converts appropriate Lucene.Net.Search.Query s to Lucene.Net.Search.Spans.SpanQuery s and attempts to score only those terms that participated in generating the 'hit' on the document. Inheritance System.Object QueryScorer Implements IScorer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class QueryScorer : IScorer Constructors | Improve this Doc View Source QueryScorer(WeightedSpanTerm[]) Constructs a new QueryScorer instance Declaration public QueryScorer(WeightedSpanTerm[] weightedTerms) Parameters Type Name Description WeightedSpanTerm [] weightedTerms an array of pre-created WeightedSpanTerm s | Improve this Doc View Source QueryScorer(Query) Constructs a new QueryScorer instance Declaration public QueryScorer(Query query) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query to use for highlighting | Improve this Doc View Source QueryScorer(Query, IndexReader, String) Constructs a new QueryScorer instance Declaration public QueryScorer(Query query, IndexReader reader, string field) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query to use for highlighting Lucene.Net.Index.IndexReader reader Lucene.Net.Index.IndexReader to use for quasi tf/idf scoring System.String field Field to highlight - pass null to ignore fields | Improve this Doc View Source QueryScorer(Query, IndexReader, String, String) Constructs a new QueryScorer instance Declaration public QueryScorer(Query query, IndexReader reader, string field, string defaultField) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query to use for highlighting Lucene.Net.Index.IndexReader reader Lucene.Net.Index.IndexReader to use for quasi tf/idf scoring System.String field Field to highlight - pass null to ignore fields System.String defaultField The default field for queries with the field name unspecified | Improve this Doc View Source QueryScorer(Query, String) Constructs a new QueryScorer instance Declaration public QueryScorer(Query query, string field) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query to use for highlighting System.String field Field to highlight - pass null to ignore fields | Improve this Doc View Source QueryScorer(Query, String, String) Constructs a new QueryScorer instance Declaration public QueryScorer(Query query, string field, string defaultField) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query to use for highlighting System.String field Field to highlight - pass null to ignore fields System.String defaultField The default field for queries with the field name unspecified Properties | Improve this Doc View Source ExpandMultiTermQuery Controls whether or not multi-term queries are expanded against a Lucene.Net.Index.Memory.MemoryIndex Lucene.Net.Index.IndexReader . true if multi-term queries should be expanded Declaration public virtual bool ExpandMultiTermQuery { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source FragmentScore Declaration public virtual float FragmentScore { get; } Property Value Type Description System.Single See Also FragmentScore | Improve this Doc View Source MaxTermWeight The highest weighted term (useful for passing to GradientFormatter to set top end of coloring scale). Declaration public virtual float MaxTermWeight { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source GetTokenScore() Declaration public virtual float GetTokenScore() Returns Type Description System.Single See Also GetTokenScore () | Improve this Doc View Source GetWeightedSpanTerm(String) Retrieve the WeightedSpanTerm for the specified token. Useful for passing Span information to a IFragmenter . Declaration public virtual WeightedSpanTerm GetWeightedSpanTerm(string token) Parameters Type Name Description System.String token token to get WeightedSpanTerm for Returns Type Description WeightedSpanTerm WeightedSpanTerm for token | Improve this Doc View Source Init(TokenStream) Declaration public virtual TokenStream Init(TokenStream tokenStream) Parameters Type Name Description Lucene.Net.Analysis.TokenStream tokenStream Returns Type Description Lucene.Net.Analysis.TokenStream See Also Init ( Lucene.Net.Analysis.TokenStream ) | Improve this Doc View Source NewTermExtractor(String) Declaration protected virtual WeightedSpanTermExtractor NewTermExtractor(string defaultField) Parameters Type Name Description System.String defaultField Returns Type Description WeightedSpanTermExtractor | Improve this Doc View Source SetMaxDocCharsToAnalyze(Int32) Declaration public virtual void SetMaxDocCharsToAnalyze(int maxDocCharsToAnalyze) Parameters Type Name Description System.Int32 maxDocCharsToAnalyze | Improve this Doc View Source SetWrapIfNotCachingTokenFilter(Boolean) By default, Lucene.Net.Analysis.TokenStream s that are not of the type CachingTokenFilter are wrapped in a CachingTokenFilter to ensure an efficient reset - if you are already using a different caching Lucene.Net.Analysis.TokenStream impl and you don't want it to be wrapped, set this to false. Declaration public virtual void SetWrapIfNotCachingTokenFilter(bool wrap) Parameters Type Name Description System.Boolean wrap | Improve this Doc View Source StartFragment(TextFragment) Declaration public virtual void StartFragment(TextFragment newFragment) Parameters Type Name Description TextFragment newFragment See Also StartFragment ( TextFragment ) Implements IScorer"
  },
  "Lucene.Net.Search.Highlight.QueryTermExtractor.html": {
    "href": "Lucene.Net.Search.Highlight.QueryTermExtractor.html",
    "title": "Class QueryTermExtractor | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class QueryTermExtractor Utility class used to extract the terms used in a query, plus any weights. This class will not find terms for MultiTermQuery , RangeQuery and PrefixQuery classes so the caller must pass a rewritten query (see Rewrite(IndexReader) ) to obtain a list of expanded terms. Inheritance System.Object QueryTermExtractor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public static class QueryTermExtractor Methods | Improve this Doc View Source GetIdfWeightedTerms(Query, IndexReader, String) Extracts all terms texts of a given Lucene.Net.Search.Query into an array of WeightedTerms Declaration public static WeightedTerm[] GetIdfWeightedTerms(Query query, IndexReader reader, string fieldName) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query to extract term texts from Lucene.Net.Index.IndexReader reader used to compute IDF which can be used to a) score selected fragments better b) use graded highlights eg chaning intensity of font color System.String fieldName the field on which Inverse Document Frequency (IDF) calculations are based Returns Type Description WeightedTerm [] an array of the terms used in a query, plus their weights. | Improve this Doc View Source GetTerms(Query) Extracts all terms texts of a given Lucene.Net.Search.Query into an array of WeightedTerms Declaration public static WeightedTerm[] GetTerms(Query query) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query to extract term texts from Returns Type Description WeightedTerm [] an array of the terms used in a query, plus their weights. | Improve this Doc View Source GetTerms(Query, Boolean) Extracts all terms texts of a given Lucene.Net.Search.Query into an array of WeightedTerms Declaration public static WeightedTerm[] GetTerms(Query query, bool prohibited) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query to extract term texts from System.Boolean prohibited true to extract \"prohibited\" terms, too Returns Type Description WeightedTerm [] an array of the terms used in a query, plus their weights. | Improve this Doc View Source GetTerms(Query, Boolean, String) Extracts all terms texts of a given Lucene.Net.Search.Query into an array of WeightedTerms Declaration public static WeightedTerm[] GetTerms(Query query, bool prohibited, string fieldName) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query to extract term texts from System.Boolean prohibited true to extract \"prohibited\" terms, too System.String fieldName The fieldName used to filter query terms Returns Type Description WeightedTerm [] an array of the terms used in a query, plus their weights."
  },
  "Lucene.Net.Search.Highlight.QueryTermScorer.html": {
    "href": "Lucene.Net.Search.Highlight.QueryTermScorer.html",
    "title": "Class QueryTermScorer | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class QueryTermScorer IScorer implementation which scores text fragments by the number of unique query terms found. This class uses the QueryTermExtractor class to process determine the query terms and their boosts to be used. Inheritance System.Object QueryTermScorer Implements IScorer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class QueryTermScorer : IScorer Constructors | Improve this Doc View Source QueryTermScorer(WeightedTerm[]) Declaration public QueryTermScorer(WeightedTerm[] weightedTerms) Parameters Type Name Description WeightedTerm [] weightedTerms | Improve this Doc View Source QueryTermScorer(Query) Declaration public QueryTermScorer(Query query) Parameters Type Name Description Lucene.Net.Search.Query query a Lucene query (ideally rewritten using Rewrite(IndexReader) before being passed to this class and the searcher) | Improve this Doc View Source QueryTermScorer(Query, IndexReader, String) Declaration public QueryTermScorer(Query query, IndexReader reader, string fieldName) Parameters Type Name Description Lucene.Net.Search.Query query a Lucene query (ideally rewritten using Rewrite(IndexReader) before being passed to this class and the searcher) Lucene.Net.Index.IndexReader reader used to compute IDF which can be used to a) score selected fragments better b) use graded highlights eg set font color intensity System.String fieldName the field on which Inverse Document Frequency (IDF) calculations are based | Improve this Doc View Source QueryTermScorer(Query, String) Declaration public QueryTermScorer(Query query, string fieldName) Parameters Type Name Description Lucene.Net.Search.Query query a Lucene query (ideally rewritten using Rewrite(IndexReader) before being passed to this class and the searcher) System.String fieldName the Field name which is used to match Query terms Properties | Improve this Doc View Source FragmentScore FragmentScore Declaration public virtual float FragmentScore { get; } Property Value Type Description System.Single | Improve this Doc View Source MaxTermWeight The highest weighted term (useful for passing to GradientFormatter to set top end of coloring scale. Declaration public virtual float MaxTermWeight { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source AllFragmentsProcessed() Declaration public virtual void AllFragmentsProcessed() | Improve this Doc View Source GetTokenScore() GetTokenScore() Declaration public virtual float GetTokenScore() Returns Type Description System.Single | Improve this Doc View Source Init(TokenStream) Init(TokenStream) Declaration public virtual TokenStream Init(TokenStream tokenStream) Parameters Type Name Description Lucene.Net.Analysis.TokenStream tokenStream Returns Type Description Lucene.Net.Analysis.TokenStream | Improve this Doc View Source StartFragment(TextFragment) Declaration public virtual void StartFragment(TextFragment newFragment) Parameters Type Name Description TextFragment newFragment Implements IScorer"
  },
  "Lucene.Net.Search.Highlight.SimpleFragmenter.html": {
    "href": "Lucene.Net.Search.Highlight.SimpleFragmenter.html",
    "title": "Class SimpleFragmenter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SimpleFragmenter IFragmenter implementation which breaks text up into same-size fragments with no concerns over spotting sentence boundaries. Inheritance System.Object SimpleFragmenter Implements IFragmenter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class SimpleFragmenter : IFragmenter Constructors | Improve this Doc View Source SimpleFragmenter() Declaration public SimpleFragmenter() | Improve this Doc View Source SimpleFragmenter(Int32) Declaration public SimpleFragmenter(int fragmentSize) Parameters Type Name Description System.Int32 fragmentSize size in number of characters of each fragment Properties | Improve this Doc View Source FragmentSize Gets or Sets size in number of characters of each fragment Declaration public virtual int FragmentSize { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source IsNewFragment() IsNewFragment() Declaration public virtual bool IsNewFragment() Returns Type Description System.Boolean | Improve this Doc View Source Start(String, TokenStream) Start(String, TokenStream) Declaration public virtual void Start(string originalText, TokenStream stream) Parameters Type Name Description System.String originalText Lucene.Net.Analysis.TokenStream stream Implements IFragmenter"
  },
  "Lucene.Net.Search.Highlight.SimpleHTMLEncoder.html": {
    "href": "Lucene.Net.Search.Highlight.SimpleHTMLEncoder.html",
    "title": "Class SimpleHTMLEncoder | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SimpleHTMLEncoder Simple IEncoder implementation to escape text for HTML output Inheritance System.Object SimpleHTMLEncoder Implements IEncoder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class SimpleHTMLEncoder : IEncoder Constructors | Improve this Doc View Source SimpleHTMLEncoder() Declaration public SimpleHTMLEncoder() Methods | Improve this Doc View Source EncodeText(String) Declaration public string EncodeText(string originalText) Parameters Type Name Description System.String originalText Returns Type Description System.String | Improve this Doc View Source HtmlEncode(String) Encode string into HTML Declaration public static string HtmlEncode(string plainText) Parameters Type Name Description System.String plainText Returns Type Description System.String Implements IEncoder"
  },
  "Lucene.Net.Search.Highlight.SimpleHTMLFormatter.html": {
    "href": "Lucene.Net.Search.Highlight.SimpleHTMLFormatter.html",
    "title": "Class SimpleHTMLFormatter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SimpleHTMLFormatter Simple IFormatter implementation to highlight terms with a pre and post tag Inheritance System.Object SimpleHTMLFormatter Implements IFormatter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class SimpleHTMLFormatter : IFormatter Constructors | Improve this Doc View Source SimpleHTMLFormatter() Default constructor uses HTML: <B> tags to markup terms Declaration public SimpleHTMLFormatter() | Improve this Doc View Source SimpleHTMLFormatter(String, String) Declaration public SimpleHTMLFormatter(string preTag, string postTag) Parameters Type Name Description System.String preTag System.String postTag Methods | Improve this Doc View Source HighlightTerm(String, TokenGroup) HighlightTerm(String, TokenGroup) Declaration public virtual string HighlightTerm(string originalText, TokenGroup tokenGroup) Parameters Type Name Description System.String originalText TokenGroup tokenGroup Returns Type Description System.String Implements IFormatter"
  },
  "Lucene.Net.Search.Highlight.SimpleSpanFragmenter.html": {
    "href": "Lucene.Net.Search.Highlight.SimpleSpanFragmenter.html",
    "title": "Class SimpleSpanFragmenter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SimpleSpanFragmenter IFragmenter implementation which breaks text up into same-size fragments but does not split up Spans . This is a simple sample class. Inheritance System.Object SimpleSpanFragmenter Implements IFragmenter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class SimpleSpanFragmenter : IFragmenter Constructors | Improve this Doc View Source SimpleSpanFragmenter(QueryScorer) Declaration public SimpleSpanFragmenter(QueryScorer queryScorer) Parameters Type Name Description QueryScorer queryScorer QueryScorer that was used to score hits | Improve this Doc View Source SimpleSpanFragmenter(QueryScorer, Int32) Declaration public SimpleSpanFragmenter(QueryScorer queryScorer, int fragmentSize) Parameters Type Name Description QueryScorer queryScorer QueryScorer that was used to score hits System.Int32 fragmentSize size in bytes of each fragment Methods | Improve this Doc View Source IsNewFragment() Declaration public virtual bool IsNewFragment() Returns Type Description System.Boolean See Also IsNewFragment () | Improve this Doc View Source Start(String, TokenStream) Declaration public virtual void Start(string originalText, TokenStream tokenStream) Parameters Type Name Description System.String originalText Lucene.Net.Analysis.TokenStream tokenStream See Also Start ( System.String , Lucene.Net.Analysis.TokenStream ) Implements IFragmenter"
  },
  "Lucene.Net.Search.Highlight.SpanGradientFormatter.html": {
    "href": "Lucene.Net.Search.Highlight.SpanGradientFormatter.html",
    "title": "Class SpanGradientFormatter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SpanGradientFormatter Formats text with different color intensity depending on the score of the term using the span tag. GradientFormatter uses a bgcolor argument to the font tag which doesn't work in Mozilla, thus this class. Inheritance System.Object GradientFormatter SpanGradientFormatter Implements IFormatter Inherited Members GradientFormatter.m_fgRMin GradientFormatter.m_fgGMin GradientFormatter.m_fgBMin GradientFormatter.m_fgRMax GradientFormatter.m_fgGMax GradientFormatter.m_fgBMax GradientFormatter.m_highlightForeground GradientFormatter.m_bgRMin GradientFormatter.m_bgGMin GradientFormatter.m_bgBMin GradientFormatter.m_bgRMax GradientFormatter.m_bgGMax GradientFormatter.m_bgBMax GradientFormatter.m_highlightBackground GradientFormatter.GetForegroundColorString(Single) GradientFormatter.GetBackgroundColorString(Single) GradientFormatter.HexToInt32(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class SpanGradientFormatter : GradientFormatter, IFormatter Constructors | Improve this Doc View Source SpanGradientFormatter(Single, String, String, String, String) Declaration public SpanGradientFormatter(float maxScore, string minForegroundColor, string maxForegroundColor, string minBackgroundColor, string maxBackgroundColor) Parameters Type Name Description System.Single maxScore System.String minForegroundColor System.String maxForegroundColor System.String minBackgroundColor System.String maxBackgroundColor Methods | Improve this Doc View Source HighlightTerm(String, TokenGroup) Declaration public override string HighlightTerm(string originalText, TokenGroup tokenGroup) Parameters Type Name Description System.String originalText TokenGroup tokenGroup Returns Type Description System.String Overrides GradientFormatter.HighlightTerm(String, TokenGroup) Implements IFormatter See Also GradientFormatter"
  },
  "Lucene.Net.Search.Highlight.TextFragment.html": {
    "href": "Lucene.Net.Search.Highlight.TextFragment.html",
    "title": "Class TextFragment | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class TextFragment Low-level class used to record information about a section of a document with a score. Inheritance System.Object TextFragment Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class TextFragment Constructors | Improve this Doc View Source TextFragment(StringBuilder, Int32, Int32) Declaration public TextFragment(StringBuilder markedUpText, int textStartPos, int fragNum) Parameters Type Name Description System.Text.StringBuilder markedUpText System.Int32 textStartPos System.Int32 fragNum Properties | Improve this Doc View Source FragNum the fragment sequence number Declaration public virtual int FragNum { get; protected set; } Property Value Type Description System.Int32 | Improve this Doc View Source Score Declaration public virtual float Score { get; protected set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Follows(TextFragment) true if this fragment follows the one passed Declaration public virtual bool Follows(TextFragment fragment) Parameters Type Name Description TextFragment fragment Returns Type Description System.Boolean | Improve this Doc View Source Merge(TextFragment) Declaration public virtual void Merge(TextFragment frag2) Parameters Type Name Description TextFragment frag2 Fragment to be merged into this one | Improve this Doc View Source ToString() Returns the marked-up text for this text fragment Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "Lucene.Net.Search.Highlight.TokenGroup.html": {
    "href": "Lucene.Net.Search.Highlight.TokenGroup.html",
    "title": "Class TokenGroup | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class TokenGroup One, or several overlapping tokens, along with the score(s) and the scope of the original text Inheritance System.Object TokenGroup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class TokenGroup Constructors | Improve this Doc View Source TokenGroup(TokenStream) Declaration public TokenGroup(TokenStream tokenStream) Parameters Type Name Description Lucene.Net.Analysis.TokenStream tokenStream Properties | Improve this Doc View Source EndOffset the end position in the original text Declaration public virtual int EndOffset { get; } Property Value Type Description System.Int32 | Improve this Doc View Source NumTokens the number of tokens in this group Declaration public virtual int NumTokens { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StartOffset the start position in the original text Declaration public virtual int StartOffset { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalScore all tokens' scores summed up Declaration public virtual float TotalScore { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source GetScore(Int32) the \"n\"th score Declaration public virtual float GetScore(int index) Parameters Type Name Description System.Int32 index a value between 0 and numTokens -1 Returns Type Description System.Single | Improve this Doc View Source GetToken(Int32) the \"n\"th token Declaration public virtual Token GetToken(int index) Parameters Type Name Description System.Int32 index a value between 0 and numTokens -1 Returns Type Description Lucene.Net.Analysis.Token"
  },
  "Lucene.Net.Search.Highlight.TokenSources.html": {
    "href": "Lucene.Net.Search.Highlight.TokenSources.html",
    "title": "Class TokenSources | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class TokenSources Hides implementation issues associated with obtaining a Lucene.Net.Analysis.TokenStream for use with the Highlighter - can obtain from term vectors with offsets and positions or from an Analyzer re-parsing the stored content. see TokenStreamFromTermVector Inheritance System.Object TokenSources Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class TokenSources Methods | Improve this Doc View Source GetAnyTokenStream(IndexReader, Int32, String, Analyzer) A convenience method that tries a number of approaches to getting a token stream. The cost of finding there are no termVectors in the index is minimal (1000 invocations still registers 0 ms). So this \"lazy\" (flexible?) approach to coding is probably acceptable Declaration public static TokenStream GetAnyTokenStream(IndexReader reader, int docId, string field, Analyzer analyzer) Parameters Type Name Description Lucene.Net.Index.IndexReader reader System.Int32 docId System.String field Lucene.Net.Analysis.Analyzer analyzer Returns Type Description Lucene.Net.Analysis.TokenStream null if field not stored correctly Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source GetAnyTokenStream(IndexReader, Int32, String, Document, Analyzer) A convenience method that tries to first get a TermPositionVector for the specified docId, then, falls back to using the passed in Lucene.Net.Documents.Document to retrieve the Lucene.Net.Analysis.TokenStream . This is useful when you already have the document, but would prefer to use the vector first. Declaration public static TokenStream GetAnyTokenStream(IndexReader reader, int docId, string field, Document doc, Analyzer analyzer) Parameters Type Name Description Lucene.Net.Index.IndexReader reader The Lucene.Net.Index.IndexReader to use to try and get the vector from System.Int32 docId The docId to retrieve. System.String field The field to retrieve on the document Lucene.Net.Documents.Document doc The document to fall back on Lucene.Net.Analysis.Analyzer analyzer The analyzer to use for creating the TokenStream if the vector doesn't exist Returns Type Description Lucene.Net.Analysis.TokenStream The Lucene.Net.Analysis.TokenStream for the IIndexableField on the Lucene.Net.Documents.Document Exceptions Type Condition System.IO.IOException if there was an error loading | Improve this Doc View Source GetTokenStream(Document, String, Analyzer) Declaration public static TokenStream GetTokenStream(Document doc, string field, Analyzer analyzer) Parameters Type Name Description Lucene.Net.Documents.Document doc System.String field Lucene.Net.Analysis.Analyzer analyzer Returns Type Description Lucene.Net.Analysis.TokenStream | Improve this Doc View Source GetTokenStream(IndexReader, Int32, String, Analyzer) Declaration public static TokenStream GetTokenStream(IndexReader reader, int docId, string field, Analyzer analyzer) Parameters Type Name Description Lucene.Net.Index.IndexReader reader System.Int32 docId System.String field Lucene.Net.Analysis.Analyzer analyzer Returns Type Description Lucene.Net.Analysis.TokenStream | Improve this Doc View Source GetTokenStream(Terms) Declaration public static TokenStream GetTokenStream(Terms vector) Parameters Type Name Description Lucene.Net.Index.Terms vector Returns Type Description Lucene.Net.Analysis.TokenStream | Improve this Doc View Source GetTokenStream(Terms, Boolean) Low level api. Returns a token stream generated from a Lucene.Net.Index.Terms . This can be used to feed the highlighter with a pre-parsed token stream. The Lucene.Net.Index.Terms must have offsets available. In my tests the speeds to recreate 1000 token streams using this method are: with TermVector offset only data stored - 420 milliseconds with TermVector offset AND position data stored - 271 milliseconds (nb timings for TermVector with position data are based on a tokenizer with contiguous positions - no overlaps or gaps) The cost of not using TermPositionVector to store pre-parsed content and using an analyzer to re-parse the original content: reanalyzing the original content - 980 milliseconds The re-analyze timings will typically vary depending on - The complexity of the analyzer code (timings above were using a stemmer/lowercaser/stopword combo) The number of other fields (Lucene reads ALL fields off the disk when accessing just one document field - can cost dear!) Use of compression on field storage - could be faster due to compression (less disk IO) or slower (more CPU burn) depending on the content. Declaration public static TokenStream GetTokenStream(Terms tpv, bool tokenPositionsGuaranteedContiguous) Parameters Type Name Description Lucene.Net.Index.Terms tpv System.Boolean tokenPositionsGuaranteedContiguous true if the token position numbers have no overlaps or gaps. If looking to eek out the last drops of performance, set to true. If in doubt, set to false. Returns Type Description Lucene.Net.Analysis.TokenStream Exceptions Type Condition System.ArgumentException if no offsets are available | Improve this Doc View Source GetTokenStream(String, String, Analyzer) Declaration public static TokenStream GetTokenStream(string field, string contents, Analyzer analyzer) Parameters Type Name Description System.String field System.String contents Lucene.Net.Analysis.Analyzer analyzer Returns Type Description Lucene.Net.Analysis.TokenStream | Improve this Doc View Source GetTokenStreamWithOffsets(IndexReader, Int32, String) Returns a Lucene.Net.Analysis.TokenStream with positions and offsets constructed from field termvectors. If the field has no termvectors or offsets are not included in the termvector, return null. See GetTokenStream(Terms) for an explanation of what happens when positions aren't present. Declaration public static TokenStream GetTokenStreamWithOffsets(IndexReader reader, int docId, string field) Parameters Type Name Description Lucene.Net.Index.IndexReader reader the Lucene.Net.Index.IndexReader to retrieve term vectors from System.Int32 docId the document to retrieve term vectors for System.String field the field to retrieve term vectors for Returns Type Description Lucene.Net.Analysis.TokenStream a Lucene.Net.Analysis.TokenStream , or null if offsets are not available Exceptions Type Condition System.IO.IOException If there is a low-level I/O error"
  },
  "Lucene.Net.Search.Highlight.TokenStreamFromTermPositionVector.html": {
    "href": "Lucene.Net.Search.Highlight.TokenStreamFromTermPositionVector.html",
    "title": "Class TokenStreamFromTermPositionVector | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class TokenStreamFromTermPositionVector Lucene.Net.Analysis.TokenStream created from a term vector field. Inheritance System.Object Lucene.Net.Util.AttributeSource Lucene.Net.Analysis.TokenStream TokenStreamFromTermPositionVector Implements System.IDisposable Inherited Members Lucene.Net.Analysis.TokenStream.End() Lucene.Net.Analysis.TokenStream.Dispose() TokenStream.Dispose(Boolean) Lucene.Net.Util.AttributeSource.GetAttributeFactory() Lucene.Net.Util.AttributeSource.GetAttributeClassesEnumerator() Lucene.Net.Util.AttributeSource.GetAttributeImplsEnumerator() Lucene.Net.Util.AttributeSource.AddAttributeImpl(Lucene.Net.Util.Attribute) Lucene.Net.Util.AttributeSource.AddAttribute<T>() Lucene.Net.Util.AttributeSource.HasAttributes Lucene.Net.Util.AttributeSource.HasAttribute<T>() Lucene.Net.Util.AttributeSource.GetAttribute<T>() Lucene.Net.Util.AttributeSource.ClearAttributes() Lucene.Net.Util.AttributeSource.CaptureState() Lucene.Net.Util.AttributeSource.RestoreState(Lucene.Net.Util.AttributeSource.State) Lucene.Net.Util.AttributeSource.GetHashCode() AttributeSource.Equals(Object) AttributeSource.ReflectAsString(Boolean) Lucene.Net.Util.AttributeSource.ReflectWith(Lucene.Net.Util.IAttributeReflector) Lucene.Net.Util.AttributeSource.CloneAttributes() Lucene.Net.Util.AttributeSource.CopyTo(Lucene.Net.Util.AttributeSource) Lucene.Net.Util.AttributeSource.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public sealed class TokenStreamFromTermPositionVector : TokenStream, IDisposable Constructors | Improve this Doc View Source TokenStreamFromTermPositionVector(Terms) Constructor Declaration public TokenStreamFromTermPositionVector(Terms vector) Parameters Type Name Description Lucene.Net.Index.Terms vector Terms that contains the data for creating the Lucene.Net.Analysis.TokenStream . Must have positions and offsets. Methods | Improve this Doc View Source IncrementToken() Declaration public override bool IncrementToken() Returns Type Description System.Boolean Overrides Lucene.Net.Analysis.TokenStream.IncrementToken() | Improve this Doc View Source Reset() Declaration public override void Reset() Overrides Lucene.Net.Analysis.TokenStream.Reset() Implements System.IDisposable"
  },
  "Lucene.Net.Search.Highlight.WeightedSpanTerm.html": {
    "href": "Lucene.Net.Search.Highlight.WeightedSpanTerm.html",
    "title": "Class WeightedSpanTerm | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class WeightedSpanTerm Lightweight class to hold term, weight, and positions used for scoring this term. Inheritance System.Object WeightedTerm WeightedSpanTerm Inherited Members WeightedTerm.Term WeightedTerm.Weight System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class WeightedSpanTerm : WeightedTerm Constructors | Improve this Doc View Source WeightedSpanTerm(Single, String) Declaration public WeightedSpanTerm(float weight, string term) Parameters Type Name Description System.Single weight System.String term | Improve this Doc View Source WeightedSpanTerm(Single, String, Boolean) Declaration public WeightedSpanTerm(float weight, string term, bool positionSensitive) Parameters Type Name Description System.Single weight System.String term System.Boolean positionSensitive Properties | Improve this Doc View Source IsPositionSensitive Declaration public virtual bool IsPositionSensitive { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PositionSpans Declaration public virtual IList<PositionSpan> PositionSpans { get; } Property Value Type Description System.Collections.Generic.IList < PositionSpan > Methods | Improve this Doc View Source AddPositionSpans(IList<PositionSpan>) Declaration public virtual void AddPositionSpans(IList<PositionSpan> positionSpans) Parameters Type Name Description System.Collections.Generic.IList < PositionSpan > positionSpans | Improve this Doc View Source CheckPosition(Int32) Checks to see if this term is valid at position . Declaration public virtual bool CheckPosition(int position) Parameters Type Name Description System.Int32 position to check against valid term postions Returns Type Description System.Boolean true iff this term is a hit at this position"
  },
  "Lucene.Net.Search.Highlight.WeightedSpanTermExtractor.html": {
    "href": "Lucene.Net.Search.Highlight.WeightedSpanTermExtractor.html",
    "title": "Class WeightedSpanTermExtractor | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class WeightedSpanTermExtractor Class used to extract WeightedSpanTerm s from a Lucene.Net.Search.Query based on whether Term s from the Lucene.Net.Search.Query are contained in a supplied Lucene.Net.Analysis.TokenStream . Inheritance System.Object WeightedSpanTermExtractor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class WeightedSpanTermExtractor Constructors | Improve this Doc View Source WeightedSpanTermExtractor() Declaration public WeightedSpanTermExtractor() | Improve this Doc View Source WeightedSpanTermExtractor(String) Declaration public WeightedSpanTermExtractor(string defaultField) Parameters Type Name Description System.String defaultField Properties | Improve this Doc View Source ExpandMultiTermQuery Declaration public virtual bool ExpandMultiTermQuery { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsCachedTokenStream Declaration public virtual bool IsCachedTokenStream { get; } Property Value Type Description System.Boolean | Improve this Doc View Source TokenStream Declaration public virtual TokenStream TokenStream { get; } Property Value Type Description Lucene.Net.Analysis.TokenStream Methods | Improve this Doc View Source CollectSpanQueryFields(SpanQuery, ISet<String>) Declaration protected virtual void CollectSpanQueryFields(SpanQuery spanQuery, ISet<string> fieldNames) Parameters Type Name Description Lucene.Net.Search.Spans.SpanQuery spanQuery System.Collections.Generic.ISet < System.String > fieldNames | Improve this Doc View Source Extract(Query, IDictionary<String, WeightedSpanTerm>) Fills a with WeightedSpanTerm s using the terms from the supplied query . Declaration protected virtual void Extract(Query query, IDictionary<string, WeightedSpanTerm> terms) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query to extract Terms from System.Collections.Generic.IDictionary < System.String , WeightedSpanTerm > terms Map to place created WeightedSpanTerm s in Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source ExtractUnknownQuery(Query, IDictionary<String, WeightedSpanTerm>) Declaration protected virtual void ExtractUnknownQuery(Query query, IDictionary<string, WeightedSpanTerm> terms) Parameters Type Name Description Lucene.Net.Search.Query query System.Collections.Generic.IDictionary < System.String , WeightedSpanTerm > terms | Improve this Doc View Source ExtractWeightedSpanTerms(IDictionary<String, WeightedSpanTerm>, SpanQuery) Fills a with WeightedSpanTerm s using the terms from the supplied Lucene.Net.Search.Spans.SpanQuery . Declaration protected virtual void ExtractWeightedSpanTerms(IDictionary<string, WeightedSpanTerm> terms, SpanQuery spanQuery) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , WeightedSpanTerm > terms to place created WeightedSpanTerm s in Lucene.Net.Search.Spans.SpanQuery spanQuery Lucene.Net.Search.Spans.SpanQuery to extract Terms from Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source ExtractWeightedTerms(IDictionary<String, WeightedSpanTerm>, Query) Fills a with WeightedSpanTerm s using the terms from the supplied Lucene.Net.Search.Spans.SpanQuery . Declaration protected virtual void ExtractWeightedTerms(IDictionary<string, WeightedSpanTerm> terms, Query query) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , WeightedSpanTerm > terms to place created WeightedSpanTerm s in Lucene.Net.Search.Query query Lucene.Net.Search.Query to extract Terms from Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source FieldNameComparer(String) Necessary to implement matches for queries against Lucene.Net.Search.Highlight.WeightedSpanTermExtractor.defaultField Declaration protected virtual bool FieldNameComparer(string fieldNameToCheck) Parameters Type Name Description System.String fieldNameToCheck Returns Type Description System.Boolean | Improve this Doc View Source GetLeafContext() Declaration protected virtual AtomicReaderContext GetLeafContext() Returns Type Description Lucene.Net.Index.AtomicReaderContext | Improve this Doc View Source GetWeightedSpanTerms(Query, TokenStream) Creates an from the given Lucene.Net.Search.Query and Lucene.Net.Analysis.TokenStream . Declaration public virtual IDictionary<string, WeightedSpanTerm> GetWeightedSpanTerms(Query query, TokenStream tokenStream) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query that caused hit Lucene.Net.Analysis.TokenStream tokenStream Lucene.Net.Analysis.TokenStream of text to be highlighted Returns Type Description System.Collections.Generic.IDictionary < System.String , WeightedSpanTerm > Map containing WeightedSpanTerm s Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source GetWeightedSpanTerms(Query, TokenStream, String) Creates an from the given Lucene.Net.Search.Query and Lucene.Net.Analysis.TokenStream . Declaration public virtual IDictionary<string, WeightedSpanTerm> GetWeightedSpanTerms(Query query, TokenStream tokenStream, string fieldName) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query that caused hit Lucene.Net.Analysis.TokenStream tokenStream Lucene.Net.Analysis.TokenStream of text to be highlighted System.String fieldName restricts Term's used based on field name Returns Type Description System.Collections.Generic.IDictionary < System.String , WeightedSpanTerm > Map containing WeightedSpanTerm s Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source GetWeightedSpanTermsWithScores(Query, TokenStream, String, IndexReader) Creates an from the given Lucene.Net.Search.Query and Lucene.Net.Analysis.TokenStream . Uses a supplied Lucene.Net.Index.IndexReader to properly Weight terms (for gradient highlighting). Declaration public virtual IDictionary<string, WeightedSpanTerm> GetWeightedSpanTermsWithScores(Query query, TokenStream tokenStream, string fieldName, IndexReader reader) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query that caused hit Lucene.Net.Analysis.TokenStream tokenStream Lucene.Net.Analysis.TokenStream of text to be highlighted System.String fieldName restricts Term's used based on field name Lucene.Net.Index.IndexReader reader to use for scoring Returns Type Description System.Collections.Generic.IDictionary < System.String , WeightedSpanTerm > Map of WeightedSpanTerm s with quasi tf/idf scores Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source MustRewriteQuery(SpanQuery) Declaration protected virtual bool MustRewriteQuery(SpanQuery spanQuery) Parameters Type Name Description Lucene.Net.Search.Spans.SpanQuery spanQuery Returns Type Description System.Boolean | Improve this Doc View Source SetMaxDocCharsToAnalyze(Int32) Declaration protected void SetMaxDocCharsToAnalyze(int maxDocCharsToAnalyze) Parameters Type Name Description System.Int32 maxDocCharsToAnalyze | Improve this Doc View Source SetWrapIfNotCachingTokenFilter(Boolean) By default, Lucene.Net.Analysis.TokenStream s that are not of the type CachingTokenFilter are wrapped in a CachingTokenFilter to Lucene.Net.Analysis.TokenStream impl and you don't want it to be wrapped, set this to false. Declaration public virtual void SetWrapIfNotCachingTokenFilter(bool wrap) Parameters Type Name Description System.Boolean wrap"
  },
  "Lucene.Net.Search.Highlight.WeightedSpanTermExtractor.PositionCheckingMap-1.html": {
    "href": "Lucene.Net.Search.Highlight.WeightedSpanTermExtractor.PositionCheckingMap-1.html",
    "title": "Class WeightedSpanTermExtractor.PositionCheckingMap<K> | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class WeightedSpanTermExtractor.PositionCheckingMap<K> This class makes sure that if both position sensitive and insensitive versions of the same term are added, the position insensitive one wins. Inheritance System.Object WeightedSpanTermExtractor.PositionCheckingMap<K> Implements System.Collections.Generic.IDictionary <K, WeightedSpanTerm > System.Collections.Generic.ICollection < System.Collections.Generic.KeyValuePair <K, WeightedSpanTerm >> System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair <K, WeightedSpanTerm >> System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax protected class PositionCheckingMap<K> : IDictionary<K, WeightedSpanTerm>, ICollection<KeyValuePair<K, WeightedSpanTerm>>, IEnumerable<KeyValuePair<K, WeightedSpanTerm>>, IEnumerable Type Parameters Name Description K Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[K] Declaration public WeightedSpanTerm this[K key] { get; set; } Parameters Type Name Description K key Property Value Type Description WeightedSpanTerm | Improve this Doc View Source Keys Declaration public ICollection<K> Keys { get; } Property Value Type Description System.Collections.Generic.ICollection <K> | Improve this Doc View Source Values Declaration public ICollection<WeightedSpanTerm> Values { get; } Property Value Type Description System.Collections.Generic.ICollection < WeightedSpanTerm > Methods | Improve this Doc View Source Add(K, WeightedSpanTerm) Declaration public void Add(K key, WeightedSpanTerm value) Parameters Type Name Description K key WeightedSpanTerm value | Improve this Doc View Source Add(KeyValuePair<K, WeightedSpanTerm>) Declaration public void Add(KeyValuePair<K, WeightedSpanTerm> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair <K, WeightedSpanTerm > item | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Contains(KeyValuePair<K, WeightedSpanTerm>) Declaration public bool Contains(KeyValuePair<K, WeightedSpanTerm> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair <K, WeightedSpanTerm > item Returns Type Description System.Boolean | Improve this Doc View Source ContainsKey(K) Declaration public bool ContainsKey(K key) Parameters Type Name Description K key Returns Type Description System.Boolean | Improve this Doc View Source CopyTo(KeyValuePair<K, WeightedSpanTerm>[], Int32) Declaration public void CopyTo(KeyValuePair<K, WeightedSpanTerm>[] array, int arrayIndex) Parameters Type Name Description System.Collections.Generic.KeyValuePair <K, WeightedSpanTerm >[] array System.Int32 arrayIndex | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<KeyValuePair<K, WeightedSpanTerm>> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < System.Collections.Generic.KeyValuePair <K, WeightedSpanTerm >> | Improve this Doc View Source Remove(K) Declaration public bool Remove(K key) Parameters Type Name Description K key Returns Type Description System.Boolean | Improve this Doc View Source Remove(KeyValuePair<K, WeightedSpanTerm>) Declaration public bool Remove(KeyValuePair<K, WeightedSpanTerm> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair <K, WeightedSpanTerm > item Returns Type Description System.Boolean | Improve this Doc View Source TryGetValue(K, out WeightedSpanTerm) Declaration public bool TryGetValue(K key, out WeightedSpanTerm value) Parameters Type Name Description K key WeightedSpanTerm value Returns Type Description System.Boolean Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "Lucene.Net.Search.Highlight.WeightedTerm.html": {
    "href": "Lucene.Net.Search.Highlight.WeightedTerm.html",
    "title": "Class WeightedTerm | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class WeightedTerm Lightweight class to hold term and a Weight value used for scoring this term Inheritance System.Object WeightedTerm WeightedSpanTerm Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.Highlight Assembly : Lucene.Net.Highlighter.dll Syntax public class WeightedTerm Constructors | Improve this Doc View Source WeightedTerm(Single, String) Declaration public WeightedTerm(float weight, string term) Parameters Type Name Description System.Single weight System.String term Properties | Improve this Doc View Source Term the term value (stemmed) Declaration public virtual string Term { get; set; } Property Value Type Description System.String | Improve this Doc View Source Weight the Weight associated with this term Declaration public virtual float Weight { get; set; } Property Value Type Description System.Single"
  },
  "Lucene.Net.Search.VectorHighlight.BaseFragListBuilder.html": {
    "href": "Lucene.Net.Search.VectorHighlight.BaseFragListBuilder.html",
    "title": "Class BaseFragListBuilder | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class BaseFragListBuilder A abstract implementation of IFragListBuilder . Inheritance System.Object BaseFragListBuilder SimpleFragListBuilder WeightedFragListBuilder Implements IFragListBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public abstract class BaseFragListBuilder : IFragListBuilder Constructors | Improve this Doc View Source BaseFragListBuilder() Declaration public BaseFragListBuilder() | Improve this Doc View Source BaseFragListBuilder(Int32) Declaration public BaseFragListBuilder(int margin) Parameters Type Name Description System.Int32 margin Fields | Improve this Doc View Source MARGIN_DEFAULT Declaration public static readonly int MARGIN_DEFAULT Field Value Type Description System.Int32 | Improve this Doc View Source MIN_FRAG_CHAR_SIZE_FACTOR Declaration public static readonly int MIN_FRAG_CHAR_SIZE_FACTOR Field Value Type Description System.Int32 Methods | Improve this Doc View Source AcceptPhrase(FieldPhraseList.WeightedPhraseInfo, Int32, Int32) A predicate to decide if the given FieldPhraseList.WeightedPhraseInfo should be accepted as a highlighted phrase or if it should be discarded. The default implementation discards phrases that are composed of more than one term and where the matchLength exceeds the fragment character size. Declaration protected virtual bool AcceptPhrase(FieldPhraseList.WeightedPhraseInfo info, int matchLength, int fragCharSize) Parameters Type Name Description FieldPhraseList.WeightedPhraseInfo info the phrase info to accept System.Int32 matchLength the match length of the current phrase System.Int32 fragCharSize the configured fragment character size Returns Type Description System.Boolean true if this phrase info should be accepted as a highligh phrase | Improve this Doc View Source CreateFieldFragList(FieldPhraseList, FieldFragList, Int32) Declaration protected virtual FieldFragList CreateFieldFragList(FieldPhraseList fieldPhraseList, FieldFragList fieldFragList, int fragCharSize) Parameters Type Name Description FieldPhraseList fieldPhraseList FieldFragList fieldFragList System.Int32 fragCharSize Returns Type Description FieldFragList | Improve this Doc View Source CreateFieldFragList(FieldPhraseList, Int32) Declaration public abstract FieldFragList CreateFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) Parameters Type Name Description FieldPhraseList fieldPhraseList System.Int32 fragCharSize Returns Type Description FieldFragList Implements IFragListBuilder"
  },
  "Lucene.Net.Search.VectorHighlight.BaseFragmentsBuilder.html": {
    "href": "Lucene.Net.Search.VectorHighlight.BaseFragmentsBuilder.html",
    "title": "Class BaseFragmentsBuilder | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class BaseFragmentsBuilder Base IFragmentsBuilder implementation that supports colored pre/post tags and multivalued fields. Uses IBoundaryScanner to determine fragments. Inheritance System.Object BaseFragmentsBuilder ScoreOrderFragmentsBuilder SimpleFragmentsBuilder Implements IFragmentsBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public abstract class BaseFragmentsBuilder : IFragmentsBuilder Constructors | Improve this Doc View Source BaseFragmentsBuilder() Declaration protected BaseFragmentsBuilder() | Improve this Doc View Source BaseFragmentsBuilder(IBoundaryScanner) Declaration protected BaseFragmentsBuilder(IBoundaryScanner boundaryScanner) Parameters Type Name Description IBoundaryScanner boundaryScanner | Improve this Doc View Source BaseFragmentsBuilder(String[], String[]) Declaration protected BaseFragmentsBuilder(string[] preTags, string[] postTags) Parameters Type Name Description System.String [] preTags System.String [] postTags | Improve this Doc View Source BaseFragmentsBuilder(String[], String[], IBoundaryScanner) Declaration protected BaseFragmentsBuilder(string[] preTags, string[] postTags, IBoundaryScanner boundaryScanner) Parameters Type Name Description System.String [] preTags System.String [] postTags IBoundaryScanner boundaryScanner Fields | Improve this Doc View Source COLORED_POST_TAGS Declaration public static readonly string[] COLORED_POST_TAGS Field Value Type Description System.String [] | Improve this Doc View Source COLORED_PRE_TAGS Declaration public static readonly string[] COLORED_PRE_TAGS Field Value Type Description System.String [] | Improve this Doc View Source m_postTags Declaration protected string[] m_postTags Field Value Type Description System.String [] | Improve this Doc View Source m_preTags Declaration protected string[] m_preTags Field Value Type Description System.String [] Properties | Improve this Doc View Source IsDiscreteMultiValueHighlighting Declaration public virtual bool IsDiscreteMultiValueHighlighting { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MultiValuedSeparator Declaration public virtual char MultiValuedSeparator { get; set; } Property Value Type Description System.Char Methods | Improve this Doc View Source CreateFragment(IndexReader, Int32, String, FieldFragList) Declaration public virtual string CreateFragment(IndexReader reader, int docId, string fieldName, FieldFragList fieldFragList) Parameters Type Name Description Lucene.Net.Index.IndexReader reader System.Int32 docId System.String fieldName FieldFragList fieldFragList Returns Type Description System.String | Improve this Doc View Source CreateFragment(IndexReader, Int32, String, FieldFragList, String[], String[], IEncoder) Declaration public virtual string CreateFragment(IndexReader reader, int docId, string fieldName, FieldFragList fieldFragList, string[] preTags, string[] postTags, IEncoder encoder) Parameters Type Name Description Lucene.Net.Index.IndexReader reader System.Int32 docId System.String fieldName FieldFragList fieldFragList System.String [] preTags System.String [] postTags IEncoder encoder Returns Type Description System.String | Improve this Doc View Source CreateFragments(IndexReader, Int32, String, FieldFragList, Int32) Declaration public virtual string[] CreateFragments(IndexReader reader, int docId, string fieldName, FieldFragList fieldFragList, int maxNumFragments) Parameters Type Name Description Lucene.Net.Index.IndexReader reader System.Int32 docId System.String fieldName FieldFragList fieldFragList System.Int32 maxNumFragments Returns Type Description System.String [] | Improve this Doc View Source CreateFragments(IndexReader, Int32, String, FieldFragList, Int32, String[], String[], IEncoder) Declaration public virtual string[] CreateFragments(IndexReader reader, int docId, string fieldName, FieldFragList fieldFragList, int maxNumFragments, string[] preTags, string[] postTags, IEncoder encoder) Parameters Type Name Description Lucene.Net.Index.IndexReader reader System.Int32 docId System.String fieldName FieldFragList fieldFragList System.Int32 maxNumFragments System.String [] preTags System.String [] postTags IEncoder encoder Returns Type Description System.String [] | Improve this Doc View Source DiscreteMultiValueHighlighting(IList<FieldFragList.WeightedFragInfo>, Field[]) Declaration protected virtual IList<FieldFragList.WeightedFragInfo> DiscreteMultiValueHighlighting(IList<FieldFragList.WeightedFragInfo> fragInfos, Field[] fields) Parameters Type Name Description System.Collections.Generic.IList < FieldFragList.WeightedFragInfo > fragInfos Field [] fields Returns Type Description System.Collections.Generic.IList < FieldFragList.WeightedFragInfo > | Improve this Doc View Source GetFields(IndexReader, Int32, String) Declaration protected virtual Field[] GetFields(IndexReader reader, int docId, string fieldName) Parameters Type Name Description Lucene.Net.Index.IndexReader reader System.Int32 docId System.String fieldName Returns Type Description Field [] | Improve this Doc View Source GetFragmentSource(StringBuilder, Int32[], Field[], Int32, Int32) Declaration protected virtual string GetFragmentSource(StringBuilder buffer, int[] index, Field[] values, int startOffset, int endOffset) Parameters Type Name Description System.Text.StringBuilder buffer System.Int32 [] index Field [] values System.Int32 startOffset System.Int32 endOffset Returns Type Description System.String | Improve this Doc View Source GetFragmentSourceMSO(StringBuilder, Int32[], Field[], Int32, Int32, Int32[]) Declaration protected virtual string GetFragmentSourceMSO(StringBuilder buffer, int[] index, Field[] values, int startOffset, int endOffset, int[] modifiedStartOffset) Parameters Type Name Description System.Text.StringBuilder buffer System.Int32 [] index Field [] values System.Int32 startOffset System.Int32 endOffset System.Int32 [] modifiedStartOffset Returns Type Description System.String | Improve this Doc View Source GetPostTag(Int32) Declaration protected virtual string GetPostTag(int num) Parameters Type Name Description System.Int32 num Returns Type Description System.String | Improve this Doc View Source GetPostTag(String[], Int32) Declaration protected virtual string GetPostTag(string[] postTags, int num) Parameters Type Name Description System.String [] postTags System.Int32 num Returns Type Description System.String | Improve this Doc View Source GetPreTag(Int32) Declaration protected virtual string GetPreTag(int num) Parameters Type Name Description System.Int32 num Returns Type Description System.String | Improve this Doc View Source GetPreTag(String[], Int32) Declaration protected virtual string GetPreTag(string[] preTags, int num) Parameters Type Name Description System.String [] preTags System.Int32 num Returns Type Description System.String | Improve this Doc View Source GetWeightedFragInfoList(IList<FieldFragList.WeightedFragInfo>) Declaration public abstract IList<FieldFragList.WeightedFragInfo> GetWeightedFragInfoList(IList<FieldFragList.WeightedFragInfo> src) Parameters Type Name Description System.Collections.Generic.IList < FieldFragList.WeightedFragInfo > src Returns Type Description System.Collections.Generic.IList < FieldFragList.WeightedFragInfo > | Improve this Doc View Source MakeFragment(StringBuilder, Int32[], Field[], FieldFragList.WeightedFragInfo, String[], String[], IEncoder) Declaration protected virtual string MakeFragment(StringBuilder buffer, int[] index, Field[] values, FieldFragList.WeightedFragInfo fragInfo, string[] preTags, string[] postTags, IEncoder encoder) Parameters Type Name Description System.Text.StringBuilder buffer System.Int32 [] index Field [] values FieldFragList.WeightedFragInfo fragInfo System.String [] preTags System.String [] postTags IEncoder encoder Returns Type Description System.String Implements IFragmentsBuilder"
  },
  "Lucene.Net.Search.VectorHighlight.FastVectorHighlighter.html": {
    "href": "Lucene.Net.Search.VectorHighlight.FastVectorHighlighter.html",
    "title": "Class FastVectorHighlighter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class FastVectorHighlighter Another highlighter implementation. Inheritance System.Object FastVectorHighlighter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class FastVectorHighlighter Constructors | Improve this Doc View Source FastVectorHighlighter() the default constructor. Declaration public FastVectorHighlighter() | Improve this Doc View Source FastVectorHighlighter(Boolean, Boolean) a constructor. Using SimpleFragListBuilder and ScoreOrderFragmentsBuilder . Declaration public FastVectorHighlighter(bool phraseHighlight, bool fieldMatch) Parameters Type Name Description System.Boolean phraseHighlight true or false for phrase highlighting System.Boolean fieldMatch true of false for field matching | Improve this Doc View Source FastVectorHighlighter(Boolean, Boolean, IFragListBuilder, IFragmentsBuilder) a constructor. A IFragListBuilder and a IFragmentsBuilder can be specified (plugins). Declaration public FastVectorHighlighter(bool phraseHighlight, bool fieldMatch, IFragListBuilder fragListBuilder, IFragmentsBuilder fragmentsBuilder) Parameters Type Name Description System.Boolean phraseHighlight true of false for phrase highlighting System.Boolean fieldMatch true of false for field matching IFragListBuilder fragListBuilder an instance of IFragmentsBuilder IFragmentsBuilder fragmentsBuilder an instance of IFragmentsBuilder Fields | Improve this Doc View Source DEFAULT_FIELD_MATCH Declaration public static readonly bool DEFAULT_FIELD_MATCH Field Value Type Description System.Boolean | Improve this Doc View Source DEFAULT_PHRASE_HIGHLIGHT Declaration public static readonly bool DEFAULT_PHRASE_HIGHLIGHT Field Value Type Description System.Boolean Properties | Improve this Doc View Source IsFieldMatch return whether fieldMatch or not. Declaration public virtual bool IsFieldMatch { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPhraseHighlight return whether phraseHighlight or not. Declaration public virtual bool IsPhraseHighlight { get; } Property Value Type Description System.Boolean | Improve this Doc View Source PhraseLimit Gets or Sets the maximum number of phrases to analyze when searching for the highest-scoring phrase. The default is unlimited (int.MaxValue). Declaration public virtual int PhraseLimit { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetBestFragment(FieldQuery, IndexReader, Int32, String, Int32) return the best fragment. Declaration public string GetBestFragment(FieldQuery fieldQuery, IndexReader reader, int docId, string fieldName, int fragCharSize) Parameters Type Name Description FieldQuery fieldQuery FieldQuery object Lucene.Net.Index.IndexReader reader Lucene.Net.Index.IndexReader of the index System.Int32 docId document id to be highlighted System.String fieldName field of the document to be highlighted System.Int32 fragCharSize the length (number of chars) of a fragment Returns Type Description System.String the best fragment (snippet) string Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source GetBestFragment(FieldQuery, IndexReader, Int32, String, Int32, IFragListBuilder, IFragmentsBuilder, String[], String[], IEncoder) return the best fragment. Declaration public string GetBestFragment(FieldQuery fieldQuery, IndexReader reader, int docId, string fieldName, int fragCharSize, IFragListBuilder fragListBuilder, IFragmentsBuilder fragmentsBuilder, string[] preTags, string[] postTags, IEncoder encoder) Parameters Type Name Description FieldQuery fieldQuery FieldQuery object Lucene.Net.Index.IndexReader reader Lucene.Net.Index.IndexReader of the index System.Int32 docId document id to be highlighted System.String fieldName field of the document to be highlighted System.Int32 fragCharSize the length (number of chars) of a fragment IFragListBuilder fragListBuilder IFragListBuilder object IFragmentsBuilder fragmentsBuilder IFragmentsBuilder object System.String [] preTags pre-tags to be used to highlight terms System.String [] postTags post-tags to be used to highlight terms IEncoder encoder an encoder that generates encoded text Returns Type Description System.String the best fragment (snippet) string Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source GetBestFragments(FieldQuery, IndexReader, Int32, String, ISet<String>, Int32, Int32, IFragListBuilder, IFragmentsBuilder, String[], String[], IEncoder) Return the best fragments. Matches are scanned from matchedFields and turned into fragments against storedField . The highlighting may not make sense if matchedFields has matches with offsets that don't correspond features in storedField . It will outright throw a System.IndexOutOfRangeException if matchedFields produces offsets outside of storedField . As such it is advisable that all matchedFields share the same source as storedField or are at least a prefix of it. Declaration public string[] GetBestFragments(FieldQuery fieldQuery, IndexReader reader, int docId, string storedField, ISet<string> matchedFields, int fragCharSize, int maxNumFragments, IFragListBuilder fragListBuilder, IFragmentsBuilder fragmentsBuilder, string[] preTags, string[] postTags, IEncoder encoder) Parameters Type Name Description FieldQuery fieldQuery FieldQuery object Lucene.Net.Index.IndexReader reader Lucene.Net.Index.IndexReader of the index System.Int32 docId document id to be highlighted System.String storedField field of the document that stores the text System.Collections.Generic.ISet < System.String > matchedFields fields of the document to scan for matches System.Int32 fragCharSize the length (number of chars) of a fragment System.Int32 maxNumFragments maximum number of fragments IFragListBuilder fragListBuilder IFragListBuilder object IFragmentsBuilder fragmentsBuilder IFragmentsBuilder object System.String [] preTags pre-tags to be used to highlight terms System.String [] postTags post-tags to be used to highlight terms IEncoder encoder an encoder that generates encoded text Returns Type Description System.String [] created fragments or null when no fragments created. size of the array can be less than maxNumFragments Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source GetBestFragments(FieldQuery, IndexReader, Int32, String, Int32, Int32) return the best fragments. Declaration public string[] GetBestFragments(FieldQuery fieldQuery, IndexReader reader, int docId, string fieldName, int fragCharSize, int maxNumFragments) Parameters Type Name Description FieldQuery fieldQuery FieldQuery object Lucene.Net.Index.IndexReader reader Lucene.Net.Index.IndexReader of the index System.Int32 docId document id to be highlighted System.String fieldName field of the document to be highlighted System.Int32 fragCharSize the length (number of chars) of a fragment System.Int32 maxNumFragments maximum number of fragments Returns Type Description System.String [] created fragments or null when no fragments created. size of the array can be less than maxNumFragments Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source GetBestFragments(FieldQuery, IndexReader, Int32, String, Int32, Int32, IFragListBuilder, IFragmentsBuilder, String[], String[], IEncoder) return the best fragments. Declaration public string[] GetBestFragments(FieldQuery fieldQuery, IndexReader reader, int docId, string fieldName, int fragCharSize, int maxNumFragments, IFragListBuilder fragListBuilder, IFragmentsBuilder fragmentsBuilder, string[] preTags, string[] postTags, IEncoder encoder) Parameters Type Name Description FieldQuery fieldQuery FieldQuery object Lucene.Net.Index.IndexReader reader Lucene.Net.Index.IndexReader of the index System.Int32 docId document id to be highlighted System.String fieldName field of the document to be highlighted System.Int32 fragCharSize the length (number of chars) of a fragment System.Int32 maxNumFragments maximum number of fragments IFragListBuilder fragListBuilder IFragListBuilder object IFragmentsBuilder fragmentsBuilder IFragmentsBuilder object System.String [] preTags pre-tags to be used to highlight terms System.String [] postTags post-tags to be used to highlight terms IEncoder encoder an encoder that generates encoded text Returns Type Description System.String [] created fragments or null when no fragments created. size of the array can be less than maxNumFragments Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source GetFieldQuery(Query) create a FieldQuery object. Declaration public virtual FieldQuery GetFieldQuery(Query query) Parameters Type Name Description Lucene.Net.Search.Query query a query Returns Type Description FieldQuery the created FieldQuery object | Improve this Doc View Source GetFieldQuery(Query, IndexReader) create a FieldQuery object. Declaration public virtual FieldQuery GetFieldQuery(Query query, IndexReader reader) Parameters Type Name Description Lucene.Net.Search.Query query a query Lucene.Net.Index.IndexReader reader Returns Type Description FieldQuery the created FieldQuery object"
  },
  "Lucene.Net.Search.VectorHighlight.FieldFragList.html": {
    "href": "Lucene.Net.Search.VectorHighlight.FieldFragList.html",
    "title": "Class FieldFragList | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class FieldFragList FieldFragList has a list of \"frag info\" that is used by IFragmentsBuilder class to create fragments (snippets). Inheritance System.Object FieldFragList SimpleFieldFragList WeightedFieldFragList Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public abstract class FieldFragList Constructors | Improve this Doc View Source FieldFragList(Int32) a constructor. Declaration public FieldFragList(int fragCharSize) Parameters Type Name Description System.Int32 fragCharSize the length (number of chars) of a fragment Properties | Improve this Doc View Source FragInfos return the list of FieldFragList.WeightedFragInfo s. Declaration public virtual IList<FieldFragList.WeightedFragInfo> FragInfos { get; } Property Value Type Description System.Collections.Generic.IList < FieldFragList.WeightedFragInfo > Methods | Improve this Doc View Source Add(Int32, Int32, IList<FieldPhraseList.WeightedPhraseInfo>) convert the list of FieldPhraseList.WeightedPhraseInfo to FieldFragList.WeightedFragInfo , then add it to the fragInfos Declaration public abstract void Add(int startOffset, int endOffset, IList<FieldPhraseList.WeightedPhraseInfo> phraseInfoList) Parameters Type Name Description System.Int32 startOffset start offset of the fragment System.Int32 endOffset end offset of the fragment System.Collections.Generic.IList < FieldPhraseList.WeightedPhraseInfo > phraseInfoList list of FieldPhraseList.WeightedPhraseInfo objects"
  },
  "Lucene.Net.Search.VectorHighlight.FieldFragList.WeightedFragInfo.html": {
    "href": "Lucene.Net.Search.VectorHighlight.FieldFragList.WeightedFragInfo.html",
    "title": "Class FieldFragList.WeightedFragInfo | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class FieldFragList.WeightedFragInfo List of term offsets + weight for a frag info Inheritance System.Object FieldFragList.WeightedFragInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class WeightedFragInfo Constructors | Improve this Doc View Source WeightedFragInfo(Int32, Int32, IList<FieldFragList.WeightedFragInfo.SubInfo>, Single) Declaration public WeightedFragInfo(int startOffset, int endOffset, IList<FieldFragList.WeightedFragInfo.SubInfo> subInfos, float totalBoost) Parameters Type Name Description System.Int32 startOffset System.Int32 endOffset System.Collections.Generic.IList < FieldFragList.WeightedFragInfo.SubInfo > subInfos System.Single totalBoost Properties | Improve this Doc View Source EndOffset Declaration public int EndOffset { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StartOffset Declaration public int StartOffset { get; } Property Value Type Description System.Int32 | Improve this Doc View Source SubInfos Declaration public IList<FieldFragList.WeightedFragInfo.SubInfo> SubInfos { get; } Property Value Type Description System.Collections.Generic.IList < FieldFragList.WeightedFragInfo.SubInfo > | Improve this Doc View Source TotalBoost Declaration public float TotalBoost { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "Lucene.Net.Search.VectorHighlight.FieldFragList.WeightedFragInfo.SubInfo.html": {
    "href": "Lucene.Net.Search.VectorHighlight.FieldFragList.WeightedFragInfo.SubInfo.html",
    "title": "Class FieldFragList.WeightedFragInfo.SubInfo | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class FieldFragList.WeightedFragInfo.SubInfo Represents the list of term offsets for some text Inheritance System.Object FieldFragList.WeightedFragInfo.SubInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class SubInfo Constructors | Improve this Doc View Source SubInfo(String, IList<FieldPhraseList.WeightedPhraseInfo.Toffs>, Int32, Single) Declaration public SubInfo(string text, IList<FieldPhraseList.WeightedPhraseInfo.Toffs> termsOffsets, int seqnum, float boost) Parameters Type Name Description System.String text System.Collections.Generic.IList < FieldPhraseList.WeightedPhraseInfo.Toffs > termsOffsets System.Int32 seqnum System.Single boost Properties | Improve this Doc View Source Boost Declaration public virtual float Boost { get; } Property Value Type Description System.Single | Improve this Doc View Source Seqnum Declaration public virtual int Seqnum { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TermsOffsets Declaration public virtual IList<FieldPhraseList.WeightedPhraseInfo.Toffs> TermsOffsets { get; } Property Value Type Description System.Collections.Generic.IList < FieldPhraseList.WeightedPhraseInfo.Toffs > | Improve this Doc View Source Text Declaration public virtual string Text { get; } Property Value Type Description System.String Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "Lucene.Net.Search.VectorHighlight.FieldPhraseList.html": {
    "href": "Lucene.Net.Search.VectorHighlight.FieldPhraseList.html",
    "title": "Class FieldPhraseList | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class FieldPhraseList FieldPhraseList has a list of WeightedPhraseInfo that is used by FragListBuilder to create a FieldFragList object. Inheritance System.Object FieldPhraseList Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class FieldPhraseList Constructors | Improve this Doc View Source FieldPhraseList(FieldPhraseList[]) Merging constructor. Declaration public FieldPhraseList(FieldPhraseList[] toMerge) Parameters Type Name Description FieldPhraseList [] toMerge FieldPhraseList s to merge to build this one | Improve this Doc View Source FieldPhraseList(FieldTermStack, FieldQuery) create a FieldPhraseList that has no limit on the number of phrases to analyze Declaration public FieldPhraseList(FieldTermStack fieldTermStack, FieldQuery fieldQuery) Parameters Type Name Description FieldTermStack fieldTermStack FieldTermStack object FieldQuery fieldQuery FieldQuery object | Improve this Doc View Source FieldPhraseList(FieldTermStack, FieldQuery, Int32) a constructor. Declaration public FieldPhraseList(FieldTermStack fieldTermStack, FieldQuery fieldQuery, int phraseLimit) Parameters Type Name Description FieldTermStack fieldTermStack FieldTermStack object FieldQuery fieldQuery FieldQuery object System.Int32 phraseLimit maximum size of phraseList Properties | Improve this Doc View Source PhraseList return the list of FieldPhraseList.WeightedPhraseInfo . Declaration public virtual IList<FieldPhraseList.WeightedPhraseInfo> PhraseList { get; } Property Value Type Description System.Collections.Generic.IList < FieldPhraseList.WeightedPhraseInfo > Methods | Improve this Doc View Source AddIfNoOverlap(FieldPhraseList.WeightedPhraseInfo) Declaration public virtual void AddIfNoOverlap(FieldPhraseList.WeightedPhraseInfo wpi) Parameters Type Name Description FieldPhraseList.WeightedPhraseInfo wpi"
  },
  "Lucene.Net.Search.VectorHighlight.FieldPhraseList.WeightedPhraseInfo.html": {
    "href": "Lucene.Net.Search.VectorHighlight.FieldPhraseList.WeightedPhraseInfo.html",
    "title": "Class FieldPhraseList.WeightedPhraseInfo | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class FieldPhraseList.WeightedPhraseInfo Represents the list of term offsets and boost for some text Inheritance System.Object FieldPhraseList.WeightedPhraseInfo Implements System.IComparable < FieldPhraseList.WeightedPhraseInfo > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class WeightedPhraseInfo : IComparable<FieldPhraseList.WeightedPhraseInfo> Constructors | Improve this Doc View Source WeightedPhraseInfo(ICollection<FieldPhraseList.WeightedPhraseInfo>) Merging constructor. Note that this just grabs seqnum from the first info. Declaration public WeightedPhraseInfo(ICollection<FieldPhraseList.WeightedPhraseInfo> toMerge) Parameters Type Name Description System.Collections.Generic.ICollection < FieldPhraseList.WeightedPhraseInfo > toMerge | Improve this Doc View Source WeightedPhraseInfo(IList<FieldTermStack.TermInfo>, Single) Declaration public WeightedPhraseInfo(IList<FieldTermStack.TermInfo> terms, float boost) Parameters Type Name Description System.Collections.Generic.IList < FieldTermStack.TermInfo > terms System.Single boost | Improve this Doc View Source WeightedPhraseInfo(IList<FieldTermStack.TermInfo>, Single, Int32) Declaration public WeightedPhraseInfo(IList<FieldTermStack.TermInfo> terms, float boost, int seqnum) Parameters Type Name Description System.Collections.Generic.IList < FieldTermStack.TermInfo > terms System.Single boost System.Int32 seqnum Properties | Improve this Doc View Source Boost the boost Declaration public virtual float Boost { get; } Property Value Type Description System.Single | Improve this Doc View Source EndOffset Declaration public virtual int EndOffset { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Seqnum the seqnum Declaration public virtual int Seqnum { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StartOffset Declaration public virtual int StartOffset { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TermsInfos the termInfos Declaration public virtual IList<FieldTermStack.TermInfo> TermsInfos { get; } Property Value Type Description System.Collections.Generic.IList < FieldTermStack.TermInfo > | Improve this Doc View Source TermsOffsets the termsOffsets Declaration public virtual IList<FieldPhraseList.WeightedPhraseInfo.Toffs> TermsOffsets { get; } Property Value Type Description System.Collections.Generic.IList < FieldPhraseList.WeightedPhraseInfo.Toffs > Methods | Improve this Doc View Source CompareTo(FieldPhraseList.WeightedPhraseInfo) Declaration public virtual int CompareTo(FieldPhraseList.WeightedPhraseInfo other) Parameters Type Name Description FieldPhraseList.WeightedPhraseInfo other Returns Type Description System.Int32 | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source GetText() Text of the match, calculated on the fly. Use for debugging only. Declaration public virtual string GetText() Returns Type Description System.String the text | Improve this Doc View Source IsOffsetOverlap(FieldPhraseList.WeightedPhraseInfo) Declaration public virtual bool IsOffsetOverlap(FieldPhraseList.WeightedPhraseInfo other) Parameters Type Name Description FieldPhraseList.WeightedPhraseInfo other Returns Type Description System.Boolean | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IComparable<T>"
  },
  "Lucene.Net.Search.VectorHighlight.FieldPhraseList.WeightedPhraseInfo.Toffs.html": {
    "href": "Lucene.Net.Search.VectorHighlight.FieldPhraseList.WeightedPhraseInfo.Toffs.html",
    "title": "Class FieldPhraseList.WeightedPhraseInfo.Toffs | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class FieldPhraseList.WeightedPhraseInfo.Toffs Term offsets (start + end) Inheritance System.Object FieldPhraseList.WeightedPhraseInfo.Toffs Implements System.IComparable < FieldPhraseList.WeightedPhraseInfo.Toffs > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class Toffs : IComparable<FieldPhraseList.WeightedPhraseInfo.Toffs> Constructors | Improve this Doc View Source Toffs(Int32, Int32) Declaration public Toffs(int startOffset, int endOffset) Parameters Type Name Description System.Int32 startOffset System.Int32 endOffset Properties | Improve this Doc View Source EndOffset Declaration public virtual int EndOffset { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source StartOffset Declaration public virtual int StartOffset { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source CompareTo(FieldPhraseList.WeightedPhraseInfo.Toffs) Declaration public virtual int CompareTo(FieldPhraseList.WeightedPhraseInfo.Toffs other) Parameters Type Name Description FieldPhraseList.WeightedPhraseInfo.Toffs other Returns Type Description System.Int32 | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IComparable<T>"
  },
  "Lucene.Net.Search.VectorHighlight.FieldQuery.html": {
    "href": "Lucene.Net.Search.VectorHighlight.FieldQuery.html",
    "title": "Class FieldQuery | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class FieldQuery FieldQuery breaks down query object into terms/phrases and keeps them in a FieldQuery.QueryPhraseMap structure. Inheritance System.Object FieldQuery Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class FieldQuery Methods | Improve this Doc View Source ApplyParentBoost(Query, Query) Push parent's boost into a clone of query if parent has a non 1 boost. Declaration protected virtual Query ApplyParentBoost(Query query, Query parent) Parameters Type Name Description Lucene.Net.Search.Query query Lucene.Net.Search.Query parent Returns Type Description Lucene.Net.Search.Query | Improve this Doc View Source GetFieldTermMap(String, String) Declaration public virtual FieldQuery.QueryPhraseMap GetFieldTermMap(string fieldName, string term) Parameters Type Name Description System.String fieldName System.String term Returns Type Description FieldQuery.QueryPhraseMap QueryPhraseMap | Improve this Doc View Source SearchPhrase(String, IList<FieldTermStack.TermInfo>) Declaration public virtual FieldQuery.QueryPhraseMap SearchPhrase(string fieldName, IList<FieldTermStack.TermInfo> phraseCandidate) Parameters Type Name Description System.String fieldName System.Collections.Generic.IList < FieldTermStack.TermInfo > phraseCandidate Returns Type Description FieldQuery.QueryPhraseMap QueryPhraseMap"
  },
  "Lucene.Net.Search.VectorHighlight.FieldQuery.QueryPhraseMap.html": {
    "href": "Lucene.Net.Search.VectorHighlight.FieldQuery.QueryPhraseMap.html",
    "title": "Class FieldQuery.QueryPhraseMap | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class FieldQuery.QueryPhraseMap Internal structure of a query for highlighting: represents a nested query structure Inheritance System.Object FieldQuery.QueryPhraseMap Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class QueryPhraseMap Constructors | Improve this Doc View Source QueryPhraseMap(FieldQuery) Declaration public QueryPhraseMap(FieldQuery fieldQuery) Parameters Type Name Description FieldQuery fieldQuery Properties | Improve this Doc View Source Boost Declaration public virtual float Boost { get; } Property Value Type Description System.Single | Improve this Doc View Source IsTerminal Declaration public virtual bool IsTerminal { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Slop Declaration public virtual int Slop { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TermOrPhraseNumber Declaration public virtual int TermOrPhraseNumber { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetTermMap(String) Declaration public virtual FieldQuery.QueryPhraseMap GetTermMap(string term) Parameters Type Name Description System.String term Returns Type Description FieldQuery.QueryPhraseMap | Improve this Doc View Source IsValidTermOrPhrase(IList<FieldTermStack.TermInfo>) Declaration public virtual bool IsValidTermOrPhrase(IList<FieldTermStack.TermInfo> phraseCandidate) Parameters Type Name Description System.Collections.Generic.IList < FieldTermStack.TermInfo > phraseCandidate Returns Type Description System.Boolean | Improve this Doc View Source SearchPhrase(IList<FieldTermStack.TermInfo>) Declaration public virtual FieldQuery.QueryPhraseMap SearchPhrase(IList<FieldTermStack.TermInfo> phraseCandidate) Parameters Type Name Description System.Collections.Generic.IList < FieldTermStack.TermInfo > phraseCandidate Returns Type Description FieldQuery.QueryPhraseMap"
  },
  "Lucene.Net.Search.VectorHighlight.FieldTermStack.html": {
    "href": "Lucene.Net.Search.VectorHighlight.FieldTermStack.html",
    "title": "Class FieldTermStack | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class FieldTermStack FieldTermStack is a stack that keeps query terms in the specified field of the document to be highlighted. Inheritance System.Object FieldTermStack Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class FieldTermStack Constructors | Improve this Doc View Source FieldTermStack(IndexReader, Int32, String, FieldQuery) a constructor. Declaration public FieldTermStack(IndexReader reader, int docId, string fieldName, FieldQuery fieldQuery) Parameters Type Name Description Lucene.Net.Index.IndexReader reader Lucene.Net.Index.IndexReader of the index System.Int32 docId document id to be highlighted System.String fieldName field of the document to be highlighted FieldQuery fieldQuery FieldQuery object Exceptions Type Condition System.IO.IOException If there is a low-level I/O error Properties | Improve this Doc View Source FieldName field name Declaration public virtual string FieldName { get; } Property Value Type Description System.String | Improve this Doc View Source IsEmpty to know whether the stack is empty. Returns true if the stack is empty, false if not Declaration public virtual bool IsEmpty { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Pop() Returns the top FieldTermStack.TermInfo object of the stack Declaration public virtual FieldTermStack.TermInfo Pop() Returns Type Description FieldTermStack.TermInfo the top FieldTermStack.TermInfo object of the stack | Improve this Doc View Source Push(FieldTermStack.TermInfo) Puts a FieldTermStack.TermInfo onto the top of the stack Declaration public virtual void Push(FieldTermStack.TermInfo termInfo) Parameters Type Name Description FieldTermStack.TermInfo termInfo the FieldTermStack.TermInfo object to be put on the top of the stack"
  },
  "Lucene.Net.Search.VectorHighlight.FieldTermStack.TermInfo.html": {
    "href": "Lucene.Net.Search.VectorHighlight.FieldTermStack.TermInfo.html",
    "title": "Class FieldTermStack.TermInfo | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class FieldTermStack.TermInfo Single term with its position/offsets in the document and IDF weight. It is System.IComparable<T> but considers only position. Inheritance System.Object FieldTermStack.TermInfo Implements System.IComparable < FieldTermStack.TermInfo > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class TermInfo : IComparable<FieldTermStack.TermInfo> Constructors | Improve this Doc View Source TermInfo(String, Int32, Int32, Int32, Single) Declaration public TermInfo(string text, int startOffset, int endOffset, int position, float weight) Parameters Type Name Description System.String text System.Int32 startOffset System.Int32 endOffset System.Int32 position System.Single weight Properties | Improve this Doc View Source EndOffset Declaration public virtual int EndOffset { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Next Returns the next TermInfo at this same position. This is a circular list! Declaration public virtual FieldTermStack.TermInfo Next { get; } Property Value Type Description FieldTermStack.TermInfo | Improve this Doc View Source Position Declaration public virtual int Position { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StartOffset Declaration public virtual int StartOffset { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Text Declaration public virtual string Text { get; } Property Value Type Description System.String | Improve this Doc View Source Weight Declaration public virtual float Weight { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source CompareTo(FieldTermStack.TermInfo) Declaration public virtual int CompareTo(FieldTermStack.TermInfo o) Parameters Type Name Description FieldTermStack.TermInfo o Returns Type Description System.Int32 | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IComparable<T>"
  },
  "Lucene.Net.Search.VectorHighlight.html": {
    "href": "Lucene.Net.Search.VectorHighlight.html",
    "title": "Namespace Lucene.Net.Search.VectorHighlight | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Namespace Lucene.Net.Search.VectorHighlight <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> This is an another highlighter implementation. Features fast for large docs support N-gram fields support phrase-unit highlighting with slops support multi-term (includes wildcard, range, regexp, etc) queries need Java 1.5 highlight fields need to be stored with Positions and Offsets take into account query boost and/or IDF-weight to score fragments support colored highlight tags pluggable FragListBuilder / FieldFragList pluggable FragmentsBuilder Algorithm To explain the algorithm, let's use the following sample text (to be highlighted) and user query: Sample Text Lucene is a search engine library. User Query Lucene^2 OR \"search library\"~1 The user query is a BooleanQuery that consists of TermQuery(\"Lucene\") with boost of 2 and PhraseQuery(\"search library\") with slop of 1. For your convenience, here is the offsets and positions info of the sample text. +--------+-----------------------------------+ | | 1111111111222222222233333| | offset|01234567890123456789012345678901234| +--------+-----------------------------------+ |document|Lucene is a search engine library. | +--------*-----------------------------------+ |position|0 1 2 3 4 5 | +--------*-----------------------------------+ Step 1. In Step 1, Fast Vector Highlighter generates FieldQuery.QueryPhraseMap from the user query. QueryPhraseMap consists of the following members: public class QueryPhraseMap { boolean terminal; int slop; // valid if terminal == true and phraseHighlight == true float boost; // valid if terminal == true Map<String, QueryPhraseMap> subMap; } QueryPhraseMap has subMap. The key of the subMap is a term text in the user query and the value is a subsequent QueryPhraseMap . If the query is a term (not phrase), then the subsequent QueryPhraseMap is marked as terminal. If the query is a phrase, then the subsequent QueryPhraseMap is not a terminal and it has the next term text in the phrase. From the sample user query, the following QueryPhraseMap will be generated: QueryPhraseMap +--------+-+ +-------+-+ |\"Lucene\"|o+->|boost=2|*| * : terminal +--------+-+ +-------+-+ +--------+-+ +---------+-+ +-------+------+-+ |\"search\"|o+->|\"library\"|o+->|boost=1|slop=1|*| +--------+-+ +---------+-+ +-------+------+-+ Step 2. In Step 2, Fast Vector Highlighter generates FieldTermStack . Fast Vector Highlighter uses term vector data (must be stored #setStoreTermVectorOffsets(boolean) and #setStoreTermVectorPositions(boolean) ) to generate it. FieldTermStack keeps the terms in the user query. Therefore, in this sample case, Fast Vector Highlighter generates the following FieldTermStack : FieldTermStack +------------------+ |\"Lucene\"(0,6,0) | +------------------+ |\"search\"(12,18,3) | +------------------+ |\"library\"(26,33,5)| +------------------+ where : \"termText\"(startOffset,endOffset,position) Step 3. In Step 3, Fast Vector Highlighter generates FieldPhraseList by reference to QueryPhraseMap and FieldTermStack . FieldPhraseList +----------------+-----------------+---+ |\"Lucene\" |[(0,6)] |w=2| +----------------+-----------------+---+ |\"search library\"|[(12,18),(26,33)]|w=1| +----------------+-----------------+---+ The type of each entry is WeightedPhraseInfo that consists of an array of terms offsets and weight. Step 4. In Step 4, Fast Vector Highlighter creates FieldFragList by reference to FieldPhraseList . In this sample case, the following FieldFragList will be generated: FieldFragList +---------------------------------+ |\"Lucene\"[(0,6)] | |\"search library\"[(12,18),(26,33)]| |totalBoost=3 | +---------------------------------+ The calculation for each FieldFragList.WeightedFragInfo.totalBoost (weight) depends on the implementation of FieldFragList.add( ... ) : public void add( int startOffset, int endOffset, List<WeightedPhraseInfo> phraseInfoList ) { float totalBoost = 0; List<SubInfo> subInfos = new ArrayList<SubInfo>(); for( WeightedPhraseInfo phraseInfo : phraseInfoList ){ subInfos.add( new SubInfo( phraseInfo.getText(), phraseInfo.getTermsOffsets(), phraseInfo.getSeqnum() ) ); totalBoost += phraseInfo.getBoost(); } getFragInfos().add( new WeightedFragInfo( startOffset, endOffset, subInfos, totalBoost ) ); } The used implementation of FieldFragList is noted in BaseFragListBuilder.createFieldFragList( ... ) : public FieldFragList createFieldFragList( FieldPhraseList fieldPhraseList, int fragCharSize ){ return createFieldFragList( fieldPhraseList, new SimpleFieldFragList( fragCharSize ), fragCharSize ); } Currently there are basically to approaches available: SimpleFragListBuilder using SimpleFieldFragList : sum-of-boosts -approach. The totalBoost is calculated by summarizing the query-boosts per term. Per default a term is boosted by 1.0 WeightedFragListBuilder using WeightedFieldFragList : sum-of-distinct-weights -approach. The totalBoost is calculated by summarizing the IDF-weights of distinct terms. Comparison of the two approaches: query = das alte testament (The Old Testament) Terms in fragment sum-of-distinct-weights sum-of-boosts das alte testament 5.339621 3.0 das alte testament 5.339621 3.0 das testament alte 5.339621 3.0 das alte testament 5.339621 3.0 das testament 2.9455688 2.0 das alte 2.4759595 2.0 das das das das 1.5015357 4.0 das das das 1.3003681 3.0 das das 1.061746 2.0 alte 1.0 1.0 alte 1.0 1.0 das 0.7507678 1.0 das 0.7507678 1.0 das 0.7507678 1.0 das 0.7507678 1.0 das 0.7507678 1.0 Step 5. In Step 5, by using FieldFragList and the field stored data, Fast Vector Highlighter creates highlighted snippets! Classes BaseFragListBuilder A abstract implementation of IFragListBuilder . BaseFragmentsBuilder Base IFragmentsBuilder implementation that supports colored pre/post tags and multivalued fields. Uses IBoundaryScanner to determine fragments. FastVectorHighlighter Another highlighter implementation. FieldFragList FieldFragList has a list of \"frag info\" that is used by IFragmentsBuilder class to create fragments (snippets). FieldFragList.WeightedFragInfo List of term offsets + weight for a frag info FieldFragList.WeightedFragInfo.SubInfo Represents the list of term offsets for some text FieldPhraseList FieldPhraseList has a list of WeightedPhraseInfo that is used by FragListBuilder to create a FieldFragList object. FieldPhraseList.WeightedPhraseInfo Represents the list of term offsets and boost for some text FieldPhraseList.WeightedPhraseInfo.Toffs Term offsets (start + end) FieldQuery FieldQuery breaks down query object into terms/phrases and keeps them in a FieldQuery.QueryPhraseMap structure. FieldQuery.QueryPhraseMap Internal structure of a query for highlighting: represents a nested query structure FieldTermStack FieldTermStack is a stack that keeps query terms in the specified field of the document to be highlighted. FieldTermStack.TermInfo Single term with its position/offsets in the document and IDF weight. It is System.IComparable<T> but considers only position. ScoreOrderFragmentsBuilder An implementation of FragmentsBuilder that outputs score-order fragments. ScoreOrderFragmentsBuilder.ScoreComparer System.Collections.Generic.IComparer<T> for FieldFragList.WeightedFragInfo by boost, breaking ties by offset. SimpleBoundaryScanner Simple boundary scanner implementation that divides fragments based on a set of separator characters. SimpleFieldFragList A simple implementation of FieldFragList . SimpleFragListBuilder A simple implementation of IFragListBuilder . SimpleFragmentsBuilder A simple implementation of FragmentsBuilder. SingleFragListBuilder An implementation class of IFragListBuilder that generates one FieldFragList.WeightedFragInfo object. Typical use case of this class is that you can get an entire field contents by using both of this class and SimpleFragmentsBuilder . FastVectorHighlighter h = new FastVectorHighlighter( true, true, new SingleFragListBuilder(), new SimpleFragmentsBuilder() ); WeightedFieldFragList A weighted implementation of FieldFragList . WeightedFragListBuilder A weighted implementation of IFragListBuilder . Interfaces IBoundaryScanner Finds fragment boundaries: pluggable into BaseFragmentsBuilder IFragListBuilder IFragListBuilder is an interface for FieldFragList builder classes. A IFragListBuilder class can be plugged in to Highlighter . IFragmentsBuilder IFragmentsBuilder is an interface for fragments (snippets) builder classes. A IFragmentsBuilder class can be plugged in to FastVectorHighlighter ."
  },
  "Lucene.Net.Search.VectorHighlight.IBoundaryScanner.html": {
    "href": "Lucene.Net.Search.VectorHighlight.IBoundaryScanner.html",
    "title": "Interface IBoundaryScanner | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Interface IBoundaryScanner Finds fragment boundaries: pluggable into BaseFragmentsBuilder Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public interface IBoundaryScanner Methods | Improve this Doc View Source FindEndOffset(StringBuilder, Int32) Scan forward to find start offset. Declaration int FindEndOffset(StringBuilder buffer, int start) Parameters Type Name Description System.Text.StringBuilder buffer scanned object System.Int32 start start offset to begin Returns Type Description System.Int32 the found end offset | Improve this Doc View Source FindStartOffset(StringBuilder, Int32) Scan backward to find end offset. Declaration int FindStartOffset(StringBuilder buffer, int start) Parameters Type Name Description System.Text.StringBuilder buffer scanned object System.Int32 start offset to begin Returns Type Description System.Int32 the found start offset"
  },
  "Lucene.Net.Search.VectorHighlight.IFragListBuilder.html": {
    "href": "Lucene.Net.Search.VectorHighlight.IFragListBuilder.html",
    "title": "Interface IFragListBuilder | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Interface IFragListBuilder IFragListBuilder is an interface for FieldFragList builder classes. A IFragListBuilder class can be plugged in to Highlighter . Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public interface IFragListBuilder Methods | Improve this Doc View Source CreateFieldFragList(FieldPhraseList, Int32) create a FieldFragList . Declaration FieldFragList CreateFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) Parameters Type Name Description FieldPhraseList fieldPhraseList FieldPhraseList object System.Int32 fragCharSize the length (number of chars) of a fragment Returns Type Description FieldFragList the created FieldFragList object"
  },
  "Lucene.Net.Search.VectorHighlight.IFragmentsBuilder.html": {
    "href": "Lucene.Net.Search.VectorHighlight.IFragmentsBuilder.html",
    "title": "Interface IFragmentsBuilder | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Interface IFragmentsBuilder IFragmentsBuilder is an interface for fragments (snippets) builder classes. A IFragmentsBuilder class can be plugged in to FastVectorHighlighter . Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public interface IFragmentsBuilder Methods | Improve this Doc View Source CreateFragment(IndexReader, Int32, String, FieldFragList) create a fragment. Declaration string CreateFragment(IndexReader reader, int docId, string fieldName, FieldFragList fieldFragList) Parameters Type Name Description Lucene.Net.Index.IndexReader reader Lucene.Net.Index.IndexReader of the index System.Int32 docId document id to be highlighted System.String fieldName field of the document to be highlighted FieldFragList fieldFragList FieldFragList object Returns Type Description System.String a created fragment or null when no fragment created Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source CreateFragment(IndexReader, Int32, String, FieldFragList, String[], String[], IEncoder) create a fragment. Declaration string CreateFragment(IndexReader reader, int docId, string fieldName, FieldFragList fieldFragList, string[] preTags, string[] postTags, IEncoder encoder) Parameters Type Name Description Lucene.Net.Index.IndexReader reader Lucene.Net.Index.IndexReader of the index System.Int32 docId document id to be highlighted System.String fieldName field of the document to be highlighted FieldFragList fieldFragList FieldFragList object System.String [] preTags pre-tags to be used to highlight terms System.String [] postTags post-tags to be used to highlight terms IEncoder encoder an encoder that generates encoded text Returns Type Description System.String a created fragment or null when no fragment created Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source CreateFragments(IndexReader, Int32, String, FieldFragList, Int32) create multiple fragments. Declaration string[] CreateFragments(IndexReader reader, int docId, string fieldName, FieldFragList fieldFragList, int maxNumFragments) Parameters Type Name Description Lucene.Net.Index.IndexReader reader Lucene.Net.Index.IndexReader of the index System.Int32 docId document id to be highlighter System.String fieldName field of the document to be highlighted FieldFragList fieldFragList FieldFragList object System.Int32 maxNumFragments maximum number of fragments Returns Type Description System.String [] created fragments or null when no fragments created. size of the array can be less than maxNumFragments Exceptions Type Condition System.IO.IOException If there is a low-level I/O error | Improve this Doc View Source CreateFragments(IndexReader, Int32, String, FieldFragList, Int32, String[], String[], IEncoder) create multiple fragments. Declaration string[] CreateFragments(IndexReader reader, int docId, string fieldName, FieldFragList fieldFragList, int maxNumFragments, string[] preTags, string[] postTags, IEncoder encoder) Parameters Type Name Description Lucene.Net.Index.IndexReader reader Lucene.Net.Index.IndexReader of the index System.Int32 docId document id to be highlighter System.String fieldName field of the document to be highlighted FieldFragList fieldFragList FieldFragList object System.Int32 maxNumFragments maximum number of fragments System.String [] preTags pre-tags to be used to highlight terms System.String [] postTags post-tags to be used to highlight terms IEncoder encoder an encoder that generates encoded text Returns Type Description System.String [] created fragments or null when no fragments created. size of the array can be less than maxNumFragments Exceptions Type Condition System.IO.IOException If there is a low-level I/O error"
  },
  "Lucene.Net.Search.VectorHighlight.ScoreOrderFragmentsBuilder.html": {
    "href": "Lucene.Net.Search.VectorHighlight.ScoreOrderFragmentsBuilder.html",
    "title": "Class ScoreOrderFragmentsBuilder | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class ScoreOrderFragmentsBuilder An implementation of FragmentsBuilder that outputs score-order fragments. Inheritance System.Object BaseFragmentsBuilder ScoreOrderFragmentsBuilder Implements IFragmentsBuilder Inherited Members BaseFragmentsBuilder.m_preTags BaseFragmentsBuilder.m_postTags BaseFragmentsBuilder.COLORED_PRE_TAGS BaseFragmentsBuilder.COLORED_POST_TAGS BaseFragmentsBuilder.CreateFragment(IndexReader, Int32, String, FieldFragList) BaseFragmentsBuilder.CreateFragments(IndexReader, Int32, String, FieldFragList, Int32) BaseFragmentsBuilder.CreateFragment(IndexReader, Int32, String, FieldFragList, String[], String[], IEncoder) BaseFragmentsBuilder.CreateFragments(IndexReader, Int32, String, FieldFragList, Int32, String[], String[], IEncoder) BaseFragmentsBuilder.GetFields(IndexReader, Int32, String) BaseFragmentsBuilder.MakeFragment(StringBuilder, Int32[], Field[], FieldFragList.WeightedFragInfo, String[], String[], IEncoder) BaseFragmentsBuilder.GetFragmentSourceMSO(StringBuilder, Int32[], Field[], Int32, Int32, Int32[]) BaseFragmentsBuilder.GetFragmentSource(StringBuilder, Int32[], Field[], Int32, Int32) BaseFragmentsBuilder.DiscreteMultiValueHighlighting(IList<FieldFragList.WeightedFragInfo>, Field[]) BaseFragmentsBuilder.MultiValuedSeparator BaseFragmentsBuilder.IsDiscreteMultiValueHighlighting BaseFragmentsBuilder.GetPreTag(Int32) BaseFragmentsBuilder.GetPostTag(Int32) BaseFragmentsBuilder.GetPreTag(String[], Int32) BaseFragmentsBuilder.GetPostTag(String[], Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class ScoreOrderFragmentsBuilder : BaseFragmentsBuilder, IFragmentsBuilder Constructors | Improve this Doc View Source ScoreOrderFragmentsBuilder() a constructor. Declaration public ScoreOrderFragmentsBuilder() | Improve this Doc View Source ScoreOrderFragmentsBuilder(IBoundaryScanner) Declaration public ScoreOrderFragmentsBuilder(IBoundaryScanner bs) Parameters Type Name Description IBoundaryScanner bs | Improve this Doc View Source ScoreOrderFragmentsBuilder(String[], String[]) a constructor. Declaration public ScoreOrderFragmentsBuilder(string[] preTags, string[] postTags) Parameters Type Name Description System.String [] preTags array of pre-tags for markup terms. System.String [] postTags array of post-tags for markup terms. | Improve this Doc View Source ScoreOrderFragmentsBuilder(String[], String[], IBoundaryScanner) Declaration public ScoreOrderFragmentsBuilder(string[] preTags, string[] postTags, IBoundaryScanner bs) Parameters Type Name Description System.String [] preTags System.String [] postTags IBoundaryScanner bs Methods | Improve this Doc View Source GetWeightedFragInfoList(IList<FieldFragList.WeightedFragInfo>) Sort by score the list of FieldFragList.WeightedFragInfo Declaration public override IList<FieldFragList.WeightedFragInfo> GetWeightedFragInfoList(IList<FieldFragList.WeightedFragInfo> src) Parameters Type Name Description System.Collections.Generic.IList < FieldFragList.WeightedFragInfo > src Returns Type Description System.Collections.Generic.IList < FieldFragList.WeightedFragInfo > Overrides BaseFragmentsBuilder.GetWeightedFragInfoList(IList<FieldFragList.WeightedFragInfo>) Implements IFragmentsBuilder"
  },
  "Lucene.Net.Search.VectorHighlight.ScoreOrderFragmentsBuilder.ScoreComparer.html": {
    "href": "Lucene.Net.Search.VectorHighlight.ScoreOrderFragmentsBuilder.ScoreComparer.html",
    "title": "Class ScoreOrderFragmentsBuilder.ScoreComparer | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class ScoreOrderFragmentsBuilder.ScoreComparer System.Collections.Generic.IComparer<T> for FieldFragList.WeightedFragInfo by boost, breaking ties by offset. Inheritance System.Object ScoreOrderFragmentsBuilder.ScoreComparer Implements System.Collections.Generic.IComparer < FieldFragList.WeightedFragInfo > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class ScoreComparer : IComparer<FieldFragList.WeightedFragInfo> Methods | Improve this Doc View Source Compare(FieldFragList.WeightedFragInfo, FieldFragList.WeightedFragInfo) Declaration public virtual int Compare(FieldFragList.WeightedFragInfo o1, FieldFragList.WeightedFragInfo o2) Parameters Type Name Description FieldFragList.WeightedFragInfo o1 FieldFragList.WeightedFragInfo o2 Returns Type Description System.Int32 Implements System.Collections.Generic.IComparer<T>"
  },
  "Lucene.Net.Search.VectorHighlight.SimpleBoundaryScanner.html": {
    "href": "Lucene.Net.Search.VectorHighlight.SimpleBoundaryScanner.html",
    "title": "Class SimpleBoundaryScanner | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SimpleBoundaryScanner Simple boundary scanner implementation that divides fragments based on a set of separator characters. Inheritance System.Object SimpleBoundaryScanner Implements IBoundaryScanner Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class SimpleBoundaryScanner : IBoundaryScanner Constructors | Improve this Doc View Source SimpleBoundaryScanner() Declaration public SimpleBoundaryScanner() | Improve this Doc View Source SimpleBoundaryScanner(Char[]) Declaration public SimpleBoundaryScanner(char[] boundaryChars) Parameters Type Name Description System.Char [] boundaryChars | Improve this Doc View Source SimpleBoundaryScanner(Int32) Declaration public SimpleBoundaryScanner(int maxScan) Parameters Type Name Description System.Int32 maxScan | Improve this Doc View Source SimpleBoundaryScanner(Int32, Char[]) Declaration public SimpleBoundaryScanner(int maxScan, char[] boundaryChars) Parameters Type Name Description System.Int32 maxScan System.Char [] boundaryChars | Improve this Doc View Source SimpleBoundaryScanner(Int32, ISet<Char>) Declaration public SimpleBoundaryScanner(int maxScan, ISet<char> boundaryChars) Parameters Type Name Description System.Int32 maxScan System.Collections.Generic.ISet < System.Char > boundaryChars Fields | Improve this Doc View Source DEFAULT_BOUNDARY_CHARS Declaration public static readonly char[] DEFAULT_BOUNDARY_CHARS Field Value Type Description System.Char [] | Improve this Doc View Source DEFAULT_MAX_SCAN Declaration public static readonly int DEFAULT_MAX_SCAN Field Value Type Description System.Int32 | Improve this Doc View Source m_boundaryChars Declaration protected ISet<char> m_boundaryChars Field Value Type Description System.Collections.Generic.ISet < System.Char > | Improve this Doc View Source m_maxScan Declaration protected int m_maxScan Field Value Type Description System.Int32 Methods | Improve this Doc View Source FindEndOffset(StringBuilder, Int32) Declaration public virtual int FindEndOffset(StringBuilder buffer, int start) Parameters Type Name Description System.Text.StringBuilder buffer System.Int32 start Returns Type Description System.Int32 | Improve this Doc View Source FindStartOffset(StringBuilder, Int32) Declaration public virtual int FindStartOffset(StringBuilder buffer, int start) Parameters Type Name Description System.Text.StringBuilder buffer System.Int32 start Returns Type Description System.Int32 Implements IBoundaryScanner"
  },
  "Lucene.Net.Search.VectorHighlight.SimpleFieldFragList.html": {
    "href": "Lucene.Net.Search.VectorHighlight.SimpleFieldFragList.html",
    "title": "Class SimpleFieldFragList | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SimpleFieldFragList A simple implementation of FieldFragList . Inheritance System.Object FieldFragList SimpleFieldFragList Inherited Members FieldFragList.FragInfos System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class SimpleFieldFragList : FieldFragList Constructors | Improve this Doc View Source SimpleFieldFragList(Int32) a constructor. Declaration public SimpleFieldFragList(int fragCharSize) Parameters Type Name Description System.Int32 fragCharSize the length (number of chars) of a fragment Methods | Improve this Doc View Source Add(Int32, Int32, IList<FieldPhraseList.WeightedPhraseInfo>) Add(Int32, Int32, IList<FieldPhraseList.WeightedPhraseInfo>) Declaration public override void Add(int startOffset, int endOffset, IList<FieldPhraseList.WeightedPhraseInfo> phraseInfoList) Parameters Type Name Description System.Int32 startOffset System.Int32 endOffset System.Collections.Generic.IList < FieldPhraseList.WeightedPhraseInfo > phraseInfoList Overrides FieldFragList.Add(Int32, Int32, IList<FieldPhraseList.WeightedPhraseInfo>)"
  },
  "Lucene.Net.Search.VectorHighlight.SimpleFragListBuilder.html": {
    "href": "Lucene.Net.Search.VectorHighlight.SimpleFragListBuilder.html",
    "title": "Class SimpleFragListBuilder | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SimpleFragListBuilder A simple implementation of IFragListBuilder . Inheritance System.Object BaseFragListBuilder SimpleFragListBuilder Implements IFragListBuilder Inherited Members BaseFragListBuilder.MARGIN_DEFAULT BaseFragListBuilder.MIN_FRAG_CHAR_SIZE_FACTOR BaseFragListBuilder.CreateFieldFragList(FieldPhraseList, FieldFragList, Int32) BaseFragListBuilder.AcceptPhrase(FieldPhraseList.WeightedPhraseInfo, Int32, Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class SimpleFragListBuilder : BaseFragListBuilder, IFragListBuilder Constructors | Improve this Doc View Source SimpleFragListBuilder() Declaration public SimpleFragListBuilder() | Improve this Doc View Source SimpleFragListBuilder(Int32) Declaration public SimpleFragListBuilder(int margin) Parameters Type Name Description System.Int32 margin Methods | Improve this Doc View Source CreateFieldFragList(FieldPhraseList, Int32) CreateFieldFragList(FieldPhraseList, Int32) Declaration public override FieldFragList CreateFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) Parameters Type Name Description FieldPhraseList fieldPhraseList System.Int32 fragCharSize Returns Type Description FieldFragList Overrides BaseFragListBuilder.CreateFieldFragList(FieldPhraseList, Int32) Implements IFragListBuilder"
  },
  "Lucene.Net.Search.VectorHighlight.SimpleFragmentsBuilder.html": {
    "href": "Lucene.Net.Search.VectorHighlight.SimpleFragmentsBuilder.html",
    "title": "Class SimpleFragmentsBuilder | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SimpleFragmentsBuilder A simple implementation of FragmentsBuilder. Inheritance System.Object BaseFragmentsBuilder SimpleFragmentsBuilder Implements IFragmentsBuilder Inherited Members BaseFragmentsBuilder.m_preTags BaseFragmentsBuilder.m_postTags BaseFragmentsBuilder.COLORED_PRE_TAGS BaseFragmentsBuilder.COLORED_POST_TAGS BaseFragmentsBuilder.CreateFragment(IndexReader, Int32, String, FieldFragList) BaseFragmentsBuilder.CreateFragments(IndexReader, Int32, String, FieldFragList, Int32) BaseFragmentsBuilder.CreateFragment(IndexReader, Int32, String, FieldFragList, String[], String[], IEncoder) BaseFragmentsBuilder.CreateFragments(IndexReader, Int32, String, FieldFragList, Int32, String[], String[], IEncoder) BaseFragmentsBuilder.GetFields(IndexReader, Int32, String) BaseFragmentsBuilder.MakeFragment(StringBuilder, Int32[], Field[], FieldFragList.WeightedFragInfo, String[], String[], IEncoder) BaseFragmentsBuilder.GetFragmentSourceMSO(StringBuilder, Int32[], Field[], Int32, Int32, Int32[]) BaseFragmentsBuilder.GetFragmentSource(StringBuilder, Int32[], Field[], Int32, Int32) BaseFragmentsBuilder.DiscreteMultiValueHighlighting(IList<FieldFragList.WeightedFragInfo>, Field[]) BaseFragmentsBuilder.MultiValuedSeparator BaseFragmentsBuilder.IsDiscreteMultiValueHighlighting BaseFragmentsBuilder.GetPreTag(Int32) BaseFragmentsBuilder.GetPostTag(Int32) BaseFragmentsBuilder.GetPreTag(String[], Int32) BaseFragmentsBuilder.GetPostTag(String[], Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class SimpleFragmentsBuilder : BaseFragmentsBuilder, IFragmentsBuilder Constructors | Improve this Doc View Source SimpleFragmentsBuilder() a constructor. Declaration public SimpleFragmentsBuilder() | Improve this Doc View Source SimpleFragmentsBuilder(IBoundaryScanner) Declaration public SimpleFragmentsBuilder(IBoundaryScanner bs) Parameters Type Name Description IBoundaryScanner bs | Improve this Doc View Source SimpleFragmentsBuilder(String[], String[]) a constructor. Declaration public SimpleFragmentsBuilder(string[] preTags, string[] postTags) Parameters Type Name Description System.String [] preTags array of pre-tags for markup terms. System.String [] postTags array of post-tags for markup terms. | Improve this Doc View Source SimpleFragmentsBuilder(String[], String[], IBoundaryScanner) Declaration public SimpleFragmentsBuilder(string[] preTags, string[] postTags, IBoundaryScanner bs) Parameters Type Name Description System.String [] preTags System.String [] postTags IBoundaryScanner bs Methods | Improve this Doc View Source GetWeightedFragInfoList(IList<FieldFragList.WeightedFragInfo>) do nothing. return the source list. Declaration public override IList<FieldFragList.WeightedFragInfo> GetWeightedFragInfoList(IList<FieldFragList.WeightedFragInfo> src) Parameters Type Name Description System.Collections.Generic.IList < FieldFragList.WeightedFragInfo > src Returns Type Description System.Collections.Generic.IList < FieldFragList.WeightedFragInfo > Overrides BaseFragmentsBuilder.GetWeightedFragInfoList(IList<FieldFragList.WeightedFragInfo>) Implements IFragmentsBuilder"
  },
  "Lucene.Net.Search.VectorHighlight.SingleFragListBuilder.html": {
    "href": "Lucene.Net.Search.VectorHighlight.SingleFragListBuilder.html",
    "title": "Class SingleFragListBuilder | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SingleFragListBuilder An implementation class of IFragListBuilder that generates one FieldFragList.WeightedFragInfo object. Typical use case of this class is that you can get an entire field contents by using both of this class and SimpleFragmentsBuilder . FastVectorHighlighter h = new FastVectorHighlighter( true, true, new SingleFragListBuilder(), new SimpleFragmentsBuilder() ); Inheritance System.Object SingleFragListBuilder Implements IFragListBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class SingleFragListBuilder : IFragListBuilder Methods | Improve this Doc View Source CreateFieldFragList(FieldPhraseList, Int32) Declaration public virtual FieldFragList CreateFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) Parameters Type Name Description FieldPhraseList fieldPhraseList System.Int32 fragCharSize Returns Type Description FieldFragList Implements IFragListBuilder"
  },
  "Lucene.Net.Search.VectorHighlight.WeightedFieldFragList.html": {
    "href": "Lucene.Net.Search.VectorHighlight.WeightedFieldFragList.html",
    "title": "Class WeightedFieldFragList | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class WeightedFieldFragList A weighted implementation of FieldFragList . Inheritance System.Object FieldFragList WeightedFieldFragList Inherited Members FieldFragList.FragInfos System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class WeightedFieldFragList : FieldFragList Constructors | Improve this Doc View Source WeightedFieldFragList(Int32) a constructor. Declaration public WeightedFieldFragList(int fragCharSize) Parameters Type Name Description System.Int32 fragCharSize the length (number of chars) of a fragment Methods | Improve this Doc View Source Add(Int32, Int32, IList<FieldPhraseList.WeightedPhraseInfo>) Add(Int32, Int32, IList<FieldPhraseList.WeightedPhraseInfo>) . Declaration public override void Add(int startOffset, int endOffset, IList<FieldPhraseList.WeightedPhraseInfo> phraseInfoList) Parameters Type Name Description System.Int32 startOffset System.Int32 endOffset System.Collections.Generic.IList < FieldPhraseList.WeightedPhraseInfo > phraseInfoList Overrides FieldFragList.Add(Int32, Int32, IList<FieldPhraseList.WeightedPhraseInfo>)"
  },
  "Lucene.Net.Search.VectorHighlight.WeightedFragListBuilder.html": {
    "href": "Lucene.Net.Search.VectorHighlight.WeightedFragListBuilder.html",
    "title": "Class WeightedFragListBuilder | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class WeightedFragListBuilder A weighted implementation of IFragListBuilder . Inheritance System.Object BaseFragListBuilder WeightedFragListBuilder Implements IFragListBuilder Inherited Members BaseFragListBuilder.MARGIN_DEFAULT BaseFragListBuilder.MIN_FRAG_CHAR_SIZE_FACTOR BaseFragListBuilder.CreateFieldFragList(FieldPhraseList, FieldFragList, Int32) BaseFragListBuilder.AcceptPhrase(FieldPhraseList.WeightedPhraseInfo, Int32, Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Search.VectorHighlight Assembly : Lucene.Net.Highlighter.dll Syntax public class WeightedFragListBuilder : BaseFragListBuilder, IFragListBuilder Constructors | Improve this Doc View Source WeightedFragListBuilder() Declaration public WeightedFragListBuilder() | Improve this Doc View Source WeightedFragListBuilder(Int32) Declaration public WeightedFragListBuilder(int margin) Parameters Type Name Description System.Int32 margin Methods | Improve this Doc View Source CreateFieldFragList(FieldPhraseList, Int32) CreateFieldFragList(FieldPhraseList, Int32) Declaration public override FieldFragList CreateFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) Parameters Type Name Description FieldPhraseList fieldPhraseList System.Int32 fragCharSize Returns Type Description FieldFragList Overrides BaseFragListBuilder.CreateFieldFragList(FieldPhraseList, Int32) Implements IFragListBuilder"
  },
  "overview.html": {
    "href": "overview.html",
    "title": "Lucene.Net.Highlighter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Lucene.Net.Highlighter <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> The highlight package contains classes to provide \"keyword in context\" features typically used to highlight search terms in the text of results pages."
  }
}