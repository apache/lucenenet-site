{
  "Lucene.Net.Spatial.DisjointSpatialFilter.html": {
    "href": "Lucene.Net.Spatial.DisjointSpatialFilter.html",
    "title": "Class DisjointSpatialFilter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class DisjointSpatialFilter A Spatial Filter implementing IsDisjointTo in terms of a SpatialStrategy 's support for Intersects . A document is considered disjoint if it has spatial data that does not intersect with the query shape. Another way of looking at this is that it's a way to invert a query shape. This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object Lucene.Net.Search.Filter DisjointSpatialFilter Inherited Members Filter.NewAnonymous(Func<AtomicReaderContext, IBits, DocIdSet>) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial Assembly : Lucene.Net.Spatial.dll Syntax public class DisjointSpatialFilter : Filter Constructors | Improve this Doc View Source DisjointSpatialFilter(SpatialStrategy, SpatialArgs, String) Declaration public DisjointSpatialFilter(SpatialStrategy strategy, SpatialArgs args, string field) Parameters Type Name Description SpatialStrategy strategy Needed to compute intersects SpatialArgs args Used in spatial intersection System.String field This field is used to determine which docs have spatial data via GetDocsWithField(AtomicReader, String) . Passing null will assume all docs have spatial data. Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetDocIdSet(AtomicReaderContext, IBits) Declaration public override DocIdSet GetDocIdSet(AtomicReaderContext context, IBits acceptDocs) Parameters Type Name Description Lucene.Net.Index.AtomicReaderContext context Lucene.Net.Util.IBits acceptDocs Returns Type Description Lucene.Net.Search.DocIdSet Overrides Lucene.Net.Search.Filter.GetDocIdSet(Lucene.Net.Index.AtomicReaderContext, Lucene.Net.Util.IBits) Exceptions Type Condition System.IO.IOException | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode()"
  },
  "Lucene.Net.Spatial.html": {
    "href": "Lucene.Net.Spatial.html",
    "title": "Namespace Lucene.Net.Spatial | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Namespace Lucene.Net.Spatial <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> The Spatial Module for Apache Lucene The spatial module is new to Lucene 4, replacing the old \"contrib\" module that came before it. The principle interface to the module is a SpatialStrategy which encapsulates an approach to indexing and searching based on shapes. Different Strategies have different features and performance profiles, which are documented at each Strategy implementation class level. For some sample code showing how to use the API, see SpatialExample.java in the tests. The spatial module uses Spatial4j heavily. Spatial4j is an ASL licensed library with these capabilities: * Provides shape implementations, namely point, rectangle, and circle. Both geospatial contexts and plain 2D Euclidean/Cartesian contexts are supported. With an additional dependency, it adds polygon and other geometry shape support via integration with JTS Topology Suite . This includes dateline wrap support. * Shape parsing and serialization, including Well-Known Text (WKT) (via JTS). * Distance and other spatial related math calculations. Historical note: The new spatial module was once known as Lucene Spatial Playground (LSP) as an external project. In ~March 2012, LSP split into this new module as part of Lucene and Spatial4j externally. A large chunk of the LSP implementation originated as SOLR-2155 which uses trie/prefix-tree algorithms with a geohash encoding. That approach is implemented in RecursivePrefixTreeStrategy today. Classes DisjointSpatialFilter A Spatial Filter implementing IsDisjointTo in terms of a SpatialStrategy 's support for Intersects . A document is considered disjoint if it has spatial data that does not intersect with the query shape. Another way of looking at this is that it's a way to invert a query shape. This is a Lucene.NET EXPERIMENTAL API, use at your own risk SpatialStrategy The SpatialStrategy encapsulates an approach to indexing and searching based on shapes. Different implementations will support different features. A strategy should document these common elements: Can it index more than one shape per field? What types of shapes can be indexed? What types of query shapes can be used? What types of query operations are supported? This might vary per shape. Does it use the FieldCache , or some other type of cache? When? If a strategy only supports certain shapes at index or query time, then in general it will throw an exception if given an incompatible one. It will not be coerced into compatibility. Note that a SpatialStrategy is not involved with the Lucene stored field values of shapes, which is immaterial to indexing and search. Thread-safe. This is a Lucene.NET EXPERIMENTAL API, use at your own risk"
  },
  "Lucene.Net.Spatial.Prefix.AbstractPrefixTreeFilter.BaseTermsEnumTraverser.html": {
    "href": "Lucene.Net.Spatial.Prefix.AbstractPrefixTreeFilter.BaseTermsEnumTraverser.html",
    "title": "Class AbstractPrefixTreeFilter.BaseTermsEnumTraverser | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class AbstractPrefixTreeFilter.BaseTermsEnumTraverser Holds transient state and docid collecting utility methods as part of traversing a Lucene.Net.Index.TermsEnum . Inheritance System.Object AbstractPrefixTreeFilter.BaseTermsEnumTraverser AbstractVisitingPrefixTreeFilter.VisitorTemplate Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Prefix Assembly : Lucene.Net.Spatial.dll Syntax public abstract class BaseTermsEnumTraverser Constructors | Improve this Doc View Source BaseTermsEnumTraverser(AbstractPrefixTreeFilter, AtomicReaderContext, IBits) Declaration public BaseTermsEnumTraverser(AbstractPrefixTreeFilter outerInstance, AtomicReaderContext context, IBits acceptDocs) Parameters Type Name Description AbstractPrefixTreeFilter outerInstance Lucene.Net.Index.AtomicReaderContext context Lucene.Net.Util.IBits acceptDocs Fields | Improve this Doc View Source m_acceptDocs Declaration protected IBits m_acceptDocs Field Value Type Description Lucene.Net.Util.IBits | Improve this Doc View Source m_context Declaration protected readonly AtomicReaderContext m_context Field Value Type Description Lucene.Net.Index.AtomicReaderContext | Improve this Doc View Source m_docsEnum Declaration protected DocsEnum m_docsEnum Field Value Type Description Lucene.Net.Index.DocsEnum | Improve this Doc View Source m_maxDoc Declaration protected readonly int m_maxDoc Field Value Type Description System.Int32 | Improve this Doc View Source m_outerInstance Declaration protected readonly AbstractPrefixTreeFilter m_outerInstance Field Value Type Description AbstractPrefixTreeFilter | Improve this Doc View Source m_termsEnum Declaration protected TermsEnum m_termsEnum Field Value Type Description Lucene.Net.Index.TermsEnum Methods | Improve this Doc View Source CollectDocs(FixedBitSet) Declaration protected virtual void CollectDocs(FixedBitSet bitSet) Parameters Type Name Description Lucene.Net.Util.FixedBitSet bitSet"
  },
  "Lucene.Net.Spatial.Prefix.AbstractPrefixTreeFilter.html": {
    "href": "Lucene.Net.Spatial.Prefix.AbstractPrefixTreeFilter.html",
    "title": "Class AbstractPrefixTreeFilter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class AbstractPrefixTreeFilter Base class for Lucene Filters on SpatialPrefixTree fields. This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object Lucene.Net.Search.Filter AbstractPrefixTreeFilter AbstractVisitingPrefixTreeFilter ContainsPrefixTreeFilter Inherited Members Lucene.Net.Search.Filter.GetDocIdSet(Lucene.Net.Index.AtomicReaderContext, Lucene.Net.Util.IBits) Filter.NewAnonymous(Func<AtomicReaderContext, IBits, DocIdSet>) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Prefix Assembly : Lucene.Net.Spatial.dll Syntax public abstract class AbstractPrefixTreeFilter : Filter Constructors | Improve this Doc View Source AbstractPrefixTreeFilter(IShape, String, SpatialPrefixTree, Int32) Declaration public AbstractPrefixTreeFilter(IShape queryShape, string fieldName, SpatialPrefixTree grid, int detailLevel) Parameters Type Name Description Spatial4n.Core.Shapes.IShape queryShape System.String fieldName SpatialPrefixTree grid System.Int32 detailLevel Fields | Improve this Doc View Source m_detailLevel Declaration protected readonly int m_detailLevel Field Value Type Description System.Int32 | Improve this Doc View Source m_fieldName Declaration protected readonly string m_fieldName Field Value Type Description System.String | Improve this Doc View Source m_grid Declaration protected readonly SpatialPrefixTree m_grid Field Value Type Description SpatialPrefixTree | Improve this Doc View Source m_queryShape Declaration protected readonly IShape m_queryShape Field Value Type Description Spatial4n.Core.Shapes.IShape Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode()"
  },
  "Lucene.Net.Spatial.Prefix.AbstractVisitingPrefixTreeFilter.html": {
    "href": "Lucene.Net.Spatial.Prefix.AbstractVisitingPrefixTreeFilter.html",
    "title": "Class AbstractVisitingPrefixTreeFilter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class AbstractVisitingPrefixTreeFilter Traverses a SpatialPrefixTree indexed field, using the template & visitor design patterns for subclasses to guide the traversal and collect matching documents. Subclasses implement Lucene.Net.Search.Filter.GetDocIdSet(Lucene.Net.Index.AtomicReaderContext, Lucene.Net.Util.IBits) by instantiating a custom AbstractVisitingPrefixTreeFilter.VisitorTemplate subclass (i.e. an anonymous inner class) and implement the required methods. This is a Lucene.NET INTERNAL API, use at your own risk Inheritance System.Object Lucene.Net.Search.Filter AbstractPrefixTreeFilter AbstractVisitingPrefixTreeFilter IntersectsPrefixTreeFilter WithinPrefixTreeFilter Inherited Members AbstractPrefixTreeFilter.m_queryShape AbstractPrefixTreeFilter.m_fieldName AbstractPrefixTreeFilter.m_grid AbstractPrefixTreeFilter.m_detailLevel Lucene.Net.Search.Filter.GetDocIdSet(Lucene.Net.Index.AtomicReaderContext, Lucene.Net.Util.IBits) Filter.NewAnonymous(Func<AtomicReaderContext, IBits, DocIdSet>) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Prefix Assembly : Lucene.Net.Spatial.dll Syntax public abstract class AbstractVisitingPrefixTreeFilter : AbstractPrefixTreeFilter Constructors | Improve this Doc View Source AbstractVisitingPrefixTreeFilter(IShape, String, SpatialPrefixTree, Int32, Int32) Declaration public AbstractVisitingPrefixTreeFilter(IShape queryShape, string fieldName, SpatialPrefixTree grid, int detailLevel, int prefixGridScanLevel) Parameters Type Name Description Spatial4n.Core.Shapes.IShape queryShape System.String fieldName SpatialPrefixTree grid System.Int32 detailLevel System.Int32 prefixGridScanLevel Fields | Improve this Doc View Source m_prefixGridScanLevel Declaration protected readonly int m_prefixGridScanLevel Field Value Type Description System.Int32 Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides AbstractPrefixTreeFilter.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides AbstractPrefixTreeFilter.GetHashCode()"
  },
  "Lucene.Net.Spatial.Prefix.AbstractVisitingPrefixTreeFilter.VisitorTemplate.html": {
    "href": "Lucene.Net.Spatial.Prefix.AbstractVisitingPrefixTreeFilter.VisitorTemplate.html",
    "title": "Class AbstractVisitingPrefixTreeFilter.VisitorTemplate | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class AbstractVisitingPrefixTreeFilter.VisitorTemplate An abstract class designed to make it easy to implement predicates or other operations on a SpatialPrefixTree indexed field. An instance of this class is not designed to be re-used across AtomicReaderContext instances so simply create a new one for each call to, say a Lucene.Net.Search.Filter.GetDocIdSet(Lucene.Net.Index.AtomicReaderContext, Lucene.Net.Util.IBits) . The GetDocIdSet() method here starts the work. It first checks that there are indexed terms; if not it quickly returns null. Then it calls Start() so a subclass can set up a return value, like an Lucene.Net.Util.FixedBitSet . Then it starts the traversal process, calling FindSubCellsToVisit(Cell) which by default finds the top cells that intersect queryShape . If there isn't an indexed cell for a corresponding cell returned for this method then it's short-circuited until it finds one, at which point Visit(Cell) is called. At some depths, of the tree, the algorithm switches to a scanning mode that calls VisitScanned(Cell) for each leaf cell found. This is a Lucene.NET INTERNAL API, use at your own risk Inheritance System.Object AbstractPrefixTreeFilter.BaseTermsEnumTraverser AbstractVisitingPrefixTreeFilter.VisitorTemplate Inherited Members AbstractPrefixTreeFilter.BaseTermsEnumTraverser.m_outerInstance AbstractPrefixTreeFilter.BaseTermsEnumTraverser.m_context AbstractPrefixTreeFilter.BaseTermsEnumTraverser.m_acceptDocs AbstractPrefixTreeFilter.BaseTermsEnumTraverser.m_maxDoc AbstractPrefixTreeFilter.BaseTermsEnumTraverser.m_termsEnum AbstractPrefixTreeFilter.BaseTermsEnumTraverser.m_docsEnum AbstractPrefixTreeFilter.BaseTermsEnumTraverser.CollectDocs(FixedBitSet) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Prefix Assembly : Lucene.Net.Spatial.dll Syntax public abstract class VisitorTemplate : AbstractPrefixTreeFilter.BaseTermsEnumTraverser Constructors | Improve this Doc View Source VisitorTemplate(AbstractVisitingPrefixTreeFilter, AtomicReaderContext, IBits, Boolean) Declaration public VisitorTemplate(AbstractVisitingPrefixTreeFilter outerInstance, AtomicReaderContext context, IBits acceptDocs, bool hasIndexedLeaves) Parameters Type Name Description AbstractVisitingPrefixTreeFilter outerInstance Lucene.Net.Index.AtomicReaderContext context Lucene.Net.Util.IBits acceptDocs System.Boolean hasIndexedLeaves Fields | Improve this Doc View Source m_hasIndexedLeaves Declaration protected readonly bool m_hasIndexedLeaves Field Value Type Description System.Boolean Methods | Improve this Doc View Source FindSubCellsToVisit(Cell) Called when doing a divide & conquer to find the next intersecting cells of the query shape that are beneath cell . cell is guaranteed to have an intersection and thus this must return some number of nodes. Declaration protected virtual IEnumerator<Cell> FindSubCellsToVisit(Cell cell) Parameters Type Name Description Cell cell Returns Type Description System.Collections.Generic.IEnumerator < Cell > | Improve this Doc View Source Finish() Called last to return the result. Declaration protected abstract DocIdSet Finish() Returns Type Description Lucene.Net.Search.DocIdSet Exceptions Type Condition System.IO.IOException | Improve this Doc View Source GetDocIdSet() Declaration public virtual DocIdSet GetDocIdSet() Returns Type Description Lucene.Net.Search.DocIdSet | Improve this Doc View Source PostSiblings(AbstractVisitingPrefixTreeFilter.VNode) Declaration protected virtual void PostSiblings(AbstractVisitingPrefixTreeFilter.VNode vNode) Parameters Type Name Description AbstractVisitingPrefixTreeFilter.VNode vNode | Improve this Doc View Source PreSiblings(AbstractVisitingPrefixTreeFilter.VNode) Declaration protected virtual void PreSiblings(AbstractVisitingPrefixTreeFilter.VNode vNode) Parameters Type Name Description AbstractVisitingPrefixTreeFilter.VNode vNode | Improve this Doc View Source Scan(Int32) Scans ( termsEnum.MoveNext() ) terms until a term is found that does not start with curVNode's cell. If it finds a leaf cell or a cell at level scanDetailLevel then it calls VisitScanned(Cell) . Declaration protected virtual void Scan(int scanDetailLevel) Parameters Type Name Description System.Int32 scanDetailLevel Exceptions Type Condition System.IO.IOException | Improve this Doc View Source Start() Called first to setup things. Declaration protected abstract void Start() Exceptions Type Condition System.IO.IOException | Improve this Doc View Source Visit(Cell) Visit an indexed cell returned from FindSubCellsToVisit(Cell) . Declaration protected abstract bool Visit(Cell cell) Parameters Type Name Description Cell cell An intersecting cell. Returns Type Description System.Boolean true to descend to more levels. It is an error to return true if cell.Level == detailLevel Exceptions Type Condition System.IO.IOException | Improve this Doc View Source VisitLeaf(Cell) Called after visit() returns true and an indexed leaf cell is found. Declaration protected abstract void VisitLeaf(Cell cell) Parameters Type Name Description Cell cell Remarks Called after Visit() returns true and an indexed leaf cell is found. An indexed leaf cell means associated documents generally won't be found at further detail levels. Exceptions Type Condition System.IO.IOException | Improve this Doc View Source VisitScanned(Cell) The cell is either indexed as a leaf or is the last level of detail. It might not even intersect the query shape, so be sure to check for that. Declaration protected abstract void VisitScanned(Cell cell) Parameters Type Name Description Cell cell Exceptions Type Condition System.IO.IOException"
  },
  "Lucene.Net.Spatial.Prefix.AbstractVisitingPrefixTreeFilter.VNode.html": {
    "href": "Lucene.Net.Spatial.Prefix.AbstractVisitingPrefixTreeFilter.VNode.html",
    "title": "Class AbstractVisitingPrefixTreeFilter.VNode | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class AbstractVisitingPrefixTreeFilter.VNode A Visitor node/cell found via the query shape for AbstractVisitingPrefixTreeFilter.VisitorTemplate . Sometimes these are reset(cell). It's like a LinkedList node but forms a tree. This is a Lucene.NET INTERNAL API, use at your own risk Inheritance System.Object AbstractVisitingPrefixTreeFilter.VNode Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Prefix Assembly : Lucene.Net.Spatial.dll Syntax public class VNode"
  },
  "Lucene.Net.Spatial.Prefix.ContainsPrefixTreeFilter.html": {
    "href": "Lucene.Net.Spatial.Prefix.ContainsPrefixTreeFilter.html",
    "title": "Class ContainsPrefixTreeFilter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class ContainsPrefixTreeFilter Finds docs where its indexed shape Contains the query shape. For use on RecursivePrefixTreeStrategy . This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object Lucene.Net.Search.Filter AbstractPrefixTreeFilter ContainsPrefixTreeFilter Inherited Members AbstractPrefixTreeFilter.m_queryShape AbstractPrefixTreeFilter.m_fieldName AbstractPrefixTreeFilter.m_grid AbstractPrefixTreeFilter.m_detailLevel Filter.NewAnonymous(Func<AtomicReaderContext, IBits, DocIdSet>) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Prefix Assembly : Lucene.Net.Spatial.dll Syntax public class ContainsPrefixTreeFilter : AbstractPrefixTreeFilter Constructors | Improve this Doc View Source ContainsPrefixTreeFilter(IShape, String, SpatialPrefixTree, Int32, Boolean) Declaration public ContainsPrefixTreeFilter(IShape queryShape, string fieldName, SpatialPrefixTree grid, int detailLevel, bool multiOverlappingIndexedShapes) Parameters Type Name Description Spatial4n.Core.Shapes.IShape queryShape System.String fieldName SpatialPrefixTree grid System.Int32 detailLevel System.Boolean multiOverlappingIndexedShapes Fields | Improve this Doc View Source m_multiOverlappingIndexedShapes If the spatial data for a document is comprised of multiple overlapping or adjacent parts, it might fail to match a query shape when doing the CONTAINS predicate when the sum of those shapes contain the query shape but none do individually. Set this to false to increase performance if you don't care about that circumstance (such as if your indexed data doesn't even have such conditions). See LUCENE-5062. Declaration protected readonly bool m_multiOverlappingIndexedShapes Field Value Type Description System.Boolean Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides AbstractPrefixTreeFilter.Equals(Object) | Improve this Doc View Source GetDocIdSet(AtomicReaderContext, IBits) Declaration public override DocIdSet GetDocIdSet(AtomicReaderContext context, IBits acceptDocs) Parameters Type Name Description Lucene.Net.Index.AtomicReaderContext context Lucene.Net.Util.IBits acceptDocs Returns Type Description Lucene.Net.Search.DocIdSet Overrides Lucene.Net.Search.Filter.GetDocIdSet(Lucene.Net.Index.AtomicReaderContext, Lucene.Net.Util.IBits) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides AbstractPrefixTreeFilter.GetHashCode()"
  },
  "Lucene.Net.Spatial.Prefix.html": {
    "href": "Lucene.Net.Spatial.Prefix.html",
    "title": "Namespace Lucene.Net.Spatial.Prefix | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Namespace Lucene.Net.Spatial.Prefix <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> Prefix Tree Strategy Classes AbstractPrefixTreeFilter Base class for Lucene Filters on SpatialPrefixTree fields. This is a Lucene.NET EXPERIMENTAL API, use at your own risk AbstractPrefixTreeFilter.BaseTermsEnumTraverser Holds transient state and docid collecting utility methods as part of traversing a Lucene.Net.Index.TermsEnum . AbstractVisitingPrefixTreeFilter Traverses a SpatialPrefixTree indexed field, using the template & visitor design patterns for subclasses to guide the traversal and collect matching documents. Subclasses implement Lucene.Net.Search.Filter.GetDocIdSet(Lucene.Net.Index.AtomicReaderContext, Lucene.Net.Util.IBits) by instantiating a custom AbstractVisitingPrefixTreeFilter.VisitorTemplate subclass (i.e. an anonymous inner class) and implement the required methods. This is a Lucene.NET INTERNAL API, use at your own risk AbstractVisitingPrefixTreeFilter.VisitorTemplate An abstract class designed to make it easy to implement predicates or other operations on a SpatialPrefixTree indexed field. An instance of this class is not designed to be re-used across AtomicReaderContext instances so simply create a new one for each call to, say a Lucene.Net.Search.Filter.GetDocIdSet(Lucene.Net.Index.AtomicReaderContext, Lucene.Net.Util.IBits) . The GetDocIdSet() method here starts the work. It first checks that there are indexed terms; if not it quickly returns null. Then it calls Start() so a subclass can set up a return value, like an Lucene.Net.Util.FixedBitSet . Then it starts the traversal process, calling FindSubCellsToVisit(Cell) which by default finds the top cells that intersect queryShape . If there isn't an indexed cell for a corresponding cell returned for this method then it's short-circuited until it finds one, at which point Visit(Cell) is called. At some depths, of the tree, the algorithm switches to a scanning mode that calls VisitScanned(Cell) for each leaf cell found. This is a Lucene.NET INTERNAL API, use at your own risk AbstractVisitingPrefixTreeFilter.VNode A Visitor node/cell found via the query shape for AbstractVisitingPrefixTreeFilter.VisitorTemplate . Sometimes these are reset(cell). It's like a LinkedList node but forms a tree. This is a Lucene.NET INTERNAL API, use at your own risk ContainsPrefixTreeFilter Finds docs where its indexed shape Contains the query shape. For use on RecursivePrefixTreeStrategy . This is a Lucene.NET EXPERIMENTAL API, use at your own risk IntersectsPrefixTreeFilter A Filter matching documents that have an Spatial4n.Core.Shapes.SpatialRelation.INTERSECTS (i.e. not DISTINCT) relationship with a provided query shape. This is a Lucene.NET INTERNAL API, use at your own risk PointPrefixTreeFieldCacheProvider Implementation of ShapeFieldCacheProvider<T> designed for PrefixTreeStrategy s. Note, due to the fragmented representation of Shapes in these Strategies, this implementation can only retrieve the central Spatial4n.Core.Shapes.IPoint of the original Shapes. This is a Lucene.NET INTERNAL API, use at your own risk PrefixTreeStrategy An abstract SpatialStrategy based on SpatialPrefixTree . The two subclasses are RecursivePrefixTreeStrategy and TermQueryPrefixTreeStrategy . This strategy is most effective as a fast approximate spatial search filter. Characteristics: Can index any shape; however only RecursivePrefixTreeStrategy can effectively search non-point shapes. Can index a variable number of shapes per field value. This strategy can do it via multiple calls to CreateIndexableFields(IShape) for a document or by giving it some sort of Shape aggregate (e.g. NTS WKT MultiPoint). The shape's boundary is approximated to a grid precision. Can query with any shape. The shape's boundary is approximated to a grid precision. Only Intersects is supported. If only points are indexed then this is effectively equivalent to IsWithin. The strategy supports MakeDistanceValueSource(IPoint, Double) even for multi-valued data, so long as the indexed data is all points; the behavior is undefined otherwise. However, it will likely be removed in the future in lieu of using another strategy with a more scalable implementation. Use of this call is the only circumstance in which a cache is used. The cache is simple but as such it doesn't scale to large numbers of points nor is it real-time-search friendly. Implementation: The SpatialPrefixTree does most of the work, for example returning a list of terms representing grids of various sizes for a supplied shape. An important configuration item is DistErrPct which balances shape precision against scalability. See those docs. This is a Lucene.NET INTERNAL API, use at your own risk RecursivePrefixTreeStrategy A PrefixTreeStrategy which uses AbstractVisitingPrefixTreeFilter . This strategy has support for searching non-point shapes (note: not tested). Even a query shape with distErrPct=0 (fully precise to the grid) should have good performance for typical data, unless there is a lot of indexed data coincident with the shape's edge. This is a Lucene.NET EXPERIMENTAL API, use at your own risk TermQueryPrefixTreeStrategy A basic implementation of PrefixTreeStrategy using a large Lucene.Net.Queries.TermsFilter of all the cells from GetCells(IShape, Int32, Boolean, Boolean) . It only supports the search of indexed Point shapes. The precision of query shapes (DistErrPct) is an important factor in using this Strategy. If the precision is too precise then it will result in many terms which will amount to a slower query. This is a Lucene.NET EXPERIMENTAL API, use at your own risk WithinPrefixTreeFilter Finds docs where its indexed shape is IsWithin the query shape. It works by looking at cells outside of the query shape to ensure documents there are excluded. By default, it will examine all cells, and it's fairly slow. If you know that the indexed shapes are never comprised of multiple disjoint parts (which also means it is not multi-valued), then you can pass SpatialPrefixTree.GetDistanceForLevel(maxLevels) as the queryBuffer constructor parameter to minimally look this distance beyond the query shape's edge. Even if the indexed shapes are sometimes comprised of multiple disjoint parts, you might want to use this option with a large buffer as a faster approximation with minimal false-positives. This is a Lucene.NET EXPERIMENTAL API, use at your own risk"
  },
  "Lucene.Net.Spatial.Prefix.IntersectsPrefixTreeFilter.html": {
    "href": "Lucene.Net.Spatial.Prefix.IntersectsPrefixTreeFilter.html",
    "title": "Class IntersectsPrefixTreeFilter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class IntersectsPrefixTreeFilter A Filter matching documents that have an Spatial4n.Core.Shapes.SpatialRelation.INTERSECTS (i.e. not DISTINCT) relationship with a provided query shape. This is a Lucene.NET INTERNAL API, use at your own risk Inheritance System.Object Lucene.Net.Search.Filter AbstractPrefixTreeFilter AbstractVisitingPrefixTreeFilter IntersectsPrefixTreeFilter Inherited Members AbstractVisitingPrefixTreeFilter.m_prefixGridScanLevel AbstractPrefixTreeFilter.m_queryShape AbstractPrefixTreeFilter.m_fieldName AbstractPrefixTreeFilter.m_grid AbstractPrefixTreeFilter.m_detailLevel Filter.NewAnonymous(Func<AtomicReaderContext, IBits, DocIdSet>) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Prefix Assembly : Lucene.Net.Spatial.dll Syntax public class IntersectsPrefixTreeFilter : AbstractVisitingPrefixTreeFilter Constructors | Improve this Doc View Source IntersectsPrefixTreeFilter(IShape, String, SpatialPrefixTree, Int32, Int32, Boolean) Declaration public IntersectsPrefixTreeFilter(IShape queryShape, string fieldName, SpatialPrefixTree grid, int detailLevel, int prefixGridScanLevel, bool hasIndexedLeaves) Parameters Type Name Description Spatial4n.Core.Shapes.IShape queryShape System.String fieldName SpatialPrefixTree grid System.Int32 detailLevel System.Int32 prefixGridScanLevel System.Boolean hasIndexedLeaves Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides AbstractVisitingPrefixTreeFilter.Equals(Object) | Improve this Doc View Source GetDocIdSet(AtomicReaderContext, IBits) Declaration public override DocIdSet GetDocIdSet(AtomicReaderContext context, IBits acceptDocs) Parameters Type Name Description Lucene.Net.Index.AtomicReaderContext context Lucene.Net.Util.IBits acceptDocs Returns Type Description Lucene.Net.Search.DocIdSet Overrides Lucene.Net.Search.Filter.GetDocIdSet(Lucene.Net.Index.AtomicReaderContext, Lucene.Net.Util.IBits) Exceptions Type Condition System.IO.IOException | Improve this Doc View Source GetHashCode() LUCENENET specific: need to override GetHashCode to prevent a compiler warning and realistically, the hash code should work similarly to Equals. Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides AbstractVisitingPrefixTreeFilter.GetHashCode()"
  },
  "Lucene.Net.Spatial.Prefix.PointPrefixTreeFieldCacheProvider.html": {
    "href": "Lucene.Net.Spatial.Prefix.PointPrefixTreeFieldCacheProvider.html",
    "title": "Class PointPrefixTreeFieldCacheProvider | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class PointPrefixTreeFieldCacheProvider Implementation of ShapeFieldCacheProvider<T> designed for PrefixTreeStrategy s. Note, due to the fragmented representation of Shapes in these Strategies, this implementation can only retrieve the central Spatial4n.Core.Shapes.IPoint of the original Shapes. This is a Lucene.NET INTERNAL API, use at your own risk Inheritance System.Object ShapeFieldCacheProvider < Spatial4n.Core.Shapes.IPoint > PointPrefixTreeFieldCacheProvider Inherited Members ShapeFieldCacheProvider<IPoint>.m_defaultSize ShapeFieldCacheProvider<IPoint>.m_shapeField ShapeFieldCacheProvider<IPoint>.GetCache(AtomicReader) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Prefix Assembly : Lucene.Net.Spatial.dll Syntax public class PointPrefixTreeFieldCacheProvider : ShapeFieldCacheProvider<IPoint> Constructors | Improve this Doc View Source PointPrefixTreeFieldCacheProvider(SpatialPrefixTree, String, Int32) Declaration public PointPrefixTreeFieldCacheProvider(SpatialPrefixTree grid, string shapeField, int defaultSize) Parameters Type Name Description SpatialPrefixTree grid System.String shapeField System.Int32 defaultSize Methods | Improve this Doc View Source ReadShape(BytesRef) Declaration protected override IPoint ReadShape(BytesRef term) Parameters Type Name Description Lucene.Net.Util.BytesRef term Returns Type Description Spatial4n.Core.Shapes.IPoint Overrides Lucene.Net.Spatial.Util.ShapeFieldCacheProvider<Spatial4n.Core.Shapes.IPoint>.ReadShape(Lucene.Net.Util.BytesRef)"
  },
  "Lucene.Net.Spatial.Prefix.PrefixTreeStrategy.html": {
    "href": "Lucene.Net.Spatial.Prefix.PrefixTreeStrategy.html",
    "title": "Class PrefixTreeStrategy | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class PrefixTreeStrategy An abstract SpatialStrategy based on SpatialPrefixTree . The two subclasses are RecursivePrefixTreeStrategy and TermQueryPrefixTreeStrategy . This strategy is most effective as a fast approximate spatial search filter. Characteristics: Can index any shape; however only RecursivePrefixTreeStrategy can effectively search non-point shapes. Can index a variable number of shapes per field value. This strategy can do it via multiple calls to CreateIndexableFields(IShape) for a document or by giving it some sort of Shape aggregate (e.g. NTS WKT MultiPoint). The shape's boundary is approximated to a grid precision. Can query with any shape. The shape's boundary is approximated to a grid precision. Only Intersects is supported. If only points are indexed then this is effectively equivalent to IsWithin. The strategy supports MakeDistanceValueSource(IPoint, Double) even for multi-valued data, so long as the indexed data is all points; the behavior is undefined otherwise. However, it will likely be removed in the future in lieu of using another strategy with a more scalable implementation. Use of this call is the only circumstance in which a cache is used. The cache is simple but as such it doesn't scale to large numbers of points nor is it real-time-search friendly. Implementation: The SpatialPrefixTree does most of the work, for example returning a list of terms representing grids of various sizes for a supplied shape. An important configuration item is DistErrPct which balances shape precision against scalability. See those docs. This is a Lucene.NET INTERNAL API, use at your own risk Inheritance System.Object SpatialStrategy PrefixTreeStrategy RecursivePrefixTreeStrategy TermQueryPrefixTreeStrategy Inherited Members SpatialStrategy.m_ctx SpatialStrategy.SpatialContext SpatialStrategy.FieldName SpatialStrategy.MakeDistanceValueSource(IPoint) SpatialStrategy.MakeQuery(SpatialArgs) SpatialStrategy.MakeFilter(SpatialArgs) SpatialStrategy.MakeRecipDistanceValueSource(IShape) SpatialStrategy.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Prefix Assembly : Lucene.Net.Spatial.dll Syntax public abstract class PrefixTreeStrategy : SpatialStrategy Constructors | Improve this Doc View Source PrefixTreeStrategy(SpatialPrefixTree, String, Boolean) Declaration public PrefixTreeStrategy(SpatialPrefixTree grid, string fieldName, bool simplifyIndexedCells) Parameters Type Name Description SpatialPrefixTree grid System.String fieldName System.Boolean simplifyIndexedCells Fields | Improve this Doc View Source FIELD_TYPE Indexed, tokenized, not stored. Declaration public static readonly FieldType FIELD_TYPE Field Value Type Description Lucene.Net.Documents.FieldType | Improve this Doc View Source m_defaultFieldValuesArrayLen Declaration protected int m_defaultFieldValuesArrayLen Field Value Type Description System.Int32 | Improve this Doc View Source m_distErrPct Declaration protected double m_distErrPct Field Value Type Description System.Double | Improve this Doc View Source m_grid Declaration protected readonly SpatialPrefixTree m_grid Field Value Type Description SpatialPrefixTree | Improve this Doc View Source m_simplifyIndexedCells Declaration protected readonly bool m_simplifyIndexedCells Field Value Type Description System.Boolean Properties | Improve this Doc View Source DefaultFieldValuesArrayLen A memory hint used by MakeDistanceValueSource(IPoint) for how big the initial size of each Document's array should be. The default is 2. Set this to slightly more than the default expected number of points per document. Declaration public virtual int DefaultFieldValuesArrayLen { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source DistErrPct The default measure of shape precision affecting shapes at index and query times. Declaration public virtual double DistErrPct { get; set; } Property Value Type Description System.Double Remarks The default measure of shape precision affecting shapes at index and query times. Points don't use this as they are always indexed at the configured maximum precision ( MaxLevels ); this applies to all other shapes. Specific shapes at index and query time can use something different than this default value. If you don't set a default then the default is DEFAULT_DISTERRPCT -- 2.5%. See Also DistErrPct | Improve this Doc View Source Grid Declaration public virtual SpatialPrefixTree Grid { get; } Property Value Type Description SpatialPrefixTree Methods | Improve this Doc View Source CreateIndexableFields(IShape) Declaration public override Field[] CreateIndexableFields(IShape shape) Parameters Type Name Description Spatial4n.Core.Shapes.IShape shape Returns Type Description Field [] Overrides SpatialStrategy.CreateIndexableFields(IShape) | Improve this Doc View Source CreateIndexableFields(IShape, Double) Declaration public virtual Field[] CreateIndexableFields(IShape shape, double distErr) Parameters Type Name Description Spatial4n.Core.Shapes.IShape shape System.Double distErr Returns Type Description Field [] | Improve this Doc View Source MakeDistanceValueSource(IPoint, Double) Declaration public override ValueSource MakeDistanceValueSource(IPoint queryPoint, double multiplier) Parameters Type Name Description Spatial4n.Core.Shapes.IPoint queryPoint System.Double multiplier Returns Type Description Lucene.Net.Queries.Function.ValueSource Overrides SpatialStrategy.MakeDistanceValueSource(IPoint, Double)"
  },
  "Lucene.Net.Spatial.Prefix.RecursivePrefixTreeStrategy.html": {
    "href": "Lucene.Net.Spatial.Prefix.RecursivePrefixTreeStrategy.html",
    "title": "Class RecursivePrefixTreeStrategy | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class RecursivePrefixTreeStrategy A PrefixTreeStrategy which uses AbstractVisitingPrefixTreeFilter . This strategy has support for searching non-point shapes (note: not tested). Even a query shape with distErrPct=0 (fully precise to the grid) should have good performance for typical data, unless there is a lot of indexed data coincident with the shape's edge. This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object SpatialStrategy PrefixTreeStrategy RecursivePrefixTreeStrategy Inherited Members PrefixTreeStrategy.m_grid PrefixTreeStrategy.m_simplifyIndexedCells PrefixTreeStrategy.m_defaultFieldValuesArrayLen PrefixTreeStrategy.m_distErrPct PrefixTreeStrategy.DefaultFieldValuesArrayLen PrefixTreeStrategy.DistErrPct PrefixTreeStrategy.CreateIndexableFields(IShape) PrefixTreeStrategy.CreateIndexableFields(IShape, Double) PrefixTreeStrategy.FIELD_TYPE PrefixTreeStrategy.MakeDistanceValueSource(IPoint, Double) PrefixTreeStrategy.Grid SpatialStrategy.m_ctx SpatialStrategy.SpatialContext SpatialStrategy.FieldName SpatialStrategy.MakeDistanceValueSource(IPoint) SpatialStrategy.MakeQuery(SpatialArgs) SpatialStrategy.MakeRecipDistanceValueSource(IShape) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Prefix Assembly : Lucene.Net.Spatial.dll Syntax public class RecursivePrefixTreeStrategy : PrefixTreeStrategy Constructors | Improve this Doc View Source RecursivePrefixTreeStrategy(SpatialPrefixTree, String) Declaration public RecursivePrefixTreeStrategy(SpatialPrefixTree grid, string fieldName) Parameters Type Name Description SpatialPrefixTree grid System.String fieldName Fields | Improve this Doc View Source m_multiOverlappingIndexedShapes See m_multiOverlappingIndexedShapes . Declaration protected bool m_multiOverlappingIndexedShapes Field Value Type Description System.Boolean | Improve this Doc View Source m_pointsOnly True if only indexed points shall be supported. See Lucene.Net.Spatial.Prefix.IntersectsPrefixTreeFilter.hasIndexedLeaves . Declaration protected bool m_pointsOnly Field Value Type Description System.Boolean Properties | Improve this Doc View Source PrefixGridScanLevel Sets the grid level [1-maxLevels] at which indexed terms are scanned brute-force instead of by grid decomposition. By default this is maxLevels - 4. The final level, maxLevels, is always scanned. Value can be 1 to maxLevels. Declaration public virtual int PrefixGridScanLevel { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source MakeFilter(SpatialArgs) Declaration public override Filter MakeFilter(SpatialArgs args) Parameters Type Name Description SpatialArgs args Returns Type Description Lucene.Net.Search.Filter Overrides SpatialStrategy.MakeFilter(SpatialArgs) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides SpatialStrategy.ToString()"
  },
  "Lucene.Net.Spatial.Prefix.TermQueryPrefixTreeStrategy.html": {
    "href": "Lucene.Net.Spatial.Prefix.TermQueryPrefixTreeStrategy.html",
    "title": "Class TermQueryPrefixTreeStrategy | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class TermQueryPrefixTreeStrategy A basic implementation of PrefixTreeStrategy using a large Lucene.Net.Queries.TermsFilter of all the cells from GetCells(IShape, Int32, Boolean, Boolean) . It only supports the search of indexed Point shapes. The precision of query shapes (DistErrPct) is an important factor in using this Strategy. If the precision is too precise then it will result in many terms which will amount to a slower query. This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object SpatialStrategy PrefixTreeStrategy TermQueryPrefixTreeStrategy Inherited Members PrefixTreeStrategy.m_grid PrefixTreeStrategy.m_simplifyIndexedCells PrefixTreeStrategy.m_defaultFieldValuesArrayLen PrefixTreeStrategy.m_distErrPct PrefixTreeStrategy.DefaultFieldValuesArrayLen PrefixTreeStrategy.DistErrPct PrefixTreeStrategy.CreateIndexableFields(IShape) PrefixTreeStrategy.CreateIndexableFields(IShape, Double) PrefixTreeStrategy.FIELD_TYPE PrefixTreeStrategy.MakeDistanceValueSource(IPoint, Double) PrefixTreeStrategy.Grid SpatialStrategy.m_ctx SpatialStrategy.SpatialContext SpatialStrategy.FieldName SpatialStrategy.MakeDistanceValueSource(IPoint) SpatialStrategy.MakeQuery(SpatialArgs) SpatialStrategy.MakeRecipDistanceValueSource(IShape) SpatialStrategy.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Prefix Assembly : Lucene.Net.Spatial.dll Syntax public class TermQueryPrefixTreeStrategy : PrefixTreeStrategy Constructors | Improve this Doc View Source TermQueryPrefixTreeStrategy(SpatialPrefixTree, String) Declaration public TermQueryPrefixTreeStrategy(SpatialPrefixTree grid, string fieldName) Parameters Type Name Description SpatialPrefixTree grid System.String fieldName Methods | Improve this Doc View Source MakeFilter(SpatialArgs) Declaration public override Filter MakeFilter(SpatialArgs args) Parameters Type Name Description SpatialArgs args Returns Type Description Lucene.Net.Search.Filter Overrides SpatialStrategy.MakeFilter(SpatialArgs)"
  },
  "Lucene.Net.Spatial.Prefix.Tree.Cell.html": {
    "href": "Lucene.Net.Spatial.Prefix.Tree.Cell.html",
    "title": "Class Cell | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class Cell Represents a grid cell. These are not necessarily thread-safe, although new Cell(\"\") (world cell) must be. This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object Cell Implements System.IComparable < Cell > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Prefix.Tree Assembly : Lucene.Net.Spatial.dll Syntax public abstract class Cell : IComparable<Cell> Constructors | Improve this Doc View Source Cell(SpatialPrefixTree, Byte[], Int32, Int32) Declaration protected Cell(SpatialPrefixTree outerInstance, byte[] bytes, int off, int len) Parameters Type Name Description SpatialPrefixTree outerInstance System.Byte [] bytes System.Int32 off System.Int32 len | Improve this Doc View Source Cell(SpatialPrefixTree, String) Declaration protected Cell(SpatialPrefixTree outerInstance, string token) Parameters Type Name Description SpatialPrefixTree outerInstance System.String token Fields | Improve this Doc View Source LEAF_BYTE Declaration public const byte LEAF_BYTE = 43 Field Value Type Description System.Byte | Improve this Doc View Source m_leaf Always false for points. Declaration protected bool m_leaf Field Value Type Description System.Boolean Remarks Always false for points. Otherwise, indicate no further sub-cells are going to be provided because shapeRel is WITHIN or maxLevels or a detailLevel is hit. | Improve this Doc View Source m_outerInstance LUCENENET specific - we need to set the SpatialPrefixTree before calling overridden members of this class, just in case those overridden members require it. This is not possible from the subclass because the constructor of the base class runs first. So we need to move the reference here and also set it before running the normal constructor logic. Declaration protected readonly SpatialPrefixTree m_outerInstance Field Value Type Description SpatialPrefixTree | Improve this Doc View Source m_shapeRel When set via GetSubCells(IShape) , it is the relationship between this cell and the given shape filter. Declaration protected SpatialRelation m_shapeRel Field Value Type Description Spatial4n.Core.Shapes.SpatialRelation Properties | Improve this Doc View Source Center Declaration public virtual IPoint Center { get; } Property Value Type Description Spatial4n.Core.Shapes.IPoint | Improve this Doc View Source IsLeaf For points, this is always false. Declaration public virtual bool IsLeaf { get; } Property Value Type Description System.Boolean Remarks For points, this is always false. Otherwise this is true if there are no further cells with this prefix for the shape (always true at maxLevels). | Improve this Doc View Source Level Declaration public virtual int Level { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Shape Declaration public abstract IShape Shape { get; } Property Value Type Description Spatial4n.Core.Shapes.IShape | Improve this Doc View Source ShapeRel Declaration public virtual SpatialRelation ShapeRel { get; } Property Value Type Description Spatial4n.Core.Shapes.SpatialRelation | Improve this Doc View Source SubCellsSize GetSubCells() .Count -- usually a constant. Should be >=2 Declaration public abstract int SubCellsSize { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TokenString Note: doesn't contain a trailing leaf byte. Declaration public virtual string TokenString { get; } Property Value Type Description System.String Methods | Improve this Doc View Source CompareTo(Cell) Declaration public virtual int CompareTo(Cell o) Parameters Type Name Description Cell o Returns Type Description System.Int32 | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source GetSubCell(IPoint) Performant implementations are expected to implement this efficiently by considering the current cell's boundary. Declaration public abstract Cell GetSubCell(IPoint p) Parameters Type Name Description Spatial4n.Core.Shapes.IPoint p Returns Type Description Cell Remarks Performant implementations are expected to implement this efficiently by considering the current cell's boundary. Precondition: Never called when Level == maxLevel. Precondition: this.Shape.Relate(p) != SpatialRelation.DISJOINT. | Improve this Doc View Source GetSubCells() Gets the cells at the next grid cell level that cover this cell. Declaration protected abstract ICollection<Cell> GetSubCells() Returns Type Description System.Collections.Generic.ICollection < Cell > A set of cells (no dups), sorted, modifiable, not empty, not null. Remarks Gets the cells at the next grid cell level that cover this cell. Precondition: Never called when Level == maxLevel. | Improve this Doc View Source GetSubCells(IShape) Like GetSubCells() but with the results filtered by a shape. If that shape is a Spatial4n.Core.Shapes.IPoint then it must call GetSubCell(IPoint) . The returned cells should have ShapeRel set to their relation with shapeFilter . In addition, IsLeaf must be true when that relation is Spatial4n.Core.Shapes.SpatialRelation.WITHIN . Precondition: Never called when Level == maxLevel. Declaration public virtual ICollection<Cell> GetSubCells(IShape shapeFilter) Parameters Type Name Description Spatial4n.Core.Shapes.IShape shapeFilter an optional filter for the returned cells. Returns Type Description System.Collections.Generic.ICollection < Cell > A set of cells (no dups), sorted. Not Modifiable. | Improve this Doc View Source GetTokenBytes() Note: doesn't contain a trailing leaf byte. Declaration public virtual byte[] GetTokenBytes() Returns Type Description System.Byte [] | Improve this Doc View Source Reset(Byte[], Int32, Int32) Declaration public virtual void Reset(byte[] bytes, int off, int len) Parameters Type Name Description System.Byte [] bytes System.Int32 off System.Int32 len | Improve this Doc View Source SetLeaf() Note: not supported at level 0. Declaration public virtual void SetLeaf() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IComparable<T>"
  },
  "Lucene.Net.Spatial.Prefix.Tree.GeohashPrefixTree.Factory.html": {
    "href": "Lucene.Net.Spatial.Prefix.Tree.GeohashPrefixTree.Factory.html",
    "title": "Class GeohashPrefixTree.Factory | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class GeohashPrefixTree.Factory Factory for creating GeohashPrefixTree instances with useful defaults Inheritance System.Object SpatialPrefixTreeFactory GeohashPrefixTree.Factory Inherited Members SpatialPrefixTreeFactory.PREFIX_TREE SpatialPrefixTreeFactory.MAX_LEVELS SpatialPrefixTreeFactory.MAX_DIST_ERR SpatialPrefixTreeFactory.m_args SpatialPrefixTreeFactory.m_ctx SpatialPrefixTreeFactory.m_maxLevels SpatialPrefixTreeFactory.MakeSPT(IDictionary<String, String>, SpatialContext) SpatialPrefixTreeFactory.Init(IDictionary<String, String>, SpatialContext) SpatialPrefixTreeFactory.InitMaxLevels() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Prefix.Tree Assembly : Lucene.Net.Spatial.dll Syntax public class Factory : SpatialPrefixTreeFactory Methods | Improve this Doc View Source GetLevelForDistance(Double) Declaration protected override int GetLevelForDistance(double degrees) Parameters Type Name Description System.Double degrees Returns Type Description System.Int32 Overrides SpatialPrefixTreeFactory.GetLevelForDistance(Double) | Improve this Doc View Source NewSPT() Declaration protected override SpatialPrefixTree NewSPT() Returns Type Description SpatialPrefixTree Overrides SpatialPrefixTreeFactory.NewSPT()"
  },
  "Lucene.Net.Spatial.Prefix.Tree.GeohashPrefixTree.html": {
    "href": "Lucene.Net.Spatial.Prefix.Tree.GeohashPrefixTree.html",
    "title": "Class GeohashPrefixTree | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class GeohashPrefixTree A SpatialPrefixTree based on Geohashes . Uses Spatial4n.Core.Util.GeohashUtils to do all the geohash work. This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object SpatialPrefixTree GeohashPrefixTree Inherited Members SpatialPrefixTree.m_maxLevels SpatialPrefixTree.m_ctx SpatialPrefixTree.SpatialContext SpatialPrefixTree.MaxLevels SpatialPrefixTree.ToString() SpatialPrefixTree.GetDistanceForLevel(Int32) SpatialPrefixTree.WorldCell SpatialPrefixTree.GetCell(Byte[], Int32, Int32, Cell) SpatialPrefixTree.GetCells(IShape, Int32, Boolean, Boolean) SpatialPrefixTree.GetCells(IPoint, Int32, Boolean) SpatialPrefixTree.CellsToTokenStrings(ICollection<Cell>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Prefix.Tree Assembly : Lucene.Net.Spatial.dll Syntax public class GeohashPrefixTree : SpatialPrefixTree Constructors | Improve this Doc View Source GeohashPrefixTree(SpatialContext, Int32) Declaration public GeohashPrefixTree(SpatialContext ctx, int maxLevels) Parameters Type Name Description Spatial4n.Core.Context.SpatialContext ctx System.Int32 maxLevels Properties | Improve this Doc View Source MaxLevelsPossible Any more than this and there's no point (double lat & lon are the same). Declaration public static int MaxLevelsPossible { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetCell(IPoint, Int32) Declaration protected override Cell GetCell(IPoint p, int level) Parameters Type Name Description Spatial4n.Core.Shapes.IPoint p System.Int32 level Returns Type Description Cell Overrides SpatialPrefixTree.GetCell(IPoint, Int32) | Improve this Doc View Source GetCell(Byte[], Int32, Int32) Declaration public override Cell GetCell(byte[] bytes, int offset, int len) Parameters Type Name Description System.Byte [] bytes System.Int32 offset System.Int32 len Returns Type Description Cell Overrides SpatialPrefixTree.GetCell(Byte[], Int32, Int32) | Improve this Doc View Source GetCell(String) Declaration public override Cell GetCell(string token) Parameters Type Name Description System.String token Returns Type Description Cell Overrides SpatialPrefixTree.GetCell(String) | Improve this Doc View Source GetLevelForDistance(Double) Declaration public override int GetLevelForDistance(double dist) Parameters Type Name Description System.Double dist Returns Type Description System.Int32 Overrides SpatialPrefixTree.GetLevelForDistance(Double)"
  },
  "Lucene.Net.Spatial.Prefix.Tree.html": {
    "href": "Lucene.Net.Spatial.Prefix.Tree.html",
    "title": "Namespace Lucene.Net.Spatial.Prefix.Tree | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Namespace Lucene.Net.Spatial.Prefix.Tree <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> The Spatial Prefix package supports spatial indexing by index-time tokens where adding characters to a string gives greater resolution. Potential Implementations include: http://en.wikipedia.org/wiki/Quadtree http://en.wikipedia.org/wiki/Geohash http://healpix.jpl.nasa.gov/ Classes Cell Represents a grid cell. These are not necessarily thread-safe, although new Cell(\"\") (world cell) must be. This is a Lucene.NET EXPERIMENTAL API, use at your own risk GeohashPrefixTree A SpatialPrefixTree based on Geohashes . Uses Spatial4n.Core.Util.GeohashUtils to do all the geohash work. This is a Lucene.NET EXPERIMENTAL API, use at your own risk GeohashPrefixTree.Factory Factory for creating GeohashPrefixTree instances with useful defaults QuadPrefixTree A SpatialPrefixTree which uses a quad tree in which an indexed term will be generated for each cell, 'A', 'B', 'C', 'D'. This is a Lucene.NET EXPERIMENTAL API, use at your own risk QuadPrefixTree.Factory Factory for creating QuadPrefixTree instances with useful defaults SpatialPrefixTree A spatial Prefix Tree, or Trie, which decomposes shapes into prefixed strings at variable lengths corresponding to variable precision. SpatialPrefixTreeFactory Abstract Factory for creating SpatialPrefixTree instances with useful defaults and passed on configurations defined in a System.Collections.Generic.IDictionary<TKey, TValue> . This is a Lucene.NET EXPERIMENTAL API, use at your own risk"
  },
  "Lucene.Net.Spatial.Prefix.Tree.QuadPrefixTree.Factory.html": {
    "href": "Lucene.Net.Spatial.Prefix.Tree.QuadPrefixTree.Factory.html",
    "title": "Class QuadPrefixTree.Factory | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class QuadPrefixTree.Factory Factory for creating QuadPrefixTree instances with useful defaults Inheritance System.Object SpatialPrefixTreeFactory QuadPrefixTree.Factory Inherited Members SpatialPrefixTreeFactory.PREFIX_TREE SpatialPrefixTreeFactory.MAX_LEVELS SpatialPrefixTreeFactory.MAX_DIST_ERR SpatialPrefixTreeFactory.m_args SpatialPrefixTreeFactory.m_ctx SpatialPrefixTreeFactory.m_maxLevels SpatialPrefixTreeFactory.MakeSPT(IDictionary<String, String>, SpatialContext) SpatialPrefixTreeFactory.Init(IDictionary<String, String>, SpatialContext) SpatialPrefixTreeFactory.InitMaxLevels() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Prefix.Tree Assembly : Lucene.Net.Spatial.dll Syntax public class Factory : SpatialPrefixTreeFactory Methods | Improve this Doc View Source GetLevelForDistance(Double) Declaration protected override int GetLevelForDistance(double degrees) Parameters Type Name Description System.Double degrees Returns Type Description System.Int32 Overrides SpatialPrefixTreeFactory.GetLevelForDistance(Double) | Improve this Doc View Source NewSPT() Declaration protected override SpatialPrefixTree NewSPT() Returns Type Description SpatialPrefixTree Overrides SpatialPrefixTreeFactory.NewSPT()"
  },
  "Lucene.Net.Spatial.Prefix.Tree.QuadPrefixTree.html": {
    "href": "Lucene.Net.Spatial.Prefix.Tree.QuadPrefixTree.html",
    "title": "Class QuadPrefixTree | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class QuadPrefixTree A SpatialPrefixTree which uses a quad tree in which an indexed term will be generated for each cell, 'A', 'B', 'C', 'D'. This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object SpatialPrefixTree QuadPrefixTree Inherited Members SpatialPrefixTree.m_maxLevels SpatialPrefixTree.m_ctx SpatialPrefixTree.SpatialContext SpatialPrefixTree.MaxLevels SpatialPrefixTree.ToString() SpatialPrefixTree.GetDistanceForLevel(Int32) SpatialPrefixTree.WorldCell SpatialPrefixTree.GetCell(Byte[], Int32, Int32, Cell) SpatialPrefixTree.GetCells(IShape, Int32, Boolean, Boolean) SpatialPrefixTree.GetCells(IPoint, Int32, Boolean) SpatialPrefixTree.CellsToTokenStrings(ICollection<Cell>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Prefix.Tree Assembly : Lucene.Net.Spatial.dll Syntax public class QuadPrefixTree : SpatialPrefixTree Constructors | Improve this Doc View Source QuadPrefixTree(SpatialContext) Declaration public QuadPrefixTree(SpatialContext ctx) Parameters Type Name Description Spatial4n.Core.Context.SpatialContext ctx | Improve this Doc View Source QuadPrefixTree(SpatialContext, IRectangle, Int32) Declaration public QuadPrefixTree(SpatialContext ctx, IRectangle bounds, int maxLevels) Parameters Type Name Description Spatial4n.Core.Context.SpatialContext ctx Spatial4n.Core.Shapes.IRectangle bounds System.Int32 maxLevels | Improve this Doc View Source QuadPrefixTree(SpatialContext, Int32) Declaration public QuadPrefixTree(SpatialContext ctx, int maxLevels) Parameters Type Name Description Spatial4n.Core.Context.SpatialContext ctx System.Int32 maxLevels Fields | Improve this Doc View Source DEFAULT_MAX_LEVELS Declaration public const int DEFAULT_MAX_LEVELS = 12 Field Value Type Description System.Int32 | Improve this Doc View Source MAX_LEVELS_POSSIBLE Declaration public const int MAX_LEVELS_POSSIBLE = 50 Field Value Type Description System.Int32 Properties | Improve this Doc View Source GridH Declaration public double GridH { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source GetCell(IPoint, Int32) Declaration protected override Cell GetCell(IPoint p, int level) Parameters Type Name Description Spatial4n.Core.Shapes.IPoint p System.Int32 level Returns Type Description Cell Overrides SpatialPrefixTree.GetCell(IPoint, Int32) | Improve this Doc View Source GetCell(Byte[], Int32, Int32) Declaration public override Cell GetCell(byte[] bytes, int offset, int len) Parameters Type Name Description System.Byte [] bytes System.Int32 offset System.Int32 len Returns Type Description Cell Overrides SpatialPrefixTree.GetCell(Byte[], Int32, Int32) | Improve this Doc View Source GetCell(String) Declaration public override Cell GetCell(string token) Parameters Type Name Description System.String token Returns Type Description Cell Overrides SpatialPrefixTree.GetCell(String) | Improve this Doc View Source GetLevelForDistance(Double) Declaration public override int GetLevelForDistance(double dist) Parameters Type Name Description System.Double dist Returns Type Description System.Int32 Overrides SpatialPrefixTree.GetLevelForDistance(Double) | Improve this Doc View Source PrintInfo(TextWriter) Declaration public virtual void PrintInfo(TextWriter out) Parameters Type Name Description System.IO.TextWriter out"
  },
  "Lucene.Net.Spatial.Prefix.Tree.SpatialPrefixTree.html": {
    "href": "Lucene.Net.Spatial.Prefix.Tree.SpatialPrefixTree.html",
    "title": "Class SpatialPrefixTree | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SpatialPrefixTree A spatial Prefix Tree, or Trie, which decomposes shapes into prefixed strings at variable lengths corresponding to variable precision. Inheritance System.Object SpatialPrefixTree GeohashPrefixTree QuadPrefixTree Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Prefix.Tree Assembly : Lucene.Net.Spatial.dll Syntax public abstract class SpatialPrefixTree Remarks A spatial Prefix Tree, or Trie, which decomposes shapes into prefixed strings at variable lengths corresponding to variable precision. Each string corresponds to a rectangular spatial region. This approach is also referred to \"Grids\", \"Tiles\", and \"Spatial Tiers\". Implementations of this class should be thread-safe and immutable once initialized. This is a Lucene.NET EXPERIMENTAL API, use at your own risk Constructors | Improve this Doc View Source SpatialPrefixTree(SpatialContext, Int32) Declaration public SpatialPrefixTree(SpatialContext ctx, int maxLevels) Parameters Type Name Description Spatial4n.Core.Context.SpatialContext ctx System.Int32 maxLevels Fields | Improve this Doc View Source m_ctx Declaration protected readonly SpatialContext m_ctx Field Value Type Description Spatial4n.Core.Context.SpatialContext | Improve this Doc View Source m_maxLevels Declaration protected readonly int m_maxLevels Field Value Type Description System.Int32 Properties | Improve this Doc View Source MaxLevels Declaration public virtual int MaxLevels { get; } Property Value Type Description System.Int32 | Improve this Doc View Source SpatialContext Declaration public virtual SpatialContext SpatialContext { get; } Property Value Type Description Spatial4n.Core.Context.SpatialContext | Improve this Doc View Source WorldCell Returns the level 0 cell which encompasses all spatial data. Declaration public virtual Cell WorldCell { get; } Property Value Type Description Cell Remarks Returns the level 0 cell which encompasses all spatial data. Equivalent to GetCell(String) with System.String.Empty . This cell is threadsafe, just like a spatial prefix grid is, although cells aren't generally threadsafe. Methods | Improve this Doc View Source CellsToTokenStrings(ICollection<Cell>) Will add the trailing leaf byte for leaves. This isn't particularly efficient. Declaration [Obsolete(\"TODO remove; not used and not interesting, don't need collection in & out\")] public static IList<string> CellsToTokenStrings(ICollection<Cell> cells) Parameters Type Name Description System.Collections.Generic.ICollection < Cell > cells Returns Type Description System.Collections.Generic.IList < System.String > | Improve this Doc View Source GetCell(IPoint, Int32) Returns the cell containing point p at the specified level . Declaration protected virtual Cell GetCell(IPoint p, int level) Parameters Type Name Description Spatial4n.Core.Shapes.IPoint p System.Int32 level Returns Type Description Cell | Improve this Doc View Source GetCell(Byte[], Int32, Int32) Declaration public abstract Cell GetCell(byte[] bytes, int offset, int len) Parameters Type Name Description System.Byte [] bytes System.Int32 offset System.Int32 len Returns Type Description Cell | Improve this Doc View Source GetCell(Byte[], Int32, Int32, Cell) Declaration public Cell GetCell(byte[] bytes, int offset, int len, Cell target) Parameters Type Name Description System.Byte [] bytes System.Int32 offset System.Int32 len Cell target Returns Type Description Cell | Improve this Doc View Source GetCell(String) The cell for the specified token. Declaration public abstract Cell GetCell(string token) Parameters Type Name Description System.String token Returns Type Description Cell Remarks The cell for the specified token. The empty string should be equal to WorldCell . Precondition: Never called when token length > maxLevel. | Improve this Doc View Source GetCells(IPoint, Int32, Boolean) A Point-optimized implementation of GetCells(IShape, Int32, Boolean, Boolean) . That method in facts calls this for points. This implementation depends on GetCell(String) being fast, as its called repeatedly when incPlarents is true. Declaration public virtual IList<Cell> GetCells(IPoint p, int detailLevel, bool inclParents) Parameters Type Name Description Spatial4n.Core.Shapes.IPoint p System.Int32 detailLevel System.Boolean inclParents Returns Type Description System.Collections.Generic.IList < Cell > | Improve this Doc View Source GetCells(IShape, Int32, Boolean, Boolean) Gets the intersecting cells for the specified shape, without exceeding detail level. Declaration public virtual IList<Cell> GetCells(IShape shape, int detailLevel, bool inclParents, bool simplify) Parameters Type Name Description Spatial4n.Core.Shapes.IShape shape the shape; non-null System.Int32 detailLevel the maximum detail level to get cells for System.Boolean inclParents if true then all parent cells of leaves are returned too. The top world cell is never returned. System.Boolean simplify for non-point shapes, this will simply/aggregate sets of complete leaves in a cell to its parent, resulting in ~20-25% fewer cells. Returns Type Description System.Collections.Generic.IList < Cell > a set of cells (no dups), sorted, immutable, non-null Remarks Gets the intersecting cells for the specified shape, without exceeding detail level. If a cell is within the query shape then it's marked as a leaf and none of its children are added. This implementation checks if shape is a Spatial4n.Core.Shapes.IPoint and if so returns GetCells(IPoint, Int32, Boolean) . | Improve this Doc View Source GetDistanceForLevel(Int32) Given a cell having the specified level, returns the distance from opposite corners. Declaration public virtual double GetDistanceForLevel(int level) Parameters Type Name Description System.Int32 level [1 to maxLevels] Returns Type Description System.Double 0 Remarks Given a cell having the specified level, returns the distance from opposite corners. Since this might very depending on where the cell is, this method may over-estimate. | Improve this Doc View Source GetLevelForDistance(Double) Returns the level of the largest grid in which its longest side is less than or equal to the provided distance (in degrees). Declaration public abstract int GetLevelForDistance(double dist) Parameters Type Name Description System.Double dist = 0 Returns Type Description System.Int32 level [1 to maxLevels] Remarks Returns the level of the largest grid in which its longest side is less than or equal to the provided distance (in degrees). Consequently dist acts as an error epsilon declaring the amount of detail needed in the grid, such that you can get a grid with just the right amount of precision. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "Lucene.Net.Spatial.Prefix.Tree.SpatialPrefixTreeFactory.html": {
    "href": "Lucene.Net.Spatial.Prefix.Tree.SpatialPrefixTreeFactory.html",
    "title": "Class SpatialPrefixTreeFactory | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SpatialPrefixTreeFactory Abstract Factory for creating SpatialPrefixTree instances with useful defaults and passed on configurations defined in a System.Collections.Generic.IDictionary<TKey, TValue> . This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object SpatialPrefixTreeFactory GeohashPrefixTree.Factory QuadPrefixTree.Factory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Prefix.Tree Assembly : Lucene.Net.Spatial.dll Syntax public abstract class SpatialPrefixTreeFactory Fields | Improve this Doc View Source m_args Declaration protected IDictionary<string, string> m_args Field Value Type Description System.Collections.Generic.IDictionary < System.String , System.String > | Improve this Doc View Source m_ctx Declaration protected SpatialContext m_ctx Field Value Type Description Spatial4n.Core.Context.SpatialContext | Improve this Doc View Source m_maxLevels Declaration protected int? m_maxLevels Field Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source MAX_DIST_ERR Declaration public const string MAX_DIST_ERR = \"maxDistErr\" Field Value Type Description System.String | Improve this Doc View Source MAX_LEVELS Declaration public const string MAX_LEVELS = \"maxLevels\" Field Value Type Description System.String | Improve this Doc View Source PREFIX_TREE Declaration public const string PREFIX_TREE = \"prefixTree\" Field Value Type Description System.String Methods | Improve this Doc View Source GetLevelForDistance(Double) Calls GetLevelForDistance(Double) . Declaration protected abstract int GetLevelForDistance(double degrees) Parameters Type Name Description System.Double degrees Returns Type Description System.Int32 | Improve this Doc View Source Init(IDictionary<String, String>, SpatialContext) Declaration protected virtual void Init(IDictionary<string, string> args, SpatialContext ctx) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.String > args Spatial4n.Core.Context.SpatialContext ctx | Improve this Doc View Source InitMaxLevels() Declaration protected virtual void InitMaxLevels() | Improve this Doc View Source MakeSPT(IDictionary<String, String>, SpatialContext) The factory is looked up via \"prefixTree\" in args , expecting \"geohash\" or \"quad\". Declaration public static SpatialPrefixTree MakeSPT(IDictionary<string, string> args, SpatialContext ctx) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.String > args Spatial4n.Core.Context.SpatialContext ctx Returns Type Description SpatialPrefixTree Remarks The factory is looked up via \"prefixTree\" in args , expecting \"geohash\" or \"quad\". If its neither of these, then \"geohash\" is chosen for a geo context, otherwise \"quad\" is chosen. | Improve this Doc View Source NewSPT() Declaration protected abstract SpatialPrefixTree NewSPT() Returns Type Description SpatialPrefixTree"
  },
  "Lucene.Net.Spatial.Prefix.WithinPrefixTreeFilter.html": {
    "href": "Lucene.Net.Spatial.Prefix.WithinPrefixTreeFilter.html",
    "title": "Class WithinPrefixTreeFilter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class WithinPrefixTreeFilter Finds docs where its indexed shape is IsWithin the query shape. It works by looking at cells outside of the query shape to ensure documents there are excluded. By default, it will examine all cells, and it's fairly slow. If you know that the indexed shapes are never comprised of multiple disjoint parts (which also means it is not multi-valued), then you can pass SpatialPrefixTree.GetDistanceForLevel(maxLevels) as the queryBuffer constructor parameter to minimally look this distance beyond the query shape's edge. Even if the indexed shapes are sometimes comprised of multiple disjoint parts, you might want to use this option with a large buffer as a faster approximation with minimal false-positives. This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object Lucene.Net.Search.Filter AbstractPrefixTreeFilter AbstractVisitingPrefixTreeFilter WithinPrefixTreeFilter Inherited Members AbstractVisitingPrefixTreeFilter.m_prefixGridScanLevel AbstractVisitingPrefixTreeFilter.Equals(Object) AbstractVisitingPrefixTreeFilter.GetHashCode() AbstractPrefixTreeFilter.m_queryShape AbstractPrefixTreeFilter.m_fieldName AbstractPrefixTreeFilter.m_grid AbstractPrefixTreeFilter.m_detailLevel Filter.NewAnonymous(Func<AtomicReaderContext, IBits, DocIdSet>) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Prefix Assembly : Lucene.Net.Spatial.dll Syntax public class WithinPrefixTreeFilter : AbstractVisitingPrefixTreeFilter Constructors | Improve this Doc View Source WithinPrefixTreeFilter(IShape, String, SpatialPrefixTree, Int32, Int32, Double) See AbstractVisitingPrefixTreeFilter(IShape, String, SpatialPrefixTree, Int32, Int32) . queryBuffer is the (minimum) distance beyond the query shape edge where non-matching documents are looked for so they can be excluded. If -1 is used then the whole world is examined (a good default for correctness). Declaration public WithinPrefixTreeFilter(IShape queryShape, string fieldName, SpatialPrefixTree grid, int detailLevel, int prefixGridScanLevel, double queryBuffer) Parameters Type Name Description Spatial4n.Core.Shapes.IShape queryShape System.String fieldName SpatialPrefixTree grid System.Int32 detailLevel System.Int32 prefixGridScanLevel System.Double queryBuffer Methods | Improve this Doc View Source BufferShape(IShape, Double) Returns a new shape that is larger than shape by at distErr. Declaration protected virtual IShape BufferShape(IShape shape, double distErr) Parameters Type Name Description Spatial4n.Core.Shapes.IShape shape System.Double distErr Returns Type Description Spatial4n.Core.Shapes.IShape | Improve this Doc View Source GetDocIdSet(AtomicReaderContext, IBits) Declaration public override DocIdSet GetDocIdSet(AtomicReaderContext context, IBits acceptDocs) Parameters Type Name Description Lucene.Net.Index.AtomicReaderContext context Lucene.Net.Util.IBits acceptDocs Returns Type Description Lucene.Net.Search.DocIdSet Overrides Lucene.Net.Search.Filter.GetDocIdSet(Lucene.Net.Index.AtomicReaderContext, Lucene.Net.Util.IBits) Exceptions Type Condition System.IO.IOException"
  },
  "Lucene.Net.Spatial.Queries.html": {
    "href": "Lucene.Net.Spatial.Queries.html",
    "title": "Namespace Lucene.Net.Spatial.Queries | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Namespace Lucene.Net.Spatial.Queries <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> Spatial Query options useful for client side requests Classes SpatialArgs Principally holds the query Spatial4n.Core.Shapes.IShape and the SpatialOperation . It's used as an argument to some methods on SpatialStrategy . This is a Lucene.NET EXPERIMENTAL API, use at your own risk SpatialArgsParser Parses a string that usually looks like \"OPERATION(SHAPE)\" into a SpatialArgs object. The set of operations supported are defined in SpatialOperation , such as \"Intersects\" being a common one. The shape portion is defined by WKT Spatial4n.Core.IO.WktShapeParser , but it can be overridden/customized via ParseShape(String, SpatialContext) . There are some optional name-value pair parameters that follow the closing parenthesis. Example: Intersects(ENVELOPE(-10,-8,22,20)) distErrPct=0.025 In the future it would be good to support something at least semi-standardized like a variant of [E]CQL . This is a Lucene.NET EXPERIMENTAL API, use at your own risk SpatialOperation A clause that compares a stored geometry to a supplied geometry. For more explanation of each operation, consider looking at the source implementation of Evaluate(IShape, IShape) . See ESRIs docs on spatial relations This is a Lucene.NET EXPERIMENTAL API, use at your own risk UnsupportedSpatialOperation Exception thrown when the SpatialStrategy cannot implement the requested operation. This is a Lucene.NET EXPERIMENTAL API, use at your own risk"
  },
  "Lucene.Net.Spatial.Queries.SpatialArgs.html": {
    "href": "Lucene.Net.Spatial.Queries.SpatialArgs.html",
    "title": "Class SpatialArgs | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SpatialArgs Principally holds the query Spatial4n.Core.Shapes.IShape and the SpatialOperation . It's used as an argument to some methods on SpatialStrategy . This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object SpatialArgs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Queries Assembly : Lucene.Net.Spatial.dll Syntax public class SpatialArgs Constructors | Improve this Doc View Source SpatialArgs(SpatialOperation, IShape) Declaration public SpatialArgs(SpatialOperation operation, IShape shape) Parameters Type Name Description SpatialOperation operation Spatial4n.Core.Shapes.IShape shape Fields | Improve this Doc View Source DEFAULT_DISTERRPCT Declaration public static readonly double DEFAULT_DISTERRPCT Field Value Type Description System.Double Properties | Improve this Doc View Source DistErr The acceptable error of the shape. This effectively inflates the size of the shape but should not shrink it. Declaration public virtual double? DistErr { get; set; } Property Value Type Description System.Nullable < System.Double > = 0 | Improve this Doc View Source DistErrPct A measure of acceptable error of the shape as a fraction. This effectively inflates the size of the shape but should not shrink it. Declaration public virtual double? DistErrPct { get; set; } Property Value Type Description System.Nullable < System.Double > 0 to 0.5 | Improve this Doc View Source Operation Declaration public virtual SpatialOperation Operation { get; set; } Property Value Type Description SpatialOperation | Improve this Doc View Source Shape Declaration public virtual IShape Shape { get; set; } Property Value Type Description Spatial4n.Core.Shapes.IShape Methods | Improve this Doc View Source CalcDistanceFromErrPct(IShape, Double, SpatialContext) Computes the distance given a shape and the distErrPct . The algorithm is the fraction of the distance from the center of the query shape to its furthest bounding box corner. Declaration public static double CalcDistanceFromErrPct(IShape shape, double distErrPct, SpatialContext ctx) Parameters Type Name Description Spatial4n.Core.Shapes.IShape shape Mandatory. System.Double distErrPct 0 to 0.5 Spatial4n.Core.Context.SpatialContext ctx Mandatory Returns Type Description System.Double A distance (in degrees). | Improve this Doc View Source ResolveDistErr(SpatialContext, Double) Gets the error distance that specifies how precise the query shape is. This looks at DistErr , DistErrPct , and defaultDistErrPct . Declaration public virtual double ResolveDistErr(SpatialContext ctx, double defaultDistErrPct) Parameters Type Name Description Spatial4n.Core.Context.SpatialContext ctx System.Double defaultDistErrPct 0 to 0.5 Returns Type Description System.Double = 0 | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() | Improve this Doc View Source Validate() Check if the arguments make sense -- throw an exception if not Declaration public virtual void Validate()"
  },
  "Lucene.Net.Spatial.Queries.SpatialArgsParser.html": {
    "href": "Lucene.Net.Spatial.Queries.SpatialArgsParser.html",
    "title": "Class SpatialArgsParser | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SpatialArgsParser Parses a string that usually looks like \"OPERATION(SHAPE)\" into a SpatialArgs object. The set of operations supported are defined in SpatialOperation , such as \"Intersects\" being a common one. The shape portion is defined by WKT Spatial4n.Core.IO.WktShapeParser , but it can be overridden/customized via ParseShape(String, SpatialContext) . There are some optional name-value pair parameters that follow the closing parenthesis. Example: Intersects(ENVELOPE(-10,-8,22,20)) distErrPct=0.025 In the future it would be good to support something at least semi-standardized like a variant of [E]CQL . This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object SpatialArgsParser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Queries Assembly : Lucene.Net.Spatial.dll Syntax public class SpatialArgsParser Fields | Improve this Doc View Source DIST_ERR Declaration public const string DIST_ERR = \"distErr\" Field Value Type Description System.String | Improve this Doc View Source DIST_ERR_PCT Declaration public const string DIST_ERR_PCT = \"distErrPct\" Field Value Type Description System.String Methods | Improve this Doc View Source NewSpatialArgs(SpatialOperation, IShape) Declaration protected virtual SpatialArgs NewSpatialArgs(SpatialOperation op, IShape shape) Parameters Type Name Description SpatialOperation op Spatial4n.Core.Shapes.IShape shape Returns Type Description SpatialArgs | Improve this Doc View Source Parse(String, SpatialContext) Parses a string such as \"Intersects(ENVELOPE(-10,-8,22,20)) distErrPct=0.025\". Declaration public virtual SpatialArgs Parse(string v, SpatialContext ctx) Parameters Type Name Description System.String v The string to parse. Mandatory. Spatial4n.Core.Context.SpatialContext ctx The spatial context. Mandatory. Returns Type Description SpatialArgs Not null. Exceptions Type Condition System.ArgumentException if the parameters don't make sense or an add-on parameter is unknown Spatial4n.Core.Exceptions.ParseException If there is a problem parsing the string Spatial4n.Core.Exceptions.InvalidShapeException When the coordinates are invalid for the shape | Improve this Doc View Source ParseMap(String) Parses \"a=b c=d f\" (whitespace separated) into name-value pairs. If there is no '=' as in 'f' above then it's short for f=f. Declaration protected static IDictionary<string, string> ParseMap(string body) Parameters Type Name Description System.String body Returns Type Description System.Collections.Generic.IDictionary < System.String , System.String > | Improve this Doc View Source ParseShape(String, SpatialContext) Declaration protected virtual IShape ParseShape(string str, SpatialContext ctx) Parameters Type Name Description System.String str Spatial4n.Core.Context.SpatialContext ctx Returns Type Description Spatial4n.Core.Shapes.IShape | Improve this Doc View Source ReadBool(String, Boolean) Declaration protected static bool ReadBool(string v, bool defaultValue) Parameters Type Name Description System.String v System.Boolean defaultValue Returns Type Description System.Boolean | Improve this Doc View Source ReadDouble(String) Declaration protected static double? ReadDouble(string v) Parameters Type Name Description System.String v Returns Type Description System.Nullable < System.Double > | Improve this Doc View Source ReadNameValuePairs(SpatialArgs, IDictionary<String, String>) Declaration protected virtual void ReadNameValuePairs(SpatialArgs args, IDictionary<string, string> nameValPairs) Parameters Type Name Description SpatialArgs args System.Collections.Generic.IDictionary < System.String , System.String > nameValPairs | Improve this Doc View Source WriteSpatialArgs(SpatialArgs) Writes a close approximation to the parsed input format. Declaration public static string WriteSpatialArgs(SpatialArgs args) Parameters Type Name Description SpatialArgs args Returns Type Description System.String"
  },
  "Lucene.Net.Spatial.Queries.SpatialOperation.html": {
    "href": "Lucene.Net.Spatial.Queries.SpatialOperation.html",
    "title": "Class SpatialOperation | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SpatialOperation A clause that compares a stored geometry to a supplied geometry. For more explanation of each operation, consider looking at the source implementation of Evaluate(IShape, IShape) . See ESRIs docs on spatial relations This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object SpatialOperation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Queries Assembly : Lucene.Net.Spatial.dll Syntax [Serializable] public abstract class SpatialOperation Constructors | Improve this Doc View Source SpatialOperation(String, Boolean, Boolean, Boolean) Declaration protected SpatialOperation(string name, bool scoreIsMeaningful, bool sourceNeedsArea, bool targetNeedsArea) Parameters Type Name Description System.String name System.Boolean scoreIsMeaningful System.Boolean sourceNeedsArea System.Boolean targetNeedsArea Fields | Improve this Doc View Source BBoxIntersects Bounding box of the indexed shape. Declaration public static readonly SpatialOperation BBoxIntersects Field Value Type Description SpatialOperation | Improve this Doc View Source BBoxWithin Bounding box of the indexed shape. Declaration public static readonly SpatialOperation BBoxWithin Field Value Type Description SpatialOperation | Improve this Doc View Source Contains Declaration public static readonly SpatialOperation Contains Field Value Type Description SpatialOperation | Improve this Doc View Source Intersects Declaration public static readonly SpatialOperation Intersects Field Value Type Description SpatialOperation | Improve this Doc View Source IsDisjointTo Declaration public static readonly SpatialOperation IsDisjointTo Field Value Type Description SpatialOperation | Improve this Doc View Source IsEqualTo Declaration public static readonly SpatialOperation IsEqualTo Field Value Type Description SpatialOperation | Improve this Doc View Source IsWithin Declaration public static readonly SpatialOperation IsWithin Field Value Type Description SpatialOperation | Improve this Doc View Source Overlaps Declaration public static readonly SpatialOperation Overlaps Field Value Type Description SpatialOperation Properties | Improve this Doc View Source IsScoreMeaningful Declaration public virtual bool IsScoreMeaningful { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTargetNeedsArea Declaration public virtual bool IsTargetNeedsArea { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description System.String | Improve this Doc View Source SourceNeedsArea Declaration public virtual bool SourceNeedsArea { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Values Declaration public static IList<SpatialOperation> Values { get; } Property Value Type Description System.Collections.Generic.IList < SpatialOperation > Methods | Improve this Doc View Source Evaluate(IShape, IShape) Returns whether the relationship between indexedShape and queryShape is satisfied by this operation. Declaration public abstract bool Evaluate(IShape indexedShape, IShape queryShape) Parameters Type Name Description Spatial4n.Core.Shapes.IShape indexedShape Spatial4n.Core.Shapes.IShape queryShape Returns Type Description System.Boolean | Improve this Doc View Source Get(String) Declaration public static SpatialOperation Get(string v) Parameters Type Name Description System.String v Returns Type Description SpatialOperation | Improve this Doc View Source Is(SpatialOperation, SpatialOperation[]) Declaration public static bool Is(SpatialOperation op, params SpatialOperation[] tst) Parameters Type Name Description SpatialOperation op SpatialOperation [] tst Returns Type Description System.Boolean | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "Lucene.Net.Spatial.Queries.UnsupportedSpatialOperation.html": {
    "href": "Lucene.Net.Spatial.Queries.UnsupportedSpatialOperation.html",
    "title": "Class UnsupportedSpatialOperation | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class UnsupportedSpatialOperation Exception thrown when the SpatialStrategy cannot implement the requested operation. This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object System.Exception System.SystemException System.NotSupportedException UnsupportedSpatialOperation Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Queries Assembly : Lucene.Net.Spatial.dll Syntax public class UnsupportedSpatialOperation : NotSupportedException, ISerializable Constructors | Improve this Doc View Source UnsupportedSpatialOperation(SpatialOperation) Declaration public UnsupportedSpatialOperation(SpatialOperation op) Parameters Type Name Description SpatialOperation op Implements System.Runtime.Serialization.ISerializable"
  },
  "Lucene.Net.Spatial.Serialized.html": {
    "href": "Lucene.Net.Spatial.Serialized.html",
    "title": "Namespace Lucene.Net.Spatial.Serialized | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Namespace Lucene.Net.Spatial.Serialized <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> Strategies that serialize the shape (non-indexed). Classes SerializedDVStrategy A SpatialStrategy based on serializing a Shape stored into BinaryDocValues. This is not at all fast; it's designed to be used in conjuction with another index based SpatialStrategy that is approximated(like RecursivePrefixTreeStrategy ) to add precision or eventually make more specific / advanced calculations on the per-document geometry. The serialization uses Spatial4j's Spatial4n.Core.IO.BinaryCodec . This is a Lucene.NET EXPERIMENTAL API, use at your own risk"
  },
  "Lucene.Net.Spatial.Serialized.SerializedDVStrategy.html": {
    "href": "Lucene.Net.Spatial.Serialized.SerializedDVStrategy.html",
    "title": "Class SerializedDVStrategy | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SerializedDVStrategy A SpatialStrategy based on serializing a Shape stored into BinaryDocValues. This is not at all fast; it's designed to be used in conjuction with another index based SpatialStrategy that is approximated(like RecursivePrefixTreeStrategy ) to add precision or eventually make more specific / advanced calculations on the per-document geometry. The serialization uses Spatial4j's Spatial4n.Core.IO.BinaryCodec . This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object SpatialStrategy SerializedDVStrategy Inherited Members SpatialStrategy.m_ctx SpatialStrategy.SpatialContext SpatialStrategy.FieldName SpatialStrategy.MakeDistanceValueSource(IPoint) SpatialStrategy.MakeRecipDistanceValueSource(IShape) SpatialStrategy.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Serialized Assembly : Lucene.Net.Spatial.dll Syntax public class SerializedDVStrategy : SpatialStrategy Constructors | Improve this Doc View Source SerializedDVStrategy(SpatialContext, String) Constructs the spatial strategy with its mandatory arguments. Declaration public SerializedDVStrategy(SpatialContext ctx, string fieldName) Parameters Type Name Description Spatial4n.Core.Context.SpatialContext ctx System.String fieldName Methods | Improve this Doc View Source CreateIndexableFields(IShape) Declaration public override Field[] CreateIndexableFields(IShape shape) Parameters Type Name Description Spatial4n.Core.Shapes.IShape shape Returns Type Description Field [] Overrides SpatialStrategy.CreateIndexableFields(IShape) | Improve this Doc View Source MakeDistanceValueSource(IPoint, Double) Declaration public override ValueSource MakeDistanceValueSource(IPoint queryPoint, double multiplier) Parameters Type Name Description Spatial4n.Core.Shapes.IPoint queryPoint System.Double multiplier Returns Type Description Lucene.Net.Queries.Function.ValueSource Overrides SpatialStrategy.MakeDistanceValueSource(IPoint, Double) | Improve this Doc View Source MakeFilter(SpatialArgs) Returns a Lucene.Net.Search.Filter that should be used with QUERY_FIRST_FILTER_STRATEGY . Use in another manner is likely to result in an System.NotSupportedException to prevent misuse because the filter can't efficiently work via iteration. Declaration public override Filter MakeFilter(SpatialArgs args) Parameters Type Name Description SpatialArgs args Returns Type Description Lucene.Net.Search.Filter Overrides SpatialStrategy.MakeFilter(SpatialArgs) | Improve this Doc View Source MakeQuery(SpatialArgs) Declaration public override ConstantScoreQuery MakeQuery(SpatialArgs args) Parameters Type Name Description SpatialArgs args Returns Type Description Lucene.Net.Search.ConstantScoreQuery Overrides SpatialStrategy.MakeQuery(SpatialArgs) | Improve this Doc View Source MakeShapeValueSource() Provides access to each shape per document as a ValueSource in which Lucene.Net.Queries.Function.FunctionValues.ObjectVal(System.Int32) returns a Spatial4n.Core.Shapes.IShape . Declaration public virtual ValueSource MakeShapeValueSource() Returns Type Description Lucene.Net.Queries.Function.ValueSource"
  },
  "Lucene.Net.Spatial.SpatialStrategy.html": {
    "href": "Lucene.Net.Spatial.SpatialStrategy.html",
    "title": "Class SpatialStrategy | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class SpatialStrategy The SpatialStrategy encapsulates an approach to indexing and searching based on shapes. Different implementations will support different features. A strategy should document these common elements: Can it index more than one shape per field? What types of shapes can be indexed? What types of query shapes can be used? What types of query operations are supported? This might vary per shape. Does it use the FieldCache , or some other type of cache? When? If a strategy only supports certain shapes at index or query time, then in general it will throw an exception if given an incompatible one. It will not be coerced into compatibility. Note that a SpatialStrategy is not involved with the Lucene stored field values of shapes, which is immaterial to indexing and search. Thread-safe. This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object SpatialStrategy PrefixTreeStrategy SerializedDVStrategy PointVectorStrategy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial Assembly : Lucene.Net.Spatial.dll Syntax public abstract class SpatialStrategy Constructors | Improve this Doc View Source SpatialStrategy(SpatialContext, String) Constructs the spatial strategy with its mandatory arguments. Declaration protected SpatialStrategy(SpatialContext ctx, string fieldName) Parameters Type Name Description Spatial4n.Core.Context.SpatialContext ctx System.String fieldName Fields | Improve this Doc View Source m_ctx Declaration protected readonly SpatialContext m_ctx Field Value Type Description Spatial4n.Core.Context.SpatialContext Properties | Improve this Doc View Source FieldName The name of the field or the prefix of them if there are multiple fields needed internally. Declaration public virtual string FieldName { get; } Property Value Type Description System.String Not null. | Improve this Doc View Source SpatialContext Declaration public virtual SpatialContext SpatialContext { get; } Property Value Type Description Spatial4n.Core.Context.SpatialContext Methods | Improve this Doc View Source CreateIndexableFields(IShape) Returns the IndexableField(s) from the shape that are to be added to the Document . These fields are expected to be marked as indexed and not stored. Note: If you want to store the shape as a string for retrieval in search results, you could add it like this: document.Add(new StoredField(fieldName, ctx.ToString(shape))); The particular string representation used doesn't matter to the Strategy since it doesn't use it. Declaration public abstract Field[] CreateIndexableFields(IShape shape) Parameters Type Name Description Spatial4n.Core.Shapes.IShape shape Returns Type Description Field [] Not null nor will it have null elements. Exceptions Type Condition System.NotSupportedException if given a shape incompatible with the strategy | Improve this Doc View Source MakeDistanceValueSource(IPoint) See MakeDistanceValueSource(IPoint, Double) called with a multiplier of 1.0 (i.e. units of degrees). Declaration public virtual ValueSource MakeDistanceValueSource(IPoint queryPoint) Parameters Type Name Description Spatial4n.Core.Shapes.IPoint queryPoint Returns Type Description Lucene.Net.Queries.Function.ValueSource | Improve this Doc View Source MakeDistanceValueSource(IPoint, Double) Make a ValueSource returning the distance between the center of the indexed shape and queryPoint . If there are multiple indexed shapes then the closest one is chosen. The result is multiplied by multiplier , which conveniently is used to get the desired units. Declaration public abstract ValueSource MakeDistanceValueSource(IPoint queryPoint, double multiplier) Parameters Type Name Description Spatial4n.Core.Shapes.IPoint queryPoint System.Double multiplier Returns Type Description Lucene.Net.Queries.Function.ValueSource | Improve this Doc View Source MakeFilter(SpatialArgs) Make a Filter based principally on SpatialOperation and Spatial4n.Core.Shapes.IShape from the supplied args . If a subclasses implements MakeQuery(SpatialArgs) then this method could be simply: return new QueryWrapperFilter(MakeQuery(args).Query); Declaration public abstract Filter MakeFilter(SpatialArgs args) Parameters Type Name Description SpatialArgs args Returns Type Description Lucene.Net.Search.Filter Exceptions Type Condition System.NotSupportedException If the strategy does not support the shape in args . UnsupportedSpatialOperation If the strategy does not support the SpatialOperation in args . | Improve this Doc View Source MakeQuery(SpatialArgs) Make a Query based principally on SpatialOperation and Spatial4n.Core.Shapes.IShape from the supplied args . The default implementation is return new ConstantScoreQuery(MakeFilter(args)); Declaration public virtual ConstantScoreQuery MakeQuery(SpatialArgs args) Parameters Type Name Description SpatialArgs args Returns Type Description Lucene.Net.Search.ConstantScoreQuery Exceptions Type Condition System.NotSupportedException If the strategy does not support the shape in args . UnsupportedSpatialOperation If the strategy does not support the SpatialOperation in args . | Improve this Doc View Source MakeRecipDistanceValueSource(IShape) Returns a ValueSource with values ranging from 1 to 0, depending inversely on the distance from MakeDistanceValueSource(IPoint) . The formula is c / (d + c) where 'd' is the distance and 'c' is one tenth the distance to the farthest edge from the center. Thus the scores will be 1 for indexed points at the center of the query shape and as low as ~0.1 at its furthest edges. Declaration public ValueSource MakeRecipDistanceValueSource(IShape queryShape) Parameters Type Name Description Spatial4n.Core.Shapes.IShape queryShape Returns Type Description Lucene.Net.Queries.Function.ValueSource | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "Lucene.Net.Spatial.Util.CachingDoubleValueSource.html": {
    "href": "Lucene.Net.Spatial.Util.CachingDoubleValueSource.html",
    "title": "Class CachingDoubleValueSource | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class CachingDoubleValueSource Caches the doubleVal of another value source in a HashMap so that it is computed only once. This is a Lucene.NET INTERNAL API, use at your own risk Inheritance System.Object Lucene.Net.Queries.Function.ValueSource CachingDoubleValueSource Inherited Members Lucene.Net.Queries.Function.ValueSource.ToString() Lucene.Net.Queries.Function.ValueSource.CreateWeight(System.Collections.IDictionary, Lucene.Net.Search.IndexSearcher) Lucene.Net.Queries.Function.ValueSource.NewContext(Lucene.Net.Search.IndexSearcher) Lucene.Net.Queries.Function.ValueSource.GetSortField(System.Boolean) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Util Assembly : Lucene.Net.Spatial.dll Syntax public class CachingDoubleValueSource : ValueSource Constructors | Improve this Doc View Source CachingDoubleValueSource(ValueSource) Declaration public CachingDoubleValueSource(ValueSource source) Parameters Type Name Description Lucene.Net.Queries.Function.ValueSource source Fields | Improve this Doc View Source m_cache Declaration protected readonly IDictionary<int, double> m_cache Field Value Type Description System.Collections.Generic.IDictionary < System.Int32 , System.Double > | Improve this Doc View Source m_source Declaration protected readonly ValueSource m_source Field Value Type Description Lucene.Net.Queries.Function.ValueSource Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides Lucene.Net.Queries.Function.ValueSource.Equals(System.Object) | Improve this Doc View Source GetDescription() Declaration public override string GetDescription() Returns Type Description System.String Overrides Lucene.Net.Queries.Function.ValueSource.GetDescription() | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Lucene.Net.Queries.Function.ValueSource.GetHashCode() | Improve this Doc View Source GetValues(IDictionary, AtomicReaderContext) Declaration public override FunctionValues GetValues(IDictionary context, AtomicReaderContext readerContext) Parameters Type Name Description System.Collections.IDictionary context Lucene.Net.Index.AtomicReaderContext readerContext Returns Type Description Lucene.Net.Queries.Function.FunctionValues Overrides Lucene.Net.Queries.Function.ValueSource.GetValues(System.Collections.IDictionary, Lucene.Net.Index.AtomicReaderContext)"
  },
  "Lucene.Net.Spatial.Util.DistanceToShapeValueSource.html": {
    "href": "Lucene.Net.Spatial.Util.DistanceToShapeValueSource.html",
    "title": "Class DistanceToShapeValueSource | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class DistanceToShapeValueSource The distance from a provided Point to a Point retrieved from a ValueSource via Lucene.Net.Queries.Function.FunctionValues.ObjectVal(System.Int32) . The distance is calculated via a Spatial4n.Core.Distance.IDistanceCalculator . This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object Lucene.Net.Queries.Function.ValueSource DistanceToShapeValueSource Inherited Members Lucene.Net.Queries.Function.ValueSource.ToString() Lucene.Net.Queries.Function.ValueSource.NewContext(Lucene.Net.Search.IndexSearcher) Lucene.Net.Queries.Function.ValueSource.GetSortField(System.Boolean) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Util Assembly : Lucene.Net.Spatial.dll Syntax public class DistanceToShapeValueSource : ValueSource Constructors | Improve this Doc View Source DistanceToShapeValueSource(ValueSource, IPoint, Double, SpatialContext) Declaration public DistanceToShapeValueSource(ValueSource shapeValueSource, IPoint queryPoint, double multiplier, SpatialContext ctx) Parameters Type Name Description Lucene.Net.Queries.Function.ValueSource shapeValueSource Spatial4n.Core.Shapes.IPoint queryPoint System.Double multiplier Spatial4n.Core.Context.SpatialContext ctx Methods | Improve this Doc View Source CreateWeight(IDictionary, IndexSearcher) Declaration public override void CreateWeight(IDictionary context, IndexSearcher searcher) Parameters Type Name Description System.Collections.IDictionary context Lucene.Net.Search.IndexSearcher searcher Overrides Lucene.Net.Queries.Function.ValueSource.CreateWeight(System.Collections.IDictionary, Lucene.Net.Search.IndexSearcher) | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides Lucene.Net.Queries.Function.ValueSource.Equals(System.Object) | Improve this Doc View Source GetDescription() Declaration public override string GetDescription() Returns Type Description System.String Overrides Lucene.Net.Queries.Function.ValueSource.GetDescription() | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Lucene.Net.Queries.Function.ValueSource.GetHashCode() | Improve this Doc View Source GetValues(IDictionary, AtomicReaderContext) Declaration public override FunctionValues GetValues(IDictionary context, AtomicReaderContext readerContext) Parameters Type Name Description System.Collections.IDictionary context Lucene.Net.Index.AtomicReaderContext readerContext Returns Type Description Lucene.Net.Queries.Function.FunctionValues Overrides Lucene.Net.Queries.Function.ValueSource.GetValues(System.Collections.IDictionary, Lucene.Net.Index.AtomicReaderContext)"
  },
  "Lucene.Net.Spatial.Util.html": {
    "href": "Lucene.Net.Spatial.Util.html",
    "title": "Namespace Lucene.Net.Spatial.Util | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Namespace Lucene.Net.Spatial.Util <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> Various spatial utilities. Classes CachingDoubleValueSource Caches the doubleVal of another value source in a HashMap so that it is computed only once. This is a Lucene.NET INTERNAL API, use at your own risk DistanceToShapeValueSource The distance from a provided Point to a Point retrieved from a ValueSource via Lucene.Net.Queries.Function.FunctionValues.ObjectVal(System.Int32) . The distance is calculated via a Spatial4n.Core.Distance.IDistanceCalculator . This is a Lucene.NET EXPERIMENTAL API, use at your own risk ShapeFieldCache<T> Bounded Cache of Shapes associated with docIds. Note, multiple Shapes can be associated with a given docId WARNING: This class holds the data in an extremely inefficient manner as all Points are in memory as objects and they are stored in many Lists (one per document). So it works but doesn't scale. It will be replaced in the future. This is a Lucene.NET INTERNAL API, use at your own risk ShapeFieldCacheDistanceValueSource An implementation of the Lucene ValueSource that returns the spatial distance between an input point and a document's points in ShapeFieldCacheProvider<T> . The shortest distance is returned if a document has more than one point. This is a Lucene.NET INTERNAL API, use at your own risk ShapeFieldCacheProvider<T> Provides access to a ShapeFieldCache<T> for a given Lucene.Net.Index.AtomicReader . If a Cache does not exist for the TextReader, then it is built by iterating over the all terms for a given field, reconstructing the Shape from them, and adding them to the Cache. ShapePredicateValueSource A boolean Lucene.Net.Queries.Function.ValueSource that compares a shape from a provided Lucene.Net.Queries.Function.ValueSource with a given Spatial4n.Core.Shapes.IShape and sees if it matches a given SpatialOperation (the predicate). This is a Lucene.NET EXPERIMENTAL API, use at your own risk ValueSourceFilter Lucene.Net.Search.Filter that matches all documents where a Lucene.Net.Queries.Function.ValueSource is in between a range of min and max inclusive. This is a Lucene.NET INTERNAL API, use at your own risk"
  },
  "Lucene.Net.Spatial.Util.ShapeFieldCache-1.html": {
    "href": "Lucene.Net.Spatial.Util.ShapeFieldCache-1.html",
    "title": "Class ShapeFieldCache<T> | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class ShapeFieldCache<T> Bounded Cache of Shapes associated with docIds. Note, multiple Shapes can be associated with a given docId WARNING: This class holds the data in an extremely inefficient manner as all Points are in memory as objects and they are stored in many Lists (one per document). So it works but doesn't scale. It will be replaced in the future. This is a Lucene.NET INTERNAL API, use at your own risk Inheritance System.Object ShapeFieldCache<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Util Assembly : Lucene.Net.Spatial.dll Syntax public class ShapeFieldCache<T> where T : IShape Type Parameters Name Description T Constructors | Improve this Doc View Source ShapeFieldCache(Int32, Int32) Declaration public ShapeFieldCache(int length, int defaultLength) Parameters Type Name Description System.Int32 length System.Int32 defaultLength Properties | Improve this Doc View Source DefaultLength Declaration public int DefaultLength { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Add(Int32, T) Declaration public virtual void Add(int docid, T s) Parameters Type Name Description System.Int32 docid T s | Improve this Doc View Source GetShapes(Int32) Declaration public virtual IList<T> GetShapes(int docid) Parameters Type Name Description System.Int32 docid Returns Type Description System.Collections.Generic.IList <T>"
  },
  "Lucene.Net.Spatial.Util.ShapeFieldCacheDistanceValueSource.html": {
    "href": "Lucene.Net.Spatial.Util.ShapeFieldCacheDistanceValueSource.html",
    "title": "Class ShapeFieldCacheDistanceValueSource | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class ShapeFieldCacheDistanceValueSource An implementation of the Lucene ValueSource that returns the spatial distance between an input point and a document's points in ShapeFieldCacheProvider<T> . The shortest distance is returned if a document has more than one point. This is a Lucene.NET INTERNAL API, use at your own risk Inheritance System.Object Lucene.Net.Queries.Function.ValueSource ShapeFieldCacheDistanceValueSource Inherited Members Lucene.Net.Queries.Function.ValueSource.ToString() Lucene.Net.Queries.Function.ValueSource.CreateWeight(System.Collections.IDictionary, Lucene.Net.Search.IndexSearcher) Lucene.Net.Queries.Function.ValueSource.NewContext(Lucene.Net.Search.IndexSearcher) Lucene.Net.Queries.Function.ValueSource.GetSortField(System.Boolean) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Util Assembly : Lucene.Net.Spatial.dll Syntax public class ShapeFieldCacheDistanceValueSource : ValueSource Constructors | Improve this Doc View Source ShapeFieldCacheDistanceValueSource(SpatialContext, ShapeFieldCacheProvider<IPoint>, IPoint, Double) Declaration public ShapeFieldCacheDistanceValueSource(SpatialContext ctx, ShapeFieldCacheProvider<IPoint> provider, IPoint from, double multiplier) Parameters Type Name Description Spatial4n.Core.Context.SpatialContext ctx ShapeFieldCacheProvider < Spatial4n.Core.Shapes.IPoint > provider Spatial4n.Core.Shapes.IPoint from System.Double multiplier Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides Lucene.Net.Queries.Function.ValueSource.Equals(System.Object) | Improve this Doc View Source GetDescription() Declaration public override string GetDescription() Returns Type Description System.String Overrides Lucene.Net.Queries.Function.ValueSource.GetDescription() | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Lucene.Net.Queries.Function.ValueSource.GetHashCode() | Improve this Doc View Source GetValues(IDictionary, AtomicReaderContext) Declaration public override FunctionValues GetValues(IDictionary context, AtomicReaderContext readerContext) Parameters Type Name Description System.Collections.IDictionary context Lucene.Net.Index.AtomicReaderContext readerContext Returns Type Description Lucene.Net.Queries.Function.FunctionValues Overrides Lucene.Net.Queries.Function.ValueSource.GetValues(System.Collections.IDictionary, Lucene.Net.Index.AtomicReaderContext)"
  },
  "Lucene.Net.Spatial.Util.ShapeFieldCacheProvider-1.html": {
    "href": "Lucene.Net.Spatial.Util.ShapeFieldCacheProvider-1.html",
    "title": "Class ShapeFieldCacheProvider<T> | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class ShapeFieldCacheProvider<T> Provides access to a ShapeFieldCache<T> for a given Lucene.Net.Index.AtomicReader . If a Cache does not exist for the TextReader, then it is built by iterating over the all terms for a given field, reconstructing the Shape from them, and adding them to the Cache. Inheritance System.Object ShapeFieldCacheProvider<T> PointPrefixTreeFieldCacheProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Util Assembly : Lucene.Net.Spatial.dll Syntax public abstract class ShapeFieldCacheProvider<T> where T : IShape Type Parameters Name Description T Constructors | Improve this Doc View Source ShapeFieldCacheProvider(String, Int32) Declaration public ShapeFieldCacheProvider(string shapeField, int defaultSize) Parameters Type Name Description System.String shapeField System.Int32 defaultSize Fields | Improve this Doc View Source m_defaultSize Declaration protected readonly int m_defaultSize Field Value Type Description System.Int32 | Improve this Doc View Source m_shapeField Declaration protected readonly string m_shapeField Field Value Type Description System.String Methods | Improve this Doc View Source GetCache(AtomicReader) Declaration public virtual ShapeFieldCache<T> GetCache(AtomicReader reader) Parameters Type Name Description Lucene.Net.Index.AtomicReader reader Returns Type Description ShapeFieldCache <T> | Improve this Doc View Source ReadShape(BytesRef) Declaration protected abstract T ReadShape(BytesRef term) Parameters Type Name Description Lucene.Net.Util.BytesRef term Returns Type Description T"
  },
  "Lucene.Net.Spatial.Util.ShapePredicateValueSource.html": {
    "href": "Lucene.Net.Spatial.Util.ShapePredicateValueSource.html",
    "title": "Class ShapePredicateValueSource | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class ShapePredicateValueSource A boolean Lucene.Net.Queries.Function.ValueSource that compares a shape from a provided Lucene.Net.Queries.Function.ValueSource with a given Spatial4n.Core.Shapes.IShape and sees if it matches a given SpatialOperation (the predicate). This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object Lucene.Net.Queries.Function.ValueSource ShapePredicateValueSource Inherited Members Lucene.Net.Queries.Function.ValueSource.ToString() Lucene.Net.Queries.Function.ValueSource.NewContext(Lucene.Net.Search.IndexSearcher) Lucene.Net.Queries.Function.ValueSource.GetSortField(System.Boolean) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Util Assembly : Lucene.Net.Spatial.dll Syntax public class ShapePredicateValueSource : ValueSource Constructors | Improve this Doc View Source ShapePredicateValueSource(ValueSource, SpatialOperation, IShape) Declaration public ShapePredicateValueSource(ValueSource shapeValuesource, SpatialOperation op, IShape queryShape) Parameters Type Name Description Lucene.Net.Queries.Function.ValueSource shapeValuesource Must yield Spatial4n.Core.Shapes.IShape instances from it's ObjectVal(doc). If null then the result is false. This is the left-hand (indexed) side. SpatialOperation op the predicate Spatial4n.Core.Shapes.IShape queryShape The shape on the right-hand (query) side. Methods | Improve this Doc View Source CreateWeight(IDictionary, IndexSearcher) Declaration public override void CreateWeight(IDictionary context, IndexSearcher searcher) Parameters Type Name Description System.Collections.IDictionary context Lucene.Net.Search.IndexSearcher searcher Overrides Lucene.Net.Queries.Function.ValueSource.CreateWeight(System.Collections.IDictionary, Lucene.Net.Search.IndexSearcher) | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides Lucene.Net.Queries.Function.ValueSource.Equals(System.Object) | Improve this Doc View Source GetDescription() Declaration public override string GetDescription() Returns Type Description System.String Overrides Lucene.Net.Queries.Function.ValueSource.GetDescription() | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Lucene.Net.Queries.Function.ValueSource.GetHashCode() | Improve this Doc View Source GetValues(IDictionary, AtomicReaderContext) Declaration public override FunctionValues GetValues(IDictionary context, AtomicReaderContext readerContext) Parameters Type Name Description System.Collections.IDictionary context Lucene.Net.Index.AtomicReaderContext readerContext Returns Type Description Lucene.Net.Queries.Function.FunctionValues Overrides Lucene.Net.Queries.Function.ValueSource.GetValues(System.Collections.IDictionary, Lucene.Net.Index.AtomicReaderContext)"
  },
  "Lucene.Net.Spatial.Util.ValueSourceFilter.html": {
    "href": "Lucene.Net.Spatial.Util.ValueSourceFilter.html",
    "title": "Class ValueSourceFilter | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class ValueSourceFilter Lucene.Net.Search.Filter that matches all documents where a Lucene.Net.Queries.Function.ValueSource is in between a range of min and max inclusive. This is a Lucene.NET INTERNAL API, use at your own risk Inheritance System.Object Lucene.Net.Search.Filter ValueSourceFilter Inherited Members Filter.NewAnonymous(Func<AtomicReaderContext, IBits, DocIdSet>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Spatial.Util Assembly : Lucene.Net.Spatial.dll Syntax public class ValueSourceFilter : Filter Constructors | Improve this Doc View Source ValueSourceFilter(Filter, ValueSource, Double, Double) Declaration public ValueSourceFilter(Filter startingFilter, ValueSource source, double min, double max) Parameters Type Name Description Lucene.Net.Search.Filter startingFilter Lucene.Net.Queries.Function.ValueSource source System.Double min System.Double max Properties | Improve this Doc View Source Max Declaration public double Max { get; } Property Value Type Description System.Double | Improve this Doc View Source Min Declaration public double Min { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source GetDocIdSet(AtomicReaderContext, IBits) Declaration public override DocIdSet GetDocIdSet(AtomicReaderContext context, IBits acceptDocs) Parameters Type Name Description Lucene.Net.Index.AtomicReaderContext context Lucene.Net.Util.IBits acceptDocs Returns Type Description Lucene.Net.Search.DocIdSet Overrides Lucene.Net.Search.Filter.GetDocIdSet(Lucene.Net.Index.AtomicReaderContext, Lucene.Net.Util.IBits)"
  },
  "Lucene.Net.Spatial.Vector.DistanceValueSource.html": {
    "href": "Lucene.Net.Spatial.Vector.DistanceValueSource.html",
    "title": "Class DistanceValueSource | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class DistanceValueSource An implementation of the Lucene Lucene.Net.Queries.Function.ValueSource model that returns the distance for a PointVectorStrategy . This is a Lucene.NET INTERNAL API, use at your own risk Inheritance System.Object Lucene.Net.Queries.Function.ValueSource DistanceValueSource Inherited Members Lucene.Net.Queries.Function.ValueSource.ToString() Lucene.Net.Queries.Function.ValueSource.CreateWeight(System.Collections.IDictionary, Lucene.Net.Search.IndexSearcher) Lucene.Net.Queries.Function.ValueSource.NewContext(Lucene.Net.Search.IndexSearcher) Lucene.Net.Queries.Function.ValueSource.GetSortField(System.Boolean) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Vector Assembly : Lucene.Net.Spatial.dll Syntax public class DistanceValueSource : ValueSource Constructors | Improve this Doc View Source DistanceValueSource(PointVectorStrategy, IPoint, Double) Constructor. Declaration public DistanceValueSource(PointVectorStrategy strategy, IPoint from, double multiplier) Parameters Type Name Description PointVectorStrategy strategy Spatial4n.Core.Shapes.IPoint from System.Double multiplier Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides Lucene.Net.Queries.Function.ValueSource.Equals(System.Object) | Improve this Doc View Source GetDescription() Returns the Lucene.Net.Queries.Function.ValueSource description. Declaration public override string GetDescription() Returns Type Description System.String Overrides Lucene.Net.Queries.Function.ValueSource.GetDescription() | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Lucene.Net.Queries.Function.ValueSource.GetHashCode() | Improve this Doc View Source GetValues(IDictionary, AtomicReaderContext) Returns the Lucene.Net.Queries.Function.FunctionValues used by the function query. Declaration public override FunctionValues GetValues(IDictionary context, AtomicReaderContext readerContext) Parameters Type Name Description System.Collections.IDictionary context Lucene.Net.Index.AtomicReaderContext readerContext Returns Type Description Lucene.Net.Queries.Function.FunctionValues Overrides Lucene.Net.Queries.Function.ValueSource.GetValues(System.Collections.IDictionary, Lucene.Net.Index.AtomicReaderContext)"
  },
  "Lucene.Net.Spatial.Vector.html": {
    "href": "Lucene.Net.Spatial.Vector.html",
    "title": "Namespace Lucene.Net.Spatial.Vector | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Namespace Lucene.Net.Spatial.Vector <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> Spatial strategy that uses two fields. Classes DistanceValueSource An implementation of the Lucene Lucene.Net.Queries.Function.ValueSource model that returns the distance for a PointVectorStrategy . This is a Lucene.NET INTERNAL API, use at your own risk PointVectorStrategy Simple SpatialStrategy which represents Points in two numeric DoubleField s. The Strategy's best feature is decent distance sort. Characteristics: Only indexes points; just one per field value. Can query by a rectangle or circle. Intersects and IsWithin is supported. Uses the FieldCache for MakeDistanceValueSource(IPoint) and for searching with a Circle. Implementation: This is a simple Strategy. Search works with NumericRangeQuery s on an x & y pair of fields. A Circle query does the same bbox query but adds a ValueSource filter on MakeDistanceValueSource(IPoint) . One performance shortcoming with this strategy is that a scenario involving both a search using a Circle and sort will result in calculations for the spatial distance being done twice -- once for the filter and second for the sort. This is a Lucene.NET EXPERIMENTAL API, use at your own risk"
  },
  "Lucene.Net.Spatial.Vector.PointVectorStrategy.html": {
    "href": "Lucene.Net.Spatial.Vector.PointVectorStrategy.html",
    "title": "Class PointVectorStrategy | Apache Lucene.NET 4.8.0-beta00012 Documentation",
    "keywords": "Class PointVectorStrategy Simple SpatialStrategy which represents Points in two numeric DoubleField s. The Strategy's best feature is decent distance sort. Characteristics: Only indexes points; just one per field value. Can query by a rectangle or circle. Intersects and IsWithin is supported. Uses the FieldCache for MakeDistanceValueSource(IPoint) and for searching with a Circle. Implementation: This is a simple Strategy. Search works with NumericRangeQuery s on an x & y pair of fields. A Circle query does the same bbox query but adds a ValueSource filter on MakeDistanceValueSource(IPoint) . One performance shortcoming with this strategy is that a scenario involving both a search using a Circle and sort will result in calculations for the spatial distance being done twice -- once for the filter and second for the sort. This is a Lucene.NET EXPERIMENTAL API, use at your own risk Inheritance System.Object SpatialStrategy PointVectorStrategy Inherited Members SpatialStrategy.m_ctx SpatialStrategy.SpatialContext SpatialStrategy.FieldName SpatialStrategy.MakeDistanceValueSource(IPoint) SpatialStrategy.MakeRecipDistanceValueSource(IShape) SpatialStrategy.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Spatial.Vector Assembly : Lucene.Net.Spatial.dll Syntax public class PointVectorStrategy : SpatialStrategy Constructors | Improve this Doc View Source PointVectorStrategy(SpatialContext, String) Declaration public PointVectorStrategy(SpatialContext ctx, string fieldNamePrefix) Parameters Type Name Description Spatial4n.Core.Context.SpatialContext ctx System.String fieldNamePrefix Fields | Improve this Doc View Source SUFFIX_X Declaration public static string SUFFIX_X Field Value Type Description System.String | Improve this Doc View Source SUFFIX_Y Declaration public static string SUFFIX_Y Field Value Type Description System.String Properties | Improve this Doc View Source PrecisionStep Declaration public virtual int PrecisionStep { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source CreateIndexableFields(IPoint) See CreateIndexableFields(IShape) Declaration public virtual Field[] CreateIndexableFields(IPoint point) Parameters Type Name Description Spatial4n.Core.Shapes.IPoint point Returns Type Description Field [] | Improve this Doc View Source CreateIndexableFields(IShape) Declaration public override Field[] CreateIndexableFields(IShape shape) Parameters Type Name Description Spatial4n.Core.Shapes.IShape shape Returns Type Description Field [] Overrides SpatialStrategy.CreateIndexableFields(IShape) | Improve this Doc View Source MakeDistanceValueSource(IPoint, Double) Declaration public override ValueSource MakeDistanceValueSource(IPoint queryPoint, double multiplier) Parameters Type Name Description Spatial4n.Core.Shapes.IPoint queryPoint System.Double multiplier Returns Type Description Lucene.Net.Queries.Function.ValueSource Overrides SpatialStrategy.MakeDistanceValueSource(IPoint, Double) | Improve this Doc View Source MakeFilter(SpatialArgs) Declaration public override Filter MakeFilter(SpatialArgs args) Parameters Type Name Description SpatialArgs args Returns Type Description Lucene.Net.Search.Filter Overrides SpatialStrategy.MakeFilter(SpatialArgs) | Improve this Doc View Source MakeQuery(SpatialArgs) Declaration public override ConstantScoreQuery MakeQuery(SpatialArgs args) Parameters Type Name Description SpatialArgs args Returns Type Description Lucene.Net.Search.ConstantScoreQuery Overrides SpatialStrategy.MakeQuery(SpatialArgs) | Improve this Doc View Source MakeQueryDistanceScore(SpatialArgs) Declaration public virtual Query MakeQueryDistanceScore(SpatialArgs args) Parameters Type Name Description SpatialArgs args Returns Type Description Lucene.Net.Search.Query"
  }
}