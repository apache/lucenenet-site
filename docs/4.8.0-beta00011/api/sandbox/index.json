{
  "Lucene.Net.Sandbox.Queries.DuplicateFilter.html": {
    "href": "Lucene.Net.Sandbox.Queries.DuplicateFilter.html",
    "title": "Class DuplicateFilter | Apache Lucene.NET 4.8.0-beta00011 Documentation",
    "keywords": "Class DuplicateFilter Filter to remove duplicate values from search results. WARNING: for this to work correctly, you may have to wrap your reader as it cannot current deduplicate across different index segments. Inheritance System.Object Lucene.Net.Search.Filter DuplicateFilter Inherited Members Filter.NewAnonymous(Func<AtomicReaderContext, IBits, DocIdSet>) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Sandbox.Queries Assembly : Lucene.Net.Sandbox.dll Syntax public class DuplicateFilter : Filter Constructors | Improve this Doc View Source DuplicateFilter(String) Declaration public DuplicateFilter(string fieldName) Parameters Type Name Description System.String fieldName | Improve this Doc View Source DuplicateFilter(String, KeepMode, ProcessingMode) Declaration public DuplicateFilter(string fieldName, KeepMode keepMode, ProcessingMode processingMode) Parameters Type Name Description System.String fieldName KeepMode keepMode ProcessingMode processingMode Properties | Improve this Doc View Source FieldName Declaration public virtual string FieldName { get; set; } Property Value Type Description System.String | Improve this Doc View Source KeepMode Declaration public KeepMode KeepMode { get; set; } Property Value Type Description KeepMode | Improve this Doc View Source ProcessingMode Declaration public ProcessingMode ProcessingMode { get; set; } Property Value Type Description ProcessingMode Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetDocIdSet(AtomicReaderContext, IBits) Declaration public override DocIdSet GetDocIdSet(AtomicReaderContext context, IBits acceptDocs) Parameters Type Name Description Lucene.Net.Index.AtomicReaderContext context Lucene.Net.Util.IBits acceptDocs Returns Type Description Lucene.Net.Search.DocIdSet Overrides Lucene.Net.Search.Filter.GetDocIdSet(Lucene.Net.Index.AtomicReaderContext, Lucene.Net.Util.IBits) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() See Also SlowCompositeReaderWrapper"
  },
  "Lucene.Net.Sandbox.Queries.FuzzyLikeThisQuery.html": {
    "href": "Lucene.Net.Sandbox.Queries.FuzzyLikeThisQuery.html",
    "title": "Class FuzzyLikeThisQuery | Apache Lucene.NET 4.8.0-beta00011 Documentation",
    "keywords": "Class FuzzyLikeThisQuery Fuzzifies ALL terms provided as strings and then picks the best n differentiating terms. In effect this mixes the behaviour of FuzzyQuery and MoreLikeThis but with special consideration of fuzzy scoring factors. This generally produces good results for queries where users may provide details in a number of fields and have no knowledge of boolean query syntax and also want a degree of fuzzy matching and a fast query. For each source term the fuzzy variants are held in a BooleanQuery with no coord factor (because we are not looking for matches on multiple variants in any one doc). Additionally, a specialized TermQuery is used for variants and does not use that variant term's IDF because this would favour rarer terms eg misspellings. Instead, all variants use the same IDF ranking (the one for the source query term) and this is factored into the variant's boost. If the source query term does not exist in the index the average IDF of the variants is used. Inheritance System.Object Lucene.Net.Search.Query FuzzyLikeThisQuery Inherited Members Lucene.Net.Search.Query.Boost Lucene.Net.Search.Query.ToString() Lucene.Net.Search.Query.CreateWeight(Lucene.Net.Search.IndexSearcher) Query.ExtractTerms(ISet<Term>) Lucene.Net.Search.Query.Clone() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Sandbox.Queries Assembly : Lucene.Net.Sandbox.dll Syntax public class FuzzyLikeThisQuery : Query Constructors | Improve this Doc View Source FuzzyLikeThisQuery(Int32, Analyzer) Declaration public FuzzyLikeThisQuery(int maxNumTerms, Analyzer analyzer) Parameters Type Name Description System.Int32 maxNumTerms The total number of terms clauses that will appear once rewritten as a BooleanQuery Lucene.Net.Analysis.Analyzer analyzer Properties | Improve this Doc View Source IgnoreTF Declaration public virtual bool IgnoreTF { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source AddTerms(String, String, Single, Int32) Adds user input for \"fuzzification\" Declaration public virtual void AddTerms(string queryString, string fieldName, float minSimilarity, int prefixLength) Parameters Type Name Description System.String queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed System.String fieldName The minimum similarity of the term variants (see Lucene.Net.Search.FuzzyTermsEnum ) System.Single minSimilarity Length of required common prefix on variant terms (see Lucene.Net.Search.FuzzyTermsEnum ) System.Int32 prefixLength | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides Query.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Lucene.Net.Search.Query.GetHashCode() | Improve this Doc View Source Rewrite(IndexReader) Declaration public override Query Rewrite(IndexReader reader) Parameters Type Name Description Lucene.Net.Index.IndexReader reader Returns Type Description Lucene.Net.Search.Query Overrides Lucene.Net.Search.Query.Rewrite(Lucene.Net.Index.IndexReader) | Improve this Doc View Source ToString(String) (non-Javadoc) ToString(String) Declaration public override string ToString(string field) Parameters Type Name Description System.String field Returns Type Description System.String Overrides Query.ToString(String)"
  },
  "Lucene.Net.Sandbox.Queries.html": {
    "href": "Lucene.Net.Sandbox.Queries.html",
    "title": "Namespace Lucene.Net.Sandbox.Queries | Apache Lucene.NET 4.8.0-beta00011 Documentation",
    "keywords": "Namespace Lucene.Net.Sandbox.Queries <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> Additional queries (some may have caveats or limitations) Classes DuplicateFilter Filter to remove duplicate values from search results. WARNING: for this to work correctly, you may have to wrap your reader as it cannot current deduplicate across different index segments. FuzzyLikeThisQuery Fuzzifies ALL terms provided as strings and then picks the best n differentiating terms. In effect this mixes the behaviour of FuzzyQuery and MoreLikeThis but with special consideration of fuzzy scoring factors. This generally produces good results for queries where users may provide details in a number of fields and have no knowledge of boolean query syntax and also want a degree of fuzzy matching and a fast query. For each source term the fuzzy variants are held in a BooleanQuery with no coord factor (because we are not looking for matches on multiple variants in any one doc). Additionally, a specialized TermQuery is used for variants and does not use that variant term's IDF because this would favour rarer terms eg misspellings. Instead, all variants use the same IDF ranking (the one for the source query term) and this is factored into the variant's boost. If the source query term does not exist in the index the average IDF of the variants is used. SlowFuzzyQuery Implements the classic fuzzy search query. The similarity measurement is based on the Levenshtein (edit distance) algorithm. Note that, unlike FuzzyQuery , this query will silently allow for a (possibly huge) number of edit distances in comparisons, and may be extremely slow (comparing every term in the index). SlowFuzzyTermsEnum Potentially slow fuzzy Lucene.Net.Index.TermsEnum for enumerating all terms that are similar to the specified filter term. If the minSimilarity or maxEdits is greater than the Automaton's allowable range, this backs off to the classic (brute force) fuzzy terms enum method by calling GetAutomatonEnum(Int32, BytesRef) . Term enumerations are always ordered by Lucene.Net.Search.FuzzyTermsEnum.Comparer . Each term in the enumeration is greater than all that precede it. SortedSetSortField SortField for SortedSetDocValues . A SortedSetDocValues contains multiple values for a field, so sorting with this technique \"selects\" a value as the representative sort value for the document. By default, the minimum value in the set is selected as the sort value, but this can be customized. Selectors other than the default do have some limitations (see below) to ensure that all selections happen in constant-time for performance. Like sorting by string, this also supports sorting missing values as first or last, via MissingValue . Limitations: Fields containing System.Int32.MaxValue or more unique values are unsupported. Selectors other than the default MIN require optional codec support. However several codecs provided by Lucene, including the current default codec, support this. Enums KeepMode KeepMode determines which document id to consider as the master, all others being identified as duplicates. Selecting the \"first occurrence\" can potentially save on IO. ProcessingMode \"Full\" processing mode starts by setting all bits to false and only setting bits for documents that contain the given field and are identified as none-duplicates. \"Fast\" processing sets all bits to true then unsets all duplicate docs found for the given field. This approach avoids the need to read DocsEnum for terms that are seen to have a document frequency of exactly \"1\" (i.e. no duplicates). While a potentially faster approach , the downside is that bitsets produced will include bits set for documents that do not actually contain the field given. Selector Selects a value from the document's set to use as the sort value"
  },
  "Lucene.Net.Sandbox.Queries.KeepMode.html": {
    "href": "Lucene.Net.Sandbox.Queries.KeepMode.html",
    "title": "Enum KeepMode | Apache Lucene.NET 4.8.0-beta00011 Documentation",
    "keywords": "Enum KeepMode KeepMode determines which document id to consider as the master, all others being identified as duplicates. Selecting the \"first occurrence\" can potentially save on IO. Namespace : Lucene.Net.Sandbox.Queries Assembly : Lucene.Net.Sandbox.dll Syntax public enum KeepMode Fields Name Description KM_USE_FIRST_OCCURRENCE KM_USE_LAST_OCCURRENCE"
  },
  "Lucene.Net.Sandbox.Queries.ProcessingMode.html": {
    "href": "Lucene.Net.Sandbox.Queries.ProcessingMode.html",
    "title": "Enum ProcessingMode | Apache Lucene.NET 4.8.0-beta00011 Documentation",
    "keywords": "Enum ProcessingMode \"Full\" processing mode starts by setting all bits to false and only setting bits for documents that contain the given field and are identified as none-duplicates. \"Fast\" processing sets all bits to true then unsets all duplicate docs found for the given field. This approach avoids the need to read DocsEnum for terms that are seen to have a document frequency of exactly \"1\" (i.e. no duplicates). While a potentially faster approach , the downside is that bitsets produced will include bits set for documents that do not actually contain the field given. Namespace : Lucene.Net.Sandbox.Queries Assembly : Lucene.Net.Sandbox.dll Syntax public enum ProcessingMode Fields Name Description PM_FAST_INVALIDATION \"Fast\" processing sets all bits to true then unsets all duplicate docs found for the given field. This approach avoids the need to read DocsEnum for terms that are seen to have a document frequency of exactly \"1\" (i.e. no duplicates). While a potentially faster approach , the downside is that bitsets produced will include bits set for documents that do not actually contain the field given. PM_FULL_VALIDATION \"Full\" processing mode starts by setting all bits to false and only setting bits for documents that contain the given field and are identified as none-duplicates."
  },
  "Lucene.Net.Sandbox.Queries.Selector.html": {
    "href": "Lucene.Net.Sandbox.Queries.Selector.html",
    "title": "Enum Selector | Apache Lucene.NET 4.8.0-beta00011 Documentation",
    "keywords": "Enum Selector Selects a value from the document's set to use as the sort value Namespace : Lucene.Net.Sandbox.Queries Assembly : Lucene.Net.Sandbox.dll Syntax public enum Selector Fields Name Description MAX Selects the maximum value in the set MIDDLE_MAX Selects the middle value in the set. If the set has an even number of values, the higher of the middle two is chosen MIDDLE_MIN Selects the middle value in the set. If the set has an even number of values, the lower of the middle two is chosen. MIN Selects the minimum value in the set"
  },
  "Lucene.Net.Sandbox.Queries.SlowFuzzyQuery.html": {
    "href": "Lucene.Net.Sandbox.Queries.SlowFuzzyQuery.html",
    "title": "Class SlowFuzzyQuery | Apache Lucene.NET 4.8.0-beta00011 Documentation",
    "keywords": "Class SlowFuzzyQuery Implements the classic fuzzy search query. The similarity measurement is based on the Levenshtein (edit distance) algorithm. Note that, unlike FuzzyQuery , this query will silently allow for a (possibly huge) number of edit distances in comparisons, and may be extremely slow (comparing every term in the index). Inheritance System.Object Lucene.Net.Search.Query Lucene.Net.Search.MultiTermQuery SlowFuzzyQuery Inherited Members Lucene.Net.Search.MultiTermQuery.m_field Lucene.Net.Search.MultiTermQuery.m_rewriteMethod Lucene.Net.Search.MultiTermQuery.CONSTANT_SCORE_FILTER_REWRITE Lucene.Net.Search.MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE Lucene.Net.Search.MultiTermQuery.CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE Lucene.Net.Search.MultiTermQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT Lucene.Net.Search.MultiTermQuery.Field Lucene.Net.Search.MultiTermQuery.GetTermsEnum(Lucene.Net.Index.Terms) Lucene.Net.Search.MultiTermQuery.Rewrite(Lucene.Net.Index.IndexReader) Lucene.Net.Search.MultiTermQuery.MultiTermRewriteMethod Lucene.Net.Search.Query.Boost Lucene.Net.Search.Query.ToString() Lucene.Net.Search.Query.CreateWeight(Lucene.Net.Search.IndexSearcher) Query.ExtractTerms(ISet<Term>) Lucene.Net.Search.Query.Clone() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Sandbox.Queries Assembly : Lucene.Net.Sandbox.dll Syntax [Obsolete(\"Use FuzzyQuery instead.\")] public class SlowFuzzyQuery : MultiTermQuery Constructors | Improve this Doc View Source SlowFuzzyQuery(Term) Calls SlowFuzzyQuery(Term, Single) . Declaration public SlowFuzzyQuery(Term term) Parameters Type Name Description Lucene.Net.Index.Term term | Improve this Doc View Source SlowFuzzyQuery(Term, Single) Calls SlowFuzzyQuery(Term, Single) . Declaration public SlowFuzzyQuery(Term term, float minimumSimilarity) Parameters Type Name Description Lucene.Net.Index.Term term System.Single minimumSimilarity | Improve this Doc View Source SlowFuzzyQuery(Term, Single, Int32) Calls SlowFuzzyQuery(Term, Single) . Declaration public SlowFuzzyQuery(Term term, float minimumSimilarity, int prefixLength) Parameters Type Name Description Lucene.Net.Index.Term term System.Single minimumSimilarity System.Int32 prefixLength | Improve this Doc View Source SlowFuzzyQuery(Term, Single, Int32, Int32) Create a new SlowFuzzyQuery that will match terms with a similarity of at least minimumSimilarity to term . If a prefixLength > 0 is specified, a common prefix of that length is also required. Declaration public SlowFuzzyQuery(Term term, float minimumSimilarity, int prefixLength, int maxExpansions) Parameters Type Name Description Lucene.Net.Index.Term term the term to search for System.Single minimumSimilarity a value between 0 and 1 to set the required similarity between the query term and the matching terms. For example, for a minimumSimilarity of 0.5 a term of the same length as the query term is considered similar to the query term if the edit distance between both terms is less than length(term)*0.5 Alternatively, if minimumSimilarity is >= 1f, it is interpreted as a pure Levenshtein edit distance. For example, a value of 2f will match all terms within an edit distance of 2 from the query term. Edit distances specified in this way may not be fractional. System.Int32 prefixLength length of common (non-fuzzy) prefix System.Int32 maxExpansions the maximum number of terms to match. If this number is greater than MaxClauseCount when the query is rewritten, then the maxClauseCount will be used instead. Exceptions Type Condition System.ArgumentException if minimumSimilarity is >= 1 or < 0 or if prefixLength < 0 Fields | Improve this Doc View Source defaultMaxExpansions Declaration public static readonly int defaultMaxExpansions Field Value Type Description System.Int32 | Improve this Doc View Source defaultMinSimilarity Declaration public static readonly float defaultMinSimilarity Field Value Type Description System.Single | Improve this Doc View Source defaultPrefixLength Declaration public static readonly int defaultPrefixLength Field Value Type Description System.Int32 | Improve this Doc View Source m_term Declaration protected Term m_term Field Value Type Description Lucene.Net.Index.Term Properties | Improve this Doc View Source MinSimilarity Gets the minimum similarity that is required for this query to match. Returns float value between 0.0 and 1.0. Declaration public virtual float MinSimilarity { get; } Property Value Type Description System.Single | Improve this Doc View Source PrefixLength Gets the non-fuzzy prefix length. This is the number of characters at the start of a term that must be identical (not fuzzy) to the query term if the query is to match that term. Declaration public virtual int PrefixLength { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Term Gets the pattern term. Declaration public virtual Term Term { get; } Property Value Type Description Lucene.Net.Index.Term Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides MultiTermQuery.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Lucene.Net.Search.MultiTermQuery.GetHashCode() | Improve this Doc View Source GetTermsEnum(Terms, AttributeSource) Declaration protected override TermsEnum GetTermsEnum(Terms terms, AttributeSource atts) Parameters Type Name Description Lucene.Net.Index.Terms terms Lucene.Net.Util.AttributeSource atts Returns Type Description Lucene.Net.Index.TermsEnum Overrides Lucene.Net.Search.MultiTermQuery.GetTermsEnum(Lucene.Net.Index.Terms, Lucene.Net.Util.AttributeSource) | Improve this Doc View Source ToString(String) Declaration public override string ToString(string field) Parameters Type Name Description System.String field Returns Type Description System.String Overrides Query.ToString(String)"
  },
  "Lucene.Net.Sandbox.Queries.SlowFuzzyTermsEnum.html": {
    "href": "Lucene.Net.Sandbox.Queries.SlowFuzzyTermsEnum.html",
    "title": "Class SlowFuzzyTermsEnum | Apache Lucene.NET 4.8.0-beta00011 Documentation",
    "keywords": "Class SlowFuzzyTermsEnum Potentially slow fuzzy Lucene.Net.Index.TermsEnum for enumerating all terms that are similar to the specified filter term. If the minSimilarity or maxEdits is greater than the Automaton's allowable range, this backs off to the classic (brute force) fuzzy terms enum method by calling GetAutomatonEnum(Int32, BytesRef) . Term enumerations are always ordered by Lucene.Net.Search.FuzzyTermsEnum.Comparer . Each term in the enumeration is greater than all that precede it. Inheritance System.Object Lucene.Net.Index.TermsEnum Lucene.Net.Search.FuzzyTermsEnum SlowFuzzyTermsEnum Implements Lucene.Net.Util.IBytesRefIterator Inherited Members Lucene.Net.Search.FuzzyTermsEnum.m_minSimilarity Lucene.Net.Search.FuzzyTermsEnum.m_scaleFactor Lucene.Net.Search.FuzzyTermsEnum.m_termLength Lucene.Net.Search.FuzzyTermsEnum.m_maxEdits Lucene.Net.Search.FuzzyTermsEnum.m_raw Lucene.Net.Search.FuzzyTermsEnum.m_terms Lucene.Net.Search.FuzzyTermsEnum.m_termText Lucene.Net.Search.FuzzyTermsEnum.m_realPrefixLength FuzzyTermsEnum.GetAutomatonEnum(Int32, BytesRef) Lucene.Net.Search.FuzzyTermsEnum.SetEnum(Lucene.Net.Index.TermsEnum) Lucene.Net.Search.FuzzyTermsEnum.Next() Lucene.Net.Search.FuzzyTermsEnum.DocFreq Lucene.Net.Search.FuzzyTermsEnum.TotalTermFreq Lucene.Net.Search.FuzzyTermsEnum.Docs(Lucene.Net.Util.IBits, Lucene.Net.Index.DocsEnum, Lucene.Net.Index.DocsFlags) Lucene.Net.Search.FuzzyTermsEnum.DocsAndPositions(Lucene.Net.Util.IBits, Lucene.Net.Index.DocsAndPositionsEnum, Lucene.Net.Index.DocsAndPositionsFlags) Lucene.Net.Search.FuzzyTermsEnum.SeekExact(Lucene.Net.Util.BytesRef, Lucene.Net.Index.TermState) Lucene.Net.Search.FuzzyTermsEnum.GetTermState() Lucene.Net.Search.FuzzyTermsEnum.Comparer Lucene.Net.Search.FuzzyTermsEnum.Ord Lucene.Net.Search.FuzzyTermsEnum.SeekExact(Lucene.Net.Util.BytesRef) Lucene.Net.Search.FuzzyTermsEnum.SeekCeil(Lucene.Net.Util.BytesRef) FuzzyTermsEnum.SeekExact(Int64) Lucene.Net.Search.FuzzyTermsEnum.Term Lucene.Net.Search.FuzzyTermsEnum.MinSimilarity Lucene.Net.Search.FuzzyTermsEnum.ScaleFactor Lucene.Net.Index.TermsEnum.Attributes Lucene.Net.Index.TermsEnum.Docs(Lucene.Net.Util.IBits, Lucene.Net.Index.DocsEnum) Lucene.Net.Index.TermsEnum.DocsAndPositions(Lucene.Net.Util.IBits, Lucene.Net.Index.DocsAndPositionsEnum) Lucene.Net.Index.TermsEnum.EMPTY System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Lucene.Net.Sandbox.Queries Assembly : Lucene.Net.Sandbox.dll Syntax [Obsolete(\"Use FuzzyTermsEnum instead.\")] public class SlowFuzzyTermsEnum : FuzzyTermsEnum, IBytesRefIterator Constructors | Improve this Doc View Source SlowFuzzyTermsEnum(Terms, AttributeSource, Term, Single, Int32) Declaration public SlowFuzzyTermsEnum(Terms terms, AttributeSource atts, Term term, float minSimilarity, int prefixLength) Parameters Type Name Description Lucene.Net.Index.Terms terms Lucene.Net.Util.AttributeSource atts Lucene.Net.Index.Term term System.Single minSimilarity System.Int32 prefixLength Methods | Improve this Doc View Source MaxEditDistanceChanged(BytesRef, Int32, Boolean) Declaration protected override void MaxEditDistanceChanged(BytesRef lastTerm, int maxEdits, bool init) Parameters Type Name Description Lucene.Net.Util.BytesRef lastTerm System.Int32 maxEdits System.Boolean init Overrides FuzzyTermsEnum.MaxEditDistanceChanged(BytesRef, Int32, Boolean) Implements Lucene.Net.Util.IBytesRefIterator"
  },
  "Lucene.Net.Sandbox.Queries.SortedSetSortField.html": {
    "href": "Lucene.Net.Sandbox.Queries.SortedSetSortField.html",
    "title": "Class SortedSetSortField | Apache Lucene.NET 4.8.0-beta00011 Documentation",
    "keywords": "Class SortedSetSortField SortField for SortedSetDocValues . A SortedSetDocValues contains multiple values for a field, so sorting with this technique \"selects\" a value as the representative sort value for the document. By default, the minimum value in the set is selected as the sort value, but this can be customized. Selectors other than the default do have some limitations (see below) to ensure that all selections happen in constant-time for performance. Like sorting by string, this also supports sorting missing values as first or last, via MissingValue . Limitations: Fields containing System.Int32.MaxValue or more unique values are unsupported. Selectors other than the default MIN require optional codec support. However several codecs provided by Lucene, including the current default codec, support this. Inheritance System.Object Lucene.Net.Search.SortField SortedSetSortField Inherited Members Lucene.Net.Search.SortField.FIELD_SCORE Lucene.Net.Search.SortField.FIELD_DOC Lucene.Net.Search.SortField.m_missingValue Lucene.Net.Search.SortField.STRING_FIRST Lucene.Net.Search.SortField.STRING_LAST Lucene.Net.Search.SortField.Field Lucene.Net.Search.SortField.Type Lucene.Net.Search.SortField.Parser Lucene.Net.Search.SortField.IsReverse Lucene.Net.Search.SortField.ComparerSource Lucene.Net.Search.SortField.BytesComparer Lucene.Net.Search.SortField.Rewrite(Lucene.Net.Search.IndexSearcher) Lucene.Net.Search.SortField.NeedsScores System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Lucene.Net.Sandbox.Queries Assembly : Lucene.Net.Sandbox.dll Syntax public class SortedSetSortField : SortField Constructors | Improve this Doc View Source SortedSetSortField(String, Boolean) Creates a sort, possibly in reverse, by the minimum value in the set for the document. Declaration public SortedSetSortField(string field, bool reverse) Parameters Type Name Description System.String field Name of field to sort by. Must not be null. System.Boolean reverse True if natural order should be reversed. | Improve this Doc View Source SortedSetSortField(String, Boolean, Selector) Creates a sort, possibly in reverse, specifying how the sort value from the document's set is selected. Declaration public SortedSetSortField(string field, bool reverse, Selector selector) Parameters Type Name Description System.String field Name of field to sort by. Must not be null. System.Boolean reverse True if natural order should be reversed. Selector selector custom selector for choosing the sort value from the set. NOTE: selectors other than MIN require optional codec support. Properties | Improve this Doc View Source MissingValue Set how missing values (the empty set) are sorted. Note that this must be Lucene.Net.Search.SortField.STRING_FIRST or Lucene.Net.Search.SortField.STRING_LAST . Declaration public override object MissingValue { get; set; } Property Value Type Description System.Object Overrides Lucene.Net.Search.SortField.MissingValue | Improve this Doc View Source Selector Returns the selector in use for this sort Declaration public Selector Selector { get; } Property Value Type Description Selector Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides SortField.Equals(Object) | Improve this Doc View Source GetComparer(Int32, Int32) Declaration public override FieldComparer GetComparer(int numHits, int sortPos) Parameters Type Name Description System.Int32 numHits System.Int32 sortPos Returns Type Description Lucene.Net.Search.FieldComparer Overrides SortField.GetComparer(Int32, Int32) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Lucene.Net.Search.SortField.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides Lucene.Net.Search.SortField.ToString()"
  },
  "overview.html": {
    "href": "overview.html",
    "title": "Lucene.Net.Sandbox | Apache Lucene.NET 4.8.0-beta00011 Documentation",
    "keywords": "Lucene.Net.Sandbox <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> Sandbox"
  }
}